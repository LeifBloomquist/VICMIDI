------- FILE vicmidi.asm LEVEL 1 PASS 2
      1  acbc ????						; VIC-20 MIDI Interface
      2  acbc ????						; By David Viens and Leif Bloomquist, portions by
      3  acbc ????						; Michael Kircher and Viznut
      4  acbc ????
      5  acbc ????						; ----------------------------------------------------------------------------
      6  acbc ????
      7  acbc ????				      processor	6502	; VIC-20
      8  acbc ????
      9  acbc ????						; Assume no memory expansion.	 Compile as Cartridge ROM in Block 5.
     10  a000					      org	$A000	; Block 5
     11  a000
     12  a000							; Macro and equate includes (must be at start)
------- FILE macros.asm LEVEL 2 PASS 2
      0  a000					      include	"macros.asm"
      1  a000
      2  a000							; ==============================================================
      3  a000							; Macro wrapping the fast hex poke
      4  a000							; ==============================================================
      5  a000
      6  a000					      MAC	hexpoke
      7  a000					      lda	#<{1}	; Low byte
      8  a000					      sta	$22
      9  a000					      lda	#>{1}	; High byte
     10  a000					      sta	$23
     11  a000
     12  a000					      lda	{2}	; Note - address
     13  a000					      jsr	hexstr
     14  a000					      ENDM
     15  a000
     16  a000							; ==============================================================
     17  a000							; Macro to position the cursor
     18  a000							; ==============================================================
     19  a000
     20  a000					      MAC	plot
     21  a000					      ldy	#{1}
     22  a000					      ldx	#{2}
     23  a000					      clc
     24  a000					      jsr	$E50A	; PLOT - same on 64 and VIC
     25  a000					      ENDM
     26  a000
     27  a000							; ==============================================================
     28  a000							; Macro to print a string
     29  a000							; ==============================================================
     30  a000
     31  a000					      MAC	printstring
     32  a000					      ldy	#>{0}
     33  a000					      lda	#<{0}
     34  a000					      jsr	STROUT
     35  a000					      ENDM
     36  a000
     37  a000							; ==============================================================
     38  a000							; Macro to print a byte (Hex)
     39  a000							; ==============================================================
     40  a000
     41  a000					      MAC	printbyte
     42  a000					      ldx	#$00
     43  a000					      ldy	#$0F
     44  a000					      lda	{0}
     45  a000					      jsr	printnum
     46  a000					      ENDM
------- FILE vicmidi.asm
------- FILE equates.asm LEVEL 2 PASS 2
      0  a000					      include	"equates.asm"
      1  a000							; --------------------------------------------------------------------------------------------------
      2  a000							;;free zero page (to use as vars)
      3  a000							;INDEX1: $0022-$0023, First utility pointer		       used by HEXPOKE
      4  a000							;INDEX2: $0024-$0025, Second utility pointer		       bytesexpected, midicounter
      5  a000							;FORNAM: $0049-$004A, Pointer to FOR/NEXT index variable etc  channel
      6  a000							;TEMPF3: $004E-$0052, Temporary FLPT storage		       Used by keyboard routines
      7  a000							;TEMPF1: $0057-$005B, Temporary FLPT storage		       Used by setwave
      8  a000							;TEMPF2: $005C-$0060: Temporary FLPT storage		       FIFO pointers
      9  a000							;FAC:	  $0061-$0066, Floating-point Accumulator (FAC)        Flags for Poly mode
     10  a000							;AFAC:   $0069-$006E, Alternative/Auxilary FAC 	       69=last note
     11  a000
     12  a000							; ---- Zero Page Addresses -------------------------------------------------
     13  a000
     14  a000		       00 24	   midicounter =	$24
     15  a000		       00 25	   bytesexpected =	$25
     16  a000
     17  a000		       00 49	   channel    =	$49
     18  a000		       00 4a	   bank       =	$4A	; 0=NTSC Normal, 1=PAL Normal, 2=NTSC Alt., 3=PAL Alt.
     19  a000
     20  a000							; Previous keyboard column bits.
     21  a000		       00 4e	   c0	      =	$4E	; 2,4,6,8,(...)
     22  a000		       00 4f	   c1	      =	$4F	; q,e,t,u,(...)
     23  a000		       00 50	   c2	      =	$50	; w,r,y,i,p,(...)
     24  a000		       00 51	   c3	      =	$51	; 1,3,5,7,(...)
     25  a000
     26  a000							; Used by setwave
     27  a000		       00 57	   TMP	      =	$57
     28  a000		       00 58	   TMP2       =	$58
     29  a000
     30  a000		       00 5c	   write_pointer =	$5C	; FIFO current write pointer - incremented on byte received
     31  a000		       00 5d	   read_pointer =	$5D	; FIFO current read pointer - incremented on byte removed
     32  a000
     33  a000		       00 5e	   currentvalue =	$5E	; Current value for voice settings
     34  a000
     35  a000		       00 61	   poly_flags =	$61	; Flags for polymode
     36  a000							; Also 62,63,64
     37  a000
     38  a000		       00 69	   lastnote   =	$69	; Remembers last note, so Note Off applies to that note only
     39  a000							; Also 69,6A,6B
     40  a000
     41  a000		       00 6c	   temp1      =	$6C	; Used for screen colors
     42  a000		       00 6d	   tempx      =	$6D	; Used by program change
     43  a000
     44  a000							;*00FB-00FE  251-254  Operating system free zero page space
     45  a000		       00 fb	   statusbyte =	$FB
     46  a000		       00 fc	   mididata0  =	$FC
     47  a000		       00 fd	   mididata1  =	$FD
     48  a000		       00 fe	   mididata2  =	$FE	; If needed
     49  a000
     50  a000							; ---- Non Zero Page Addresses -----------------------------------------------
     51  a000
     52  a000							; Store viznut waveform being used per voice  (located neat start of BASIC space)
     53  a000		       10 10	   waveform1  =	$1010
     54  a000		       10 11	   waveform2  =	$1011
     55  a000		       10 12	   waveform3  =	$1012
     56  a000		       10 13	   waveform4  =	$1013
     57  a000
     58  a000							; Scratch space for setwave parameters
     59  a000		       10 20	   setwavechannel =	$1020	; y = channel ($0a..$0c)
     60  a000		       10 21	   setwavefrequency =	$1021	; x = initial frequency
     61  a000		       10 22	   setwaveshiftreg =	$1022	; a = shift register contents
     62  a000
     63  a000							; Setwave Target
     64  a000		       11 00	   setwave    =	$1100	; Setwave code has to all be on one page.
     65  a000
     66  a000							; Input Buffer
     67  a000		       12 00	   buffer     =	$1200
     68  a000
     69  a000							; Font (copied here from ROM)
     70  a000		       18 00	   font       =	$1800	; 6144 decimal
     71  a000
     72  a000							; ST16C450 Registers
     73  a000		       9c 00	   UART_RXTX  =	$9C00
     74  a000		       9c 01	   UART_IER   =	$9C01
     75  a000		       9c 02	   UART_ISR   =	$9C02
     76  a000		       9c 03	   UART_LCR   =	$9C03
     77  a000		       9c 05	   UART_LSR   =	$9C05
     78  a000		       9c 07	   UART_SCRATCHPAD =	$9C07
     79  a000		       9c 00	   UART_DIVISOR_LSB =	$9C00	; Yes, same as UART_RXTX
     80  a000		       9c 01	   UART_DIVISOR_MSB =	$9C01
     81  a000
     82  a000							;Sound and Video Registers
     83  a000		       90 0a	   sound_voice1 =	$900A	; Frequency for oscillator 1 (low)    (on: 128-255)
     84  a000		       90 0b	   sound_voice2 =	$900B	; Frequency for oscillator 2 (medium) (on: 128-255)
     85  a000		       90 0c	   sound_voice3 =	$900C	; Frequency for oscillator 3 (high)   (on: 128-255)
     86  a000		       90 0d	   sound_noise =	$900D	; Frequency of noise source	       (on: 128-255)
     87  a000		       90 0e	   sound_volume =	$900E	; Bits 0-3 sets volume of all sound.  Bits 4-7 are auxiliary color information (not used)
     88  a000		       90 0f	   screen_colors =	$900F
     89  a000
     90  a000							;Screen locations
     91  a000		       1e 00	   screen_start =	$1E00
     92  a000		       1e 4d	   midi_display =	$1E4D
     93  a000		       1e 77	   voice_display =	$1E77
     94  a000		       1f f9	   spin_display =	$1FF9	; Lower-right corner
     95  a000		       97 f9	   spin_color =	spin_display + $7800
     96  a000
     97  a000
     98  a000							; Kernal/BASIC Routines
     99  a000		       f2 7a	   CHROUT     =	$f27a
    100  a000		       e5 5f	   CLRSCREEN  =	$e55f
    101  a000		       e5 81	   HOME       =	$E581
    102  a000		       cb 1e	   STROUT     =	$CB1E	; Print string pointed to by (A/Y) until zero byte.
    103  a000
    104  a000		       00 08	   CG_DCS     =	8	;disable shift+C=
    105  a000		       00 09	   CG_ECS     =	9	;enable shift+C=
    106  a000
    107  a000		       00 0e	   CG_LCS     =	14	;switch to lowercase
    108  a000		       00 8e	   CG_UCS     =	142	;switch to uppercase
    109  a000
    110  a000							;cursor movement
    111  a000		       00 13	   CS_HOM     =	19
    112  a000		       00 91	   CS_U       =	145
    113  a000		       00 11	   CS_D       =	17
    114  a000		       00 9d	   CS_L       =	157
    115  a000		       00 1d	   CS_R       =	29
    116  a000
    117  a000		       00 0d	   CRLF       =	13
    118  a000
    119  a000							; EOF!
------- FILE vicmidi.asm
     15  a000
     16  a000							; ---- Startup Code ---------------------------------------------------------
     17  a000		       09 a0		      dc.w	START	; Entry point for power up
     18  a002		       61 a5		      dc.w	RESTORE	; Entry point for warm start (RESTORE)
     19  a004
     20  a004		       41 30 c3 c2*	      dc.b	"A0",$C3,$C2,$CD	; 'A0CBM' boot string
     21  a009
     22  a009				   START
     23  a009							;Kernel Init
     24  a009		       20 8d fd 	      jsr	$fd8d	; RAMTAS - Initialise System Constants
     25  a00c		       20 52 fd 	      jsr	$fd52	; Init Vectors
     26  a00f		       20 f9 fd 	      jsr	$fdf9	; Init I/O
     27  a012		       20 18 e5 	      jsr	$e518	; Init I/O
     28  a015
     29  a015							;BASIC Init (Partial)
     30  a015		       20 5b e4 	      jsr	$e45b	; Init Vectors
     31  a018		       20 a4 e3 	      jsr	$e3a4	; BASIC RAM
     32  a01b		       20 04 e4 	      jsr	$e404	; INIT Message (needed (?) so keycheck routines work)
     33  a01e
     34  a01e				   entry
     35  a01e		       20 4e a3 	      jsr	mainscreen
     36  a021		       20 c5 a5 	      jsr	setup_pal
     37  a024		       20 7d a3 	      jsr	setwavecopy
     38  a027		       20 f9 a4 	      jsr	checkuart
     39  a02a		       20 3c a5 	      jsr	setupirq
     40  a02d		       20 22 a5 	      jsr	resetuart
     41  a030
     42  a030							; Default to maximum volume
     43  a030		       a9 0f		      lda	#$0F
     44  a032		       20 2b a2 	      jsr	setvolume
     45  a035
     46  a035							; Initial Values
     47  a035		       a9 00		      lda	#$00
     48  a037		       85 24		      sta	midicounter	; midicounter=0
     49  a039		       85 fb		      sta	statusbyte	; statusbyte=0
     50  a03b		       85 fc		      sta	mididata0	; mididata0=0
     51  a03d		       85 fd		      sta	mididata1	; mididata1=0
     52  a03f		       85 fe		      sta	mididata2	; mididata2=0
     53  a041		       85 4e		      sta	c0	; no keys are pressed in 7F
     54  a043		       85 4f		      sta	c1	; no keys are pressed in BF
     55  a045		       85 50		      sta	c2	; no keys are pressed in FD
     56  a047		       85 51		      sta	c3	; no keys are pressed in FE
     57  a049		       85 69		      sta	lastnote+0	; Clear
     58  a04b		       85 6a		      sta	lastnote+1	;    last
     59  a04d		       85 6b		      sta	lastnote+2	;	note
     60  a04f		       85 61		      sta	poly_flags+0	; Clear
     61  a051		       85 62		      sta	poly_flags+1	;   poly
     62  a053		       85 63		      sta	poly_flags+2	;     flags
     63  a055		       8d f9 97 	      sta	spin_color
     64  a058		       85 5c		      sta	write_pointer
     65  a05a		       85 5d		      sta	read_pointer
     66  a05c		       8d 10 10 	      sta	waveform1
     67  a05f		       8d 11 10 	      sta	waveform2
     68  a062		       8d 12 10 	      sta	waveform3
     69  a065		       8d 13 10 	      sta	waveform4
     70  a068
     71  a068							;;; ==========================================================================
     72  a068							;;; main LOOP!
     73  a068				   loop
     74  a068		       ee f9 97 	      inc	spin_color	; Prove we aren't 'frozen'
     75  a06b							;jsr GetKey	  ; create events from keyboard if needed - TODO
     76  a06b
     77  a06b		       a5 5d		      lda	read_pointer
     78  a06d		       c5 5c		      cmp	write_pointer
     79  a06f		       f0 f7		      beq	loop	; Pointers match, no data
     80  a071							;;; ==========================================================================
     81  a071
     82  a071							; We have data!
     83  a071							; Advance pointer for next read
     84  a071		       e6 5d		      inc	read_pointer
     85  a073
     86  a073							; Read current byte
     87  a073		       aa		      tax		; Since A still contains the unincremented pointer
     88  a074		       bd 00 12 	      lda	buffer,x
     89  a077
     90  a077							; If Bit 7 is set, it means it's a status byte and we need to prepare for a new message
     91  a077		       10 18		      bpl	data	; Not a status byte
     92  a079
     93  a079							; Store the status byte
     94  a079		       85 fb		      sta	statusbyte
     95  a07b
     96  a07b							; Reset the midi counter to 0
     97  a07b		       a2 00		      ldx	#$00
     98  a07d		       86 24		      stx	midicounter
     99  a07f
    100  a07f							; Also, check how many bytes we'll need - Normally 3, but 2 for Program Change
    101  a07f		       29 f0		      and	#$F0	; Get the upper nybble
    102  a081		       c9 c0		      cmp	#$C0	; Program change
    103  a083		       d0 05		      bne	bytes2
    104  a085
    105  a085				   bytes1
    106  a085		       a0 01		      ldy	#$01
    107  a087		       4c 8c a0 	      jmp	setbytes
    108  a08a
    109  a08a				   bytes2
    110  a08a		       a0 02		      ldy	#$02
    111  a08c
    112  a08c				   setbytes
    113  a08c		       84 25		      sty	bytesexpected
    114  a08e		       4c 68 a0 	      jmp	loop	; Wait for next byte
    115  a091
    116  a091							; ----------------------------------------------------------------------------
    117  a091							; Store data byte
    118  a091
    119  a091				   data
    120  a091		       a6 24		      ldx	midicounter	; What byte are we at?
    121  a093		       95 fc		      sta	mididata0,x	; Store received midi data pointed by x
    122  a095
    123  a095		       e8		      inx		; x++
    124  a096		       86 24		      stx	midicounter	; and store x
    125  a098
    126  a098		       e4 25		      cpx	bytesexpected	; Number of data bytes expected in this MIDI message (i.e. 2)
    127  a09a		       f0 03		      beq	messageproc	; Complete MIDI message received.
    128  a09c
    129  a09c							; Not complete, wait for more bytes.
    130  a09c		       4c 68 a0 	      jmp	loop
    131  a09f
    132  a09f							; ----------------------------------------------------------------------------
    133  a09f							; Process a complete MIDI message
    134  a09f
    135  a09f				   messageproc
    136  a09f							; Reset midicounter back to 0 for next message -
    137  a09f							; This might be redundant, see above line 100
    138  a09f		       a9 00		      lda	#$00
    139  a0a1		       85 24		      sta	midicounter
    140  a0a3
    141  a0a3							; Display received message bytes
      0  a0a3					      HEXPOKE	(midi_display+0),statusbyte
      1  a0a3		       a9 4d		      lda	#<(midi_display+0)
      2  a0a5		       85 22		      sta	$22
      3  a0a7		       a9 1e		      lda	#>(midi_display+0)
      4  a0a9		       85 23		      sta	$23
      5  a0ab
      6  a0ab		       a5 fb		      lda	statusbyte
      7  a0ad		       20 79 a5 	      jsr	hexstr
      0  a0b0					      HEXPOKE	(midi_display+3),mididata0
      1  a0b0		       a9 50		      lda	#<(midi_display+3)
      2  a0b2		       85 22		      sta	$22
      3  a0b4		       a9 1e		      lda	#>(midi_display+3)
      4  a0b6		       85 23		      sta	$23
      5  a0b8
      6  a0b8		       a5 fc		      lda	mididata0
      7  a0ba		       20 79 a5 	      jsr	hexstr
      0  a0bd					      HEXPOKE	(midi_display+6),mididata1
      1  a0bd		       a9 53		      lda	#<(midi_display+6)
      2  a0bf		       85 22		      sta	$22
      3  a0c1		       a9 1e		      lda	#>(midi_display+6)
      4  a0c3		       85 23		      sta	$23
      5  a0c5
      6  a0c5		       a5 fd		      lda	mididata1
      7  a0c7		       20 79 a5 	      jsr	hexstr
    145  a0ca
    146  a0ca							; Save channel
    147  a0ca		       a5 fb		      lda	statusbyte
    148  a0cc		       29 0f		      and	#$0F
    149  a0ce		       85 49		      sta	channel
    150  a0d0
    151  a0d0							; Determine Command
    152  a0d0		       a5 fb		      lda	statusbyte	; Status Byte
    153  a0d2		       29 f0		      and	#$F0	; Get the upper nybble
    154  a0d4
    155  a0d4		       c9 80		      cmp	#$80	; Note Off
    156  a0d6		       f0 0f		      beq	donoteoff
    157  a0d8
    158  a0d8		       c9 90		      cmp	#$90	; Note On
    159  a0da		       f0 11		      beq	donoteon
    160  a0dc
    161  a0dc		       c9 b0		      cmp	#$B0	; Control Change
    162  a0de		       f0 13		      beq	docontrolchange
    163  a0e0
    164  a0e0		       c9 c0		      cmp	#$C0	; Program Change
    165  a0e2		       f0 15		      beq	doprogramchange
    166  a0e4
    167  a0e4							; All others (Aftertouch, etc.) ignored.
    168  a0e4		       4c 68 a0 	      jmp	loop
    169  a0e7
    170  a0e7				   donoteoff
    171  a0e7		       20 a3 a1 	      jsr	noteoff
    172  a0ea		       4c 68 a0 	      jmp	loop
    173  a0ed
    174  a0ed				   donoteon
    175  a0ed		       20 ff a0 	      jsr	noteon
    176  a0f0		       4c 68 a0 	      jmp	loop
    177  a0f3
    178  a0f3				   docontrolchange
    179  a0f3		       20 bc a1 	      jsr	controlchange
    180  a0f6		       4c 68 a0 	      jmp	loop
    181  a0f9
    182  a0f9				   doprogramchange
    183  a0f9		       20 56 a2 	      jsr	programchange
    184  a0fc		       4c 68 a0 	      jmp	loop
    185  a0ff
    186  a0ff
    187  a0ff							;*****************************************************************************
    188  a0ff							;*************************  MIDI Processing  *********************************
    189  a0ff							;*****************************************************************************
    190  a0ff
    191  a0ff							; ---- Note On ---------------------------------------------------
    192  a0ff							; 9c nn vv
    193  a0ff
    194  a0ff				   noteon
    195  a0ff							; Special Case: Treat Velocity=0 as Note Off.	Velocity ignored otherwise.
    196  a0ff		       a5 fd		      lda	mididata1
    197  a101		       d0 03		      bne	noteon_contd
    198  a103		       4c a3 a1 	      jmp	noteoff
    199  a106
    200  a106				   noteon_contd
    201  a106		       a4 49		      ldy	channel	; Y now contains Channel # (0-offset)
    202  a108		       a6 fc		      ldx	mididata0	; X now contains MIDI Note #
    203  a10a
    204  a10a							; Special Case: Channel 5 used for Poly mode
    205  a10a		       c0 04		      cpy	#$04
    206  a10c		       d0 03		      bne	savenote
    207  a10e		       20 da a5 	      jsr	get_poly_voice
    208  a111
    209  a111				   savenote
    210  a111							; Save the note# so that later Note Offs only apply to this note.
    211  a111		       8a		      txa
    212  a112		       99 69 00 	      sta	lastnote,y
    213  a115
    214  a115							; Perform a table lookup of MIDI Note# to VIC Register
    215  a115							; Table to use depends on bank/voice/channel
    216  a115
    217  a115							; Check the bank
    218  a115		       a5 4a		      lda	bank
    219  a117
    220  a117		       c9 00		      cmp	#$00
    221  a119		       f0 0d		      beq	lookups_ntsc
    222  a11b
    223  a11b		       c9 01		      cmp	#$01
    224  a11d		       f0 32		      beq	lookups_pal
    225  a11f
    226  a11f		       c9 02		      cmp	#$02
    227  a121		       f0 57		      beq	lookups_alt
    228  a123
    229  a123		       c9 03		      cmp	#$03
    230  a125		       f0 53		      beq	lookups_alt
    231  a127
    232  a127							; Ignore all other banks
    233  a127		       60		      rts
    234  a128
    235  a128
    236  a128							; ------ NTSC -------
    237  a128
    238  a128				   lookups_ntsc
    239  a128		       c0 00		      cpy	#$00
    240  a12a		       f0 0d		      beq	vlook1_ntsc
    241  a12c
    242  a12c		       c0 01		      cpy	#$01
    243  a12e		       f0 0f		      beq	vlook2_ntsc
    244  a130
    245  a130		       c0 02		      cpy	#$02
    246  a132		       f0 11		      beq	vlook3_ntsc
    247  a134
    248  a134		       c0 03		      cpy	#$03
    249  a136		       f0 13		      beq	vlook4_ntsc
    250  a138
    251  a138							; Ignore all other channels
    252  a138		       60		      rts
    253  a139
    254  a139				   vlook1_ntsc
    255  a139		       bd bc a6 	      lda	voice1lookup_ntsc,x
    256  a13c		       4c dc a2 	      jmp	setvoice
    257  a13f
    258  a13f				   vlook2_ntsc
    259  a13f		       bd 3c a7 	      lda	voice2lookup_ntsc,x
    260  a142		       4c dc a2 	      jmp	setvoice
    261  a145
    262  a145				   vlook3_ntsc
    263  a145		       bd bc a7 	      lda	voice3lookup_ntsc,x
    264  a148		       4c dc a2 	      jmp	setvoice
    265  a14b
    266  a14b				   vlook4_ntsc
    267  a14b		       bd 3c a8 	      lda	voice4lookup_ntsc,x
    268  a14e		       4c dc a2 	      jmp	setvoice
    269  a151
    270  a151							; ------ PAL -------
    271  a151
    272  a151				   lookups_pal
    273  a151		       c0 00		      cpy	#$00
    274  a153		       f0 0d		      beq	vlook1_pal
    275  a155
    276  a155		       c0 01		      cpy	#$01
    277  a157		       f0 0f		      beq	vlook2_pal
    278  a159
    279  a159		       c0 02		      cpy	#$02
    280  a15b		       f0 11		      beq	vlook3_pal
    281  a15d
    282  a15d		       c0 03		      cpy	#$03
    283  a15f		       f0 13		      beq	vlook4_pal
    284  a161
    285  a161							; Ignore all other channels
    286  a161		       60		      rts
    287  a162
    288  a162				   vlook1_pal
    289  a162		       bd bc a8 	      lda	voice1lookup_pal,x
    290  a165		       4c dc a2 	      jmp	setvoice
    291  a168
    292  a168				   vlook2_pal
    293  a168		       bd 3c a9 	      lda	voice2lookup_pal,x
    294  a16b		       4c dc a2 	      jmp	setvoice
    295  a16e
    296  a16e				   vlook3_pal
    297  a16e		       bd bc a9 	      lda	voice3lookup_pal,x
    298  a171		       4c dc a2 	      jmp	setvoice
    299  a174
    300  a174				   vlook4_pal
    301  a174		       bd 3c aa 	      lda	voice4lookup_pal,x
    302  a177		       4c dc a2 	      jmp	setvoice
    303  a17a
    304  a17a							; ------ Alternate -------
    305  a17a
    306  a17a				   lookups_alt
    307  a17a		       c0 00		      cpy	#$00
    308  a17c		       f0 0d		      beq	vlook1_alt
    309  a17e
    310  a17e		       c0 01		      cpy	#$01
    311  a180		       f0 0f		      beq	vlook2_alt
    312  a182
    313  a182		       c0 02		      cpy	#$02
    314  a184		       f0 11		      beq	vlook3_alt
    315  a186
    316  a186		       c0 03		      cpy	#$03
    317  a188		       f0 13		      beq	vlook4_alt
    318  a18a
    319  a18a							; Ignore all other channels
    320  a18a		       60		      rts
    321  a18b
    322  a18b				   vlook1_alt
    323  a18b		       bd bc aa 	      lda	voice1lookup_alt,x
    324  a18e		       4c dc a2 	      jmp	setvoice
    325  a191
    326  a191				   vlook2_alt
    327  a191		       bd 3c ab 	      lda	voice2lookup_alt,x
    328  a194		       4c dc a2 	      jmp	setvoice
    329  a197
    330  a197				   vlook3_alt
    331  a197		       bd bc ab 	      lda	voice3lookup_alt,x
    332  a19a		       4c dc a2 	      jmp	setvoice
    333  a19d
    334  a19d				   vlook4_alt
    335  a19d		       bd 3c ac 	      lda	voice4lookup_alt,x
    336  a1a0		       4c dc a2 	      jmp	setvoice
    337  a1a3
    338  a1a3							; ---- Note Off --------------------------------------------------------------
    339  a1a3							; 8c nn vv
    340  a1a3
    341  a1a3				   noteoff
    342  a1a3		       a4 49		      ldy	channel	; Y now contains channel #
    343  a1a5
    344  a1a5							; Special Case: Channel 5 used for Poly mode
    345  a1a5		       c0 04		      cpy	#$04
    346  a1a7		       d0 06		      bne	noteoff_check
    347  a1a9
    348  a1a9		       20 ef a5 	      jsr	get_poly_voice_off
    349  a1ac		       4c b6 a1 	      jmp	noteoff_off
    350  a1af
    351  a1af				   noteoff_check
    352  a1af							;For Channels 1-4
    353  a1af							;Check if it matches the last.  If not, ignore.
    354  a1af		       b9 69 00 	      lda	lastnote,y
    355  a1b2		       c5 fc		      cmp	mididata0
    356  a1b4		       d0 05		      bne	noteoff_x
    357  a1b6
    358  a1b6				   noteoff_off
    359  a1b6		       a9 00		      lda	#$00	; Off
    360  a1b8		       4c dc a2 	      jmp	setvoice
    361  a1bb
    362  a1bb				   noteoff_x
    363  a1bb		       60		      rts
    364  a1bc
    365  a1bc							; ---- Control Change --------------------------------------------------------
    366  a1bc							; Bc CC vv
    367  a1bc
    368  a1bc				   controlchange
    369  a1bc		       a4 49		      ldy	channel	; Y now contains channel #
    370  a1be
    371  a1be		       a5 fc		      lda	mididata0	; Controller number
    372  a1c0
    373  a1c0		       c9 00		      cmp	#00	; Bank select - decimal
    374  a1c2		       f0 15		      beq	bankselect
    375  a1c4
    376  a1c4		       c9 01		      cmp	#01	; Modulation Wheel (coarse) - decimal
    377  a1c6		       f0 57		      beq	modwheel
    378  a1c8
    379  a1c8		       c9 07		      cmp	#07	; Volume (coarse) - decimal
    380  a1ca		       f0 5a		      beq	volume
    381  a1cc
    382  a1cc		       c9 4a		      cmp	#74	; Brightness - decimal
    383  a1ce		       f0 6d		      beq	screencolors
    384  a1d0
    385  a1d0		       c9 78		      cmp	#120	; All Sound Off - decimal
    386  a1d2		       f0 7d		      beq	soundoff
    387  a1d4
    388  a1d4		       c9 7b		      cmp	#123	; All Notes Off - decimal
    389  a1d6		       f0 79		      beq	soundoff
    390  a1d8
    391  a1d8							; Ignore all the rest
    392  a1d8		       60		      rts
    393  a1d9
    394  a1d9							; ---- Bank Select -----------------------------------------------------------
    395  a1d9							; Bc 00 vv
    396  a1d9
    397  a1d9				   bankselect
    398  a1d9		       a5 fd		      lda	mididata1
    399  a1db		       29 03		      and	#$03	; A contains bank, 0-3
    400  a1dd		       85 4a		      sta	bank
    401  a1df
    402  a1df				   showbank
      0  a1df					      HEXPOKE	(voice_display+132),bank
      1  a1df		       a9 fb		      lda	#<(voice_display+132)
      2  a1e1		       85 22		      sta	$22
      3  a1e3		       a9 1e		      lda	#>(voice_display+132)
      4  a1e5		       85 23		      sta	$23
      5  a1e7
      6  a1e7		       a5 4a		      lda	bank
      7  a1e9		       20 79 a5 	      jsr	hexstr
    404  a1ec
      0  a1ec					      PLOT	9,13
      1  a1ec		       a0 09		      ldy	#9
      2  a1ee		       a2 0d		      ldx	#13
      3  a1f0		       18		      clc
      4  a1f1		       20 0a e5 	      jsr	$E50A
    406  a1f4
    407  a1f4		       a5 4a		      lda	bank
    408  a1f6
    409  a1f6		       c9 00		      cmp	#$00
    410  a1f8		       f0 0d		      beq	ntsc
    411  a1fa
    412  a1fa		       c9 01		      cmp	#$01
    413  a1fc		       f0 11		      beq	pal
    414  a1fe
    415  a1fe		       c9 02		      cmp	#$02
    416  a200		       f0 15		      beq	alt
    417  a202
    418  a202		       c9 03		      cmp	#$03
    419  a204		       f0 11		      beq	alt
    420  a206
    421  a206							; Ignore the rest
    422  a206		       60		      rts
    423  a207
    424  a207				   ntsc
      0  a207					      PRINTSTRING	ntscstring
      1  a207		       a0 a4		      ldy	#>ntscstring
      2  a209		       a9 eb		      lda	#<ntscstring
      3  a20b		       20 1e cb 	      jsr	STROUT
    426  a20e		       60		      rts
    427  a20f
    428  a20f				   pal
      0  a20f					      PRINTSTRING	palstring
      1  a20f		       a0 a4		      ldy	#>palstring
      2  a211		       a9 e6		      lda	#<palstring
      3  a213		       20 1e cb 	      jsr	STROUT
    430  a216		       60		      rts
    431  a217
    432  a217				   alt
      0  a217					      PRINTSTRING	altstring
      1  a217		       a0 a4		      ldy	#>altstring
      2  a219		       a9 f0		      lda	#<altstring
      3  a21b		       20 1e cb 	      jsr	STROUT
    434  a21e		       60		      rts
    435  a21f
    436  a21f							; ---- MOD Wheel Controller --------------------------------------------------
    437  a21f							; Bc 01 vv
    438  a21f
    439  a21f							; Poke the data directly to the register, after OR'ing with $80
    440  a21f				   modwheel
    441  a21f		       a5 fd		      lda	mididata1
    442  a221		       09 80		      ora	#$80
    443  a223		       4c dc a2 	      jmp	setvoice
    444  a226
    445  a226							; ---- Volume Controller -----------------------------------------------------
    446  a226							; Bc 07 vv
    447  a226
    448  a226				   volume
    449  a226		       a5 fd		      lda	mididata1
    450  a228		       4a		      lsr
    451  a229		       4a		      lsr
    452  a22a		       4a		      lsr
    453  a22b
    454  a22b				   setvolume
    455  a22b		       8d 0e 90 	      sta	sound_volume
      0  a22e					      HEXPOKE	(voice_display+110),sound_volume
      1  a22e		       a9 e5		      lda	#<(voice_display+110)
      2  a230		       85 22		      sta	$22
      3  a232		       a9 1e		      lda	#>(voice_display+110)
      4  a234		       85 23		      sta	$23
      5  a236
      6  a236		       ad 0e 90 	      lda	sound_volume
      7  a239		       20 79 a5 	      jsr	hexstr
    457  a23c		       60		      rts
    458  a23d
    459  a23d							; ---- Brightness Controller (used for screen color)--------------------------
    460  a23d							; Bc 4a vv
    461  a23d
    462  a23d				   screencolors
    463  a23d		       18		      clc
    464  a23e		       a5 fd		      lda	mididata1	; 7-bit
    465  a240
    466  a240		       29 07		      and	#%00000111	; Get border
    467  a242		       85 6c		      sta	temp1
    468  a244
    469  a244		       a5 fd		      lda	mididata1
    470  a246		       29 78		      and	#%01111000	; Get background
    471  a248		       0a		      asl		; Shift 1 bit left
    472  a249
    473  a249		       05 6c		      ora	temp1	; Put border back in
    474  a24b		       09 08		      ora	#%00001000	; No Reverse Mode
    475  a24d
    476  a24d		       8d 0f 90 	      sta	screen_colors
    477  a250		       60		      rts
    478  a251
    479  a251							; ---- Sound Off / All Notes Off Controller-----------------------------------
    480  a251							; Bc 78 xx
    481  a251							; Bc 7B xx
    482  a251
    483  a251				   soundoff
    484  a251		       a9 00		      lda	#$00	; Off
    485  a253		       4c dc a2 	      jmp	setvoice
    486  a256
    487  a256
    488  a256							; ---- Program Change --------------------------------------------------------
    489  a256							; Cc pn  <NOTE 2 bytes!>
    490  a256
    491  a256				   programchange
    492  a256							; Blank the unused MIDI byte
    493  a256		       a9 2d		      lda	#45	; -
    494  a258		       8d 53 1e 	      sta	midi_display+6
    495  a25b		       8d 54 1e 	      sta	midi_display+7
    496  a25e
    497  a25e							; Get low nybble and replace, since there are only 16 viznut waveforms
    498  a25e		       a5 fc		      lda	mididata0
    499  a260		       29 0f		      and	#$0f
    500  a262		       85 fc		      sta	mididata0	; Note that this is the waveform NUMBER, not the VALUE!
    501  a264
    502  a264		       a4 49		      ldy	channel	; Y now contains channel #
    503  a266		       99 10 10 	      sta	waveform1,y	; Store waveform used
    504  a269
    505  a269		       c0 00		      cpy	#00
    506  a26b		       f0 0d		      beq	pc_0
    507  a26d
    508  a26d		       c0 01		      cpy	#01
    509  a26f		       f0 18		      beq	pc_1
    510  a271
    511  a271		       c0 02		      cpy	#02
    512  a273		       f0 23		      beq	pc_2
    513  a275
    514  a275		       c0 03		      cpy	#03	; Not sure if viznut's waveforms applies to the noise voice,
    515  a277		       f0 2e		      beq	pc_3	; but keep it in away.
    516  a279
    517  a279							; Ignore all other channels
    518  a279		       60		      rts
    519  a27a
    520  a27a							; Update the screen with Program# (viznut waveform code)
    521  a27a							; Note that these are not actually used until setvoice is called below [1]
    522  a27a
    523  a27a				   pc_0
      0  a27a					      HEXPOKE	(voice_display+ 5),waveform1
      1  a27a		       a9 7c		      lda	#<(voice_display+ 5)
      2  a27c		       85 22		      sta	$22
      3  a27e		       a9 1e		      lda	#>(voice_display+ 5)
      4  a280		       85 23		      sta	$23
      5  a282
      6  a282		       ad 10 10 	      lda	waveform1
      7  a285		       20 79 a5 	      jsr	hexstr
    525  a288		       60		      rts
    526  a289
    527  a289				   pc_1
      0  a289					      HEXPOKE	(voice_display+27),waveform2
      1  a289		       a9 92		      lda	#<(voice_display+27)
      2  a28b		       85 22		      sta	$22
      3  a28d		       a9 1e		      lda	#>(voice_display+27)
      4  a28f		       85 23		      sta	$23
      5  a291
      6  a291		       ad 11 10 	      lda	waveform2
      7  a294		       20 79 a5 	      jsr	hexstr
    529  a297		       60		      rts
    530  a298
    531  a298				   pc_2
      0  a298					      HEXPOKE	(voice_display+49),waveform3
      1  a298		       a9 a8		      lda	#<(voice_display+49)
      2  a29a		       85 22		      sta	$22
      3  a29c		       a9 1e		      lda	#>(voice_display+49)
      4  a29e		       85 23		      sta	$23
      5  a2a0
      6  a2a0		       ad 12 10 	      lda	waveform3
      7  a2a3		       20 79 a5 	      jsr	hexstr
    533  a2a6		       60		      rts
    534  a2a7
    535  a2a7				   pc_3
      0  a2a7					      HEXPOKE	(voice_display+71),waveform4
      1  a2a7		       a9 be		      lda	#<(voice_display+71)
      2  a2a9		       85 22		      sta	$22
      3  a2ab		       a9 1e		      lda	#>(voice_display+71)
      4  a2ad		       85 23		      sta	$23
      5  a2af
      6  a2af		       ad 13 10 	      lda	waveform4
      7  a2b2		       20 79 a5 	      jsr	hexstr
    537  a2b5		       60		      rts
    538  a2b6
    539  a2b6
    540  a2b6							;---------------------------------------------------------
    541  a2b6							; Set a voice using viznut's setwave function.
    542  a2b6							; If a sound is already playing, fine.  But if not, need a "short" delay.  TODO ***
    543  a2b6
    544  a2b6				   viznut
    545  a2b6		       a4 49		      ldy	channel	; Channel # (0-3)
    546  a2b8		       b9 f5 a4 	      lda	voice_to_register,y
    547  a2bb		       8d 20 10 	      sta	setwavechannel
    548  a2be
    549  a2be		       a5 5e		      lda	currentvalue	; X now contains initial frequency of selected channel
    550  a2c0		       8d 21 10 	      sta	setwavefrequency
    551  a2c3
    552  a2c3		       a4 49		      ldy	channel
    553  a2c5		       b9 10 10 	      lda	waveform1,y	; Retrieve the last desired waveform# for this channel
    554  a2c8		       aa		      tax
    555  a2c9		       bd ac a6 	      lda	viznutwaveforms,x	; Retrieve the desired shift register contents for that waveform#
    556  a2cc		       8d 22 10 	      sta	setwaveshiftreg
    557  a2cf
    558  a2cf							; Set X,Y,A as required and set the waveform.
    559  a2cf		       ac 20 10 	      ldy	setwavechannel
    560  a2d2		       ae 21 10 	      ldx	setwavefrequency
    561  a2d5		       ad 22 10 	      lda	setwaveshiftreg
    562  a2d8		       20 00 11 	      jsr	setwave
    563  a2db
    564  a2db							; TODO, update the screen
    565  a2db		       60		      rts
    566  a2dc
    567  a2dc
    568  a2dc							;***************************************************************************
    569  a2dc							;*******************  Set/Display Functions  *******************************
    570  a2dc							;***************************************************************************
    571  a2dc
    572  a2dc							; Dispatcher for setting the appropriate voice and updating the screen
    573  a2dc							; Channel# in Y (Channel 0 = Voice 1, etc)
    574  a2dc							; Value to set it to in A.
    575  a2dc
    576  a2dc				   setvoice
    577  a2dc		       85 5e		      sta	currentvalue
    578  a2de
    579  a2de							; Before setting the voice, check if a viznut waveform was selected previously [1]
    580  a2de							; If so, handle that separately.
    581  a2de		       b9 10 10 	      lda	waveform1,y
    582  a2e1		       d0 d3		      bne	viznut
    583  a2e3
    584  a2e3							; Nope, carry on.
    585  a2e3		       a5 5e		      lda	currentvalue
    586  a2e5
    587  a2e5		       c0 00		      cpy	#$00
    588  a2e7		       f0 0d		      beq	v1
    589  a2e9
    590  a2e9		       c0 01		      cpy	#$01
    591  a2eb		       f0 1b		      beq	v2
    592  a2ed
    593  a2ed		       c0 02		      cpy	#$02
    594  a2ef		       f0 29		      beq	v3
    595  a2f1
    596  a2f1		       c0 03		      cpy	#$03
    597  a2f3		       f0 37		      beq	v4
    598  a2f5
    599  a2f5							; Ignore all other channels
    600  a2f5		       60		      rts
    601  a2f6
    602  a2f6							; ---- Voice 1 -------
    603  a2f6				   v1
    604  a2f6		       8d 0a 90 	      sta	sound_voice1
      0  a2f9					      HEXPOKE	(voice_display+00),sound_voice1
      1  a2f9		       a9 77		      lda	#<(voice_display+00)
      2  a2fb		       85 22		      sta	$22
      3  a2fd		       a9 1e		      lda	#>(voice_display+00)
      4  a2ff		       85 23		      sta	$23
      5  a301
      6  a301		       ad 0a 90 	      lda	sound_voice1
      7  a304		       20 79 a5 	      jsr	hexstr
    606  a307		       60		      rts
    607  a308
    608  a308							; ---- Voice 2 -------
    609  a308				   v2
    610  a308		       8d 0b 90 	      sta	sound_voice2
      0  a30b					      HEXPOKE	(voice_display+22),sound_voice2
      1  a30b		       a9 8d		      lda	#<(voice_display+22)
      2  a30d		       85 22		      sta	$22
      3  a30f		       a9 1e		      lda	#>(voice_display+22)
      4  a311		       85 23		      sta	$23
      5  a313
      6  a313		       ad 0b 90 	      lda	sound_voice2
      7  a316		       20 79 a5 	      jsr	hexstr
    612  a319		       60		      rts
    613  a31a
    614  a31a							; ---- Voice 3 -------
    615  a31a				   v3
    616  a31a		       8d 0c 90 	      sta	sound_voice3
      0  a31d					      HEXPOKE	(voice_display+44),sound_voice3
      1  a31d		       a9 a3		      lda	#<(voice_display+44)
      2  a31f		       85 22		      sta	$22
      3  a321		       a9 1e		      lda	#>(voice_display+44)
      4  a323		       85 23		      sta	$23
      5  a325
      6  a325		       ad 0c 90 	      lda	sound_voice3
      7  a328		       20 79 a5 	      jsr	hexstr
    618  a32b		       60		      rts
    619  a32c
    620  a32c							; ---- Voice 4 -------
    621  a32c				   v4
    622  a32c		       8d 0d 90 	      sta	sound_noise
      0  a32f					      HEXPOKE	(voice_display+66),sound_noise
      1  a32f		       a9 b9		      lda	#<(voice_display+66)
      2  a331		       85 22		      sta	$22
      3  a333		       a9 1e		      lda	#>(voice_display+66)
      4  a335		       85 23		      sta	$23
      5  a337
      6  a337		       ad 0d 90 	      lda	sound_noise
      7  a33a		       20 79 a5 	      jsr	hexstr
    624  a33d		       60		      rts
    625  a33e
    626  a33e							; ----------------------------------------------------------------------------
    627  a33e
    628  a33e				   setcolors
    629  a33e		       a2 00		      ldx	#$00
    630  a340		       a9 00		      lda	#$00
    631  a342				   setcolorsloop
    632  a342		       9d 00 96 	      sta	$9600,x
    633  a345		       9d 00 97 	      sta	$9700,x
    634  a348		       e8		      inx
    635  a349		       e0 00		      cpx	#$00
    636  a34b		       d0 f5		      bne	setcolorsloop
    637  a34d		       60		      rts
    638  a34e
    639  a34e							; ----------------------------------------------------------------------------
    640  a34e							; Draw Main Screen
    641  a34e
    642  a34e				   mainscreen
    643  a34e		       20 5f e5 	      jsr	CLRSCREEN
    644  a351		       a9 1f		      lda	#31	; Decimal, white and yellow
    645  a353		       8d 0f 90 	      sta	screen_colors
    646  a356		       a9 06		      lda	#$06	; Blue
    647  a358		       8d 86 02 	      sta	$0286	; Cursor Color
      0  a35b					      PRINTSTRING	maintext
      1  a35b		       a0 a3		      ldy	#>maintext
      2  a35d		       a9 89		      lda	#<maintext
      3  a35f		       20 1e cb 	      jsr	STROUT
    649  a362		       a9 6c		      lda	#$6C
    650  a364		       8d f9 1f 	      sta	spin_display
    651  a367		       60		      rts
    652  a368
    653  a368
    654  a368							; ----------------------------------------------------------------------------
    655  a368							; Draw Credits Screen
    656  a368
    657  a368				   creditscreen
    658  a368		       20 5f e5 	      jsr	CLRSCREEN
    659  a36b		       a9 1e		      lda	#30	; Decimal, white and blue
    660  a36d		       8d 0f 90 	      sta	screen_colors
    661  a370		       a9 02		      lda	#$02	; Red
    662  a372		       8d 86 02 	      sta	$0286	; Cursor Color
      0  a375					      PRINTSTRING	credits
      1  a375		       a0 a4		      ldy	#>credits
      2  a377		       a9 24		      lda	#<credits
      3  a379		       20 1e cb 	      jsr	STROUT
    664  a37c		       60		      rts
    665  a37d
    666  a37d
    667  a37d							; ----------------------------------------------------------------------------
    668  a37d							; setwave needs to start on a page and is self-modifying,
    669  a37d							; so it is copied to RAM here
    670  a37d
    671  a37d				   setwavecopy
    672  a37d		       a2 00		      ldx	#$00
    673  a37f				   copyloop
    674  a37f		       bd 7f a6 	      lda	setwaveorg,x
    675  a382		       9d 00 11 	      sta	setwave,x
    676  a385		       e8		      inx
    677  a386		       d0 f7		      bne	copyloop
    678  a388		       60		      rts
    679  a389
    680  a389
    681  a389							; ----------------------------------------------------------------------------
    682  a389							; Strings
    683  a389
    684  a389				   maintext
    685  a389		       0e 08		      byte.b	CG_LCS, CG_DCS
    686  a38b		       2a 76 69 63*	      byte.b	"*vic20 midi iNTERFACE*", CRLF
    687  a3a2		       0d		      byte.b	CRLF
    688  a3a3		       6d 69 64 69*	      byte.b	"midi dATA: --:--:--", CRLF
    689  a3b7		       0d		      byte.b	CRLF
    690  a3b8		       76 4f 49 43*	      byte.b	"vOICE 1: -- / --", CRLF
    691  a3c9		       76 4f 49 43*	      byte.b	"vOICE 2: -- / --", CRLF
    692  a3da		       76 4f 49 43*	      byte.b	"vOICE 3: -- / --", CRLF
    693  a3eb		       76 4f 49 43*	      byte.b	"vOICE 4: -- / --", CRLF
    694  a3fc		       0d		      byte.b	CRLF
    695  a3fd		       76 4f 4c 55*	      byte.b	"vOLUME : --", CRLF
    696  a409		       62 41 4e 4b*	      byte.b	"bANK	 : --", CRLF
    697  a415		       0d		      byte.b	CRLF
    698  a416		       73 59 53 54*	      byte.b	"sYSTEM : ???", CRLF
    699  a423		       00		      byte.b	0
    700  a424
    701  a424
    702  a424				   credits
    703  a424		       0e 08		      byte.b	CG_LCS, CG_DCS
    704  a426		       20 2a 76 69*	      byte.b	" *vic20 midi cREDITS*", CRLF
    705  a43c		       0d		      byte.b	CRLF
    706  a43d		       68 41 52 44*	      byte.b	"hARDWARE:", CRLF
    707  a447		       0d		      byte.b	CRLF
    708  a448		       20 20 6a 49*	      byte.b	"  jIM bRAIN", CRLF
    709  a454		       20 20 66 52*	      byte.b	"  fRANCOIS lEVEILLE", CRLF
    710  a468		       20 20 6c 64*	      byte.b	"  ld bALL", CRLF
    711  a472		       0d		      byte.b	CRLF
    712  a473		       73 4f 46 54*	      byte.b	"sOFTWARE:", CRLF
    713  a47d		       0d		      byte.b	CRLF
    714  a47e		       20 6c 45 49*	      byte.b	" lEIF bLOOMQUIST", CRLF
    715  a48f		       20 64 41 56*	      byte.b	" dAVID vIENS", CRLF
    716  a49c		       20 6d 49 43*	      byte.b	" mICHAEL kIRCHER", CRLF
    717  a4ad		       20 76 49 5a*	      byte.b	" vIZNUT", CRLF
    718  a4b5		       0d		      byte.b	CRLF
    719  a4b6		       74 48 41 4e*	      byte.b	"tHANKS TO EVERYONE", CRLF
    720  a4c9		       4f 4e 20 54*	      byte.b	"ON THE vic20 dENIAL", CRLF
    721  a4dd		       46 4f 52 55*	      byte.b	"FORUMS!", CRLF
    722  a4e5		       00		      byte.b	0
    723  a4e6
    724  a4e6				   palstring
    725  a4e6		       70 61 6c 20*	      .byte.b	"pal ",0
    726  a4eb
    727  a4eb				   ntscstring
    728  a4eb		       6e 74 73 63*	      .byte.b	"ntsc",0
    729  a4f0
    730  a4f0				   altstring
    731  a4f0		       61 6c 74 20*	      .byte.b	"alt ",0
    732  a4f5
    733  a4f5							; ----------------------------------------------------------------------------
    734  a4f5							; Lookup table between voice #(0-3) and low byte of register# ($0A-$0D)
    735  a4f5
    736  a4f5				   voice_to_register
    737  a4f5		       0a 0b 0c 0d	      byte.b	$0A,$0B,$0C,$0D
    738  a4f9
    739  a4f9
    740  a4f9							; ----------------------------------------------------------------------------
    741  a4f9							; Code includes
    742  a4f9
------- FILE hardware.asm LEVEL 2 PASS 2
      0  a4f9					      include	"hardware.asm"
      1  a4f9							;***************************************************************************
      2  a4f9							;*******************	 Hardware Functions   *******************************
      3  a4f9							;***************************************************************************
      4  a4f9
      5  a4f9							; ----------------------------------------------------------------------------
      6  a4f9							; Confirm the presence of the ST16C450 UART
      7  a4f9				   checkuart
      8  a4f9		       a9 55		      lda	#$55
      9  a4fb		       8d 07 9c 	      sta	UART_SCRATCHPAD
     10  a4fe
     11  a4fe		       ad 07 9c 	      lda	UART_SCRATCHPAD
     12  a501		       c9 55		      cmp	#$55
     13  a503		       f0 1c		      beq	checkuart_ok
     14  a505
     15  a505							; Not found!
      0  a505					      PLOT	0,20
      1  a505		       a0 00		      ldy	#0
      2  a507		       a2 14		      ldx	#20
      3  a509		       18		      clc
      4  a50a		       20 0a e5 	      jsr	$E50A
      0  a50d					      PRINTSTRING	nouart
      1  a50d		       a0 a5		      ldy	#>nouart
      2  a50f		       a9 64		      lda	#<nouart
      3  a511		       20 1e cb 	      jsr	STROUT
     18  a514
     19  a514				   uloop
     20  a514		       a9 18		      lda	#24
     21  a516		       8d 0f 90 	      sta	screen_colors
     22  a519		       a9 1a		      lda	#26
     23  a51b		       8d 0f 90 	      sta	screen_colors
     24  a51e		       4c 14 a5 	      jmp	uloop
     25  a521
     26  a521				   checkuart_ok
     27  a521		       60		      rts
     28  a522
     29  a522							; ----------------------------------------------------------------------------
     30  a522							; Set up the UART
     31  a522
     32  a522				   resetuart
     33  a522							; Expose the divisor latch.
     34  a522		       a9 80		      lda	#%10000000
     35  a524		       8d 03 9c 	      sta	UART_LCR
     36  a527
     37  a527							; Set the MIDI baud rate.
     38  a527							; The ST16C450 datasheet says that it divides the input clock rate by
     39  a527							; 16, so with a 2Mhz crystal on board, that gives
     40  a527							; 2000000 * (1/16) * (1/x) = 31250.  Solving gives x=4 for the low
     41  a527							; byte of the divisor, and 0 for the high byte.
     42  a527
     43  a527		       a2 00		      ldx	#$00
     44  a529		       a0 04		      ldy	#$04
     45  a52b		       8e 01 9c 	      stx	UART_DIVISOR_MSB
     46  a52e		       8c 00 9c 	      sty	UART_DIVISOR_LSB
     47  a531
     48  a531							; Set to MIDI: Word length 8, Stop bits 1, no parity (also hides divisor latch)
     49  a531		       a9 03		      lda	#%00000011
     50  a533		       8d 03 9c 	      sta	UART_LCR
     51  a536
     52  a536							; Enable the interrupt when data is received
     53  a536		       a9 01		      lda	#%00000001
     54  a538		       8d 01 9c 	      sta	UART_IER
     55  a53b		       60		      rts
     56  a53c
     57  a53c							; ----------------------------------------------------------------------------
     58  a53c							; Set up the IRQ for reading bytes from the UART
     59  a53c
     60  a53c				   setupirq
     61  a53c		       78		      sei
     62  a53d
     63  a53d							; Point to my interrupt vector
     64  a53d		       a9 51		      lda	#<theirq
     65  a53f		       8d 14 03 	      sta	$0314
     66  a542		       a9 a5		      lda	#>theirq
     67  a544		       8d 15 03 	      sta	$0315
     68  a547
     69  a547							; Disable timer interrupts
     70  a547
     71  a547		       a9 60		      lda	#%01100000
     72  a549		       8d 2e 91 	      sta	$912e	; disable and acknowledge interrupts
     73  a54c		       8d 2d 91 	      sta	$912d
     74  a54f							;sta $911e	; disable NMIs (Restore key)
     75  a54f
     76  a54f		       58		      cli
     77  a550		       60		      rts
     78  a551
     79  a551							; ----------------------------------------------------------------------------
     80  a551							; The IRQ.
     81  a551
     82  a551				   theirq
     83  a551							; Fetch the received byte
     84  a551		       ad 00 9c 	      lda	UART_RXTX	;get data
     85  a554		       a4 5c		      ldy	write_pointer
     86  a556		       99 00 12 	      sta	buffer,y
     87  a559		       e6 5c		      inc	write_pointer
     88  a55b
     89  a55b							; Clear the interrupt from the UART by reading the status register
     90  a55b		       ad 02 9c 	      lda	UART_ISR
     91  a55e
     92  a55e		       4c 56 ff 	      jmp	$ff56	; Use this in place of rti because it restores the A,X,Y registers from the stack
     93  a561							;jmp $eabf	; return to normal IRQ	(scans keyboard and stuff)
     94  a561
     95  a561
     96  a561							; ----------------------------------------------------------------------------
     97  a561							; Handle the RESTORE key
     98  a561
     99  a561				   RESTORE
    100  a561		       4c c7 fe 	      jmp	$fec7	; Continue as if no cartridge installed
    101  a564
    102  a564
    103  a564							; ----------------------------------------------------------------------------
    104  a564							; Strings
    105  a564
    106  a564				   nouart
    107  a564		       2a 2a 20 75*	      .byte.b	"** uart NOT FOUND! **"
    108  a579
    109  a579							; EOF!
------- FILE vicmidi.asm
------- FILE utils.asm LEVEL 2 PASS 2
      0  a579					      include	"utils.asm"
      1  a579							; VIC Version by Schema/AIC (Leif Bloomquist)
      2  a579							; Original by Six/Style (Oliver VieBrooks)
      3  a579
      4  a579							; Fast POKE of hex value to screen
      5  a579							; also see HEXPOKE macro
      6  a579							; print hex  char $ of number in a at location referenced by screen_temp
      7  a579
      8  a579				   hexstr
      9  a579		       a0 00		      ldy	#$00
     10  a57b		       48		      pha
     11  a57c		       29 f0		      and	#$f0
     12  a57e		       18		      clc
     13  a57f		       4a		      lsr
     14  a580		       4a		      lsr
     15  a581		       4a		      lsr
     16  a582		       4a		      lsr
     17  a583		       aa		      tax
     18  a584		       bd b5 a5 	      lda	hexstring,x
     19  a587		       91 22		      sta	($22),y
     20  a589
     21  a589		       c8		      iny
     22  a58a		       68		      pla
     23  a58b		       29 0f		      and	#$0f
     24  a58d		       aa		      tax
     25  a58e		       bd b5 a5 	      lda	hexstring,x
     26  a591		       91 22		      sta	($22),y
     27  a593		       60		      rts
     28  a594
     29  a594
     30  a594							; print hex  char $ of number in a    SLOW!
     31  a594		       00	   hexx       dc.b	$00
     32  a595
     33  a595				   printhexstr
     34  a595		       8e 94 a5 	      stx	hexx
     35  a598		       48		      pha
     36  a599		       29 f0		      and	#$f0
     37  a59b		       18		      clc
     38  a59c		       4a		      lsr
     39  a59d		       4a		      lsr
     40  a59e		       4a		      lsr
     41  a59f		       4a		      lsr
     42  a5a0		       aa		      tax
     43  a5a1		       bd b5 a5 	      lda	hexstring,x
     44  a5a4		       20 d2 ff 	      jsr	$ffd2
     45  a5a7
     46  a5a7		       68		      pla
     47  a5a8		       29 0f		      and	#$0f
     48  a5aa		       aa		      tax
     49  a5ab		       bd b5 a5 	      lda	hexstring,x
     50  a5ae		       20 d2 ff 	      jsr	$ffd2
     51  a5b1		       ae 94 a5 	      ldx	hexx
     52  a5b4		       60		      rts
     53  a5b5
     54  a5b5				   hexstring
     55  a5b5		       30 31 32 33*	      .byte.b	"0123456789ABCDEF"
     56  a5c5
     57  a5c5
     58  a5c5							; ==============================================================
     59  a5c5							; Most defaults are NTSC.  This code overrides for PAL.
     60  a5c5							; ==============================================================
     61  a5c5
     62  a5c5				   setup_pal
     63  a5c5		       ad e4 ed 	      lda	$EDE4
     64  a5c8		       c9 0c		      cmp	#$0C
     65  a5ca		       f0 07		      beq	DOPAL
     66  a5cc
     67  a5cc							; NTSC System detected
     68  a5cc		       a9 00		      lda	#$00
     69  a5ce		       85 4a		      sta	bank
     70  a5d0		       4c df a1 	      jmp	showbank	; There's an rts there
     71  a5d3
     72  a5d3							; PAL System detected
     73  a5d3				   DOPAL
     74  a5d3		       a9 01		      lda	#$01
     75  a5d5		       85 4a		      sta	bank
     76  a5d7		       4c df a1 	      jmp	showbank	; There's an rts there
     77  a5da
     78  a5da							; EOF!
------- FILE vicmidi.asm
------- FILE polymode.asm LEVEL 2 PASS 2
      0  a5da					      include	"polymode.asm"
      1  a5da
      2  a5da							;***************************************************************************
      3  a5da							;***************  Determine next Channel in Poly Mode (set Y) **************
      4  a5da							;***************************************************************************
      5  a5da				   get_poly_voice
      6  a5da		       a0 00		      ldy	#$00
      7  a5dc
      8  a5dc				   get_poly_voice_loop
      9  a5dc		       b9 61 00 	      lda	poly_flags,y	; 0=not in use, 1=in use
     10  a5df		       f0 08		      beq	get_poly_voice_x
     11  a5e1		       c8		      iny
     12  a5e2		       c0 04		      cpy	#$04	; Note that we're only checking the first 3 voices - n/a to noise voice.
     13  a5e4		       d0 f6		      bne	get_poly_voice_loop
     14  a5e6
     15  a5e6							; No free voices, ignore
     16  a5e6		       a0 04		      ldy	#$04	; Invalid channel, will be ignored by Note On code
     17  a5e8		       60		      rts
     18  a5e9
     19  a5e9				   get_poly_voice_x
     20  a5e9		       a9 01		      lda	#$01
     21  a5eb		       99 61 00 	      sta	poly_flags,y
     22  a5ee		       60		      rts
     23  a5ef
     24  a5ef
     25  a5ef							;***************************************************************************
     26  a5ef							;********  Determine Channel to turn off in Poly Mode (set Y) **************
     27  a5ef							;***************************************************************************
     28  a5ef				   get_poly_voice_off
     29  a5ef
     30  a5ef		       a0 00		      ldy	#$00
     31  a5f1
     32  a5f1				   get_poly_voice_off_loop
     33  a5f1		       b9 61 00 	      lda	poly_flags,y	; Is the channel in use?
     34  a5f4		       f0 07		      beq	poly_next	; No, so skip it
     35  a5f6
     36  a5f6		       b9 69 00 	      lda	lastnote,y	; Get last note on this voice
     37  a5f9		       c5 fc		      cmp	mididata0	; Compare to note received
     38  a5fb		       f0 0b		      beq	get_poly_voice_off_x	; Matched!
     39  a5fd
     40  a5fd				   poly_next
     41  a5fd		       c8		      iny		; Next channel
     42  a5fe		       c0 04		      cpy	#$04	; Note that we're only checking the first 3 voices - n/a to noise voice.
     43  a600		       d0 ef		      bne	get_poly_voice_off_loop
     44  a602
     45  a602							; No match to the note to turn off, ignore
     46  a602		       a0 04		      ldy	#$04	; Invalid channel, will be ignored by Note Off code
     47  a604		       ee 0f 90 	      inc	screen_colors	; DEBUG
     48  a607		       60		      rts
     49  a608
     50  a608				   get_poly_voice_off_x
     51  a608		       a9 00		      lda	#$00
     52  a60a		       99 61 00 	      sta	poly_flags,y
     53  a60d		       60		      rts
     54  a60e
------- FILE vicmidi.asm
------- FILE keyboard.asm LEVEL 2 PASS 2
      0  a60e					      include	"keyboard.asm"
      1  a60e							;*******************************************************************************************
      2  a60e							;********************************  keyboard stuff  *****************************************
      3  a60e							;*******************************************************************************************
      4  a60e
      5  a60e							; --------------------------------------------------------------------------------------------------
      6  a60e							;;;;;;;;;;;;;;; keyboard stuff
      7  a60e							;previous keyboard column bits
      8  a60e		       00 4e	   c0	      =	$4E	; 2,4,6,8,(...)
      9  a60e		       00 4f	   c1	      =	$4F	; q,e,t,u,(...)
     10  a60e		       00 50	   c2	      =	$50	; w,r,y,i,p,(...)
     11  a60e		       00 51	   c3	      =	$51	; 1,3,5,7,(...)
     12  a60e
     13  a60e		       91 20	   kb_column  =	$9120
     14  a60e		       91 21	   kb_row     =	$9121
     15  a60e
     16  a60e							; 9121   9120: (Write column value to this address)
     17  a60e							;
     18  a60e							;	  7f	  bf	  df	  ef	  f7	  fb	  fd	  fe
     19  a60e							;
     20  a60e							;  fe	  2	  q	  CBM	  Space   RunStop Control Lft_arr 1
     21  a60e							;  fd	  4	  e	  s	  z	  Shift_L a	  w	  3
     22  a60e							;  fb	  6	  t	  f	  c	  x	  d	  r	  5
     23  a60e							;  f7	  8	  u	  h	  b	  v	  g	  y	  7
     24  a60e							;  ef	  0	  o	  k	  m	  n	  j	  i	  9
     25  a60e							;  df	  -	  @	  :	  .	  ,	  l	  p	  +
     26  a60e							;  bf	  Home	  Up_arr  =	  Shift_R /	  ;	  *	  GBP
     27  a60e							;  7f	  F7	  F5	  F3	  F1	  Down	  Right   Return  Del
     28  a60e
     29  a60e				   GetKey
     30  a60e		       78		      sei
     31  a60f							; this should not be done, we want to compare the OLD recorded status with new one
     32  a60f							;lda #$0
     33  a60f							;sta kb_column
     34  a60f							;lda kb_row
     35  a60f							;cmp #$FF
     36  a60f							;beq NoKey	 ; no key at all pressed
     37  a60f
     38  a60f				   Check7F
     39  a60f							;now check for each column
     40  a60f		       a9 7f		      lda	#$7F
     41  a611		       8d 20 91 	      sta	kb_column
     42  a614		       ad 21 91 	      lda	kb_row
     43  a617		       49 ff		      eor	#$FF	; inversed accumulator contains all bits in this column
     44  a619		       c5 4e		      cmp	c0
     45  a61b		       f0 08		      beq	CheckBF	; these arent the droids you are looking for move along
     46  a61d		       85 4e		      sta	c0
     47  a61f		       8d 00 1e 	      sta	$1E00
     48  a622		       4c 64 a6 	      jmp	KeyDone
     49  a625				   CheckBF
     50  a625							;now check for each column
     51  a625		       a9 bf		      lda	#$BF
     52  a627		       8d 20 91 	      sta	kb_column
     53  a62a		       ad 21 91 	      lda	kb_row
     54  a62d		       49 ff		      eor	#$FF	; inversed accumulator contains all bits in this column
     55  a62f		       c5 4f		      cmp	c1
     56  a631		       f0 08		      beq	CheckFD	; these arent the droids you are looking for move along
     57  a633		       85 4f		      sta	c1
     58  a635		       8d 01 1e 	      sta	$1E01
     59  a638		       4c 64 a6 	      jmp	KeyDone
     60  a63b				   CheckFD
     61  a63b							;now check for each column
     62  a63b		       a9 fd		      lda	#$FD
     63  a63d		       8d 20 91 	      sta	kb_column
     64  a640		       ad 21 91 	      lda	kb_row
     65  a643		       49 ff		      eor	#$FF	; inversed accumulator contains all bits in this column
     66  a645		       c5 50		      cmp	c2
     67  a647		       f0 08		      beq	CheckFE	; these arent the droids you are looking for move along
     68  a649		       85 50		      sta	c2
     69  a64b		       8d 02 1e 	      sta	$1E02
     70  a64e		       4c 64 a6 	      jmp	KeyDone
     71  a651				   CheckFE
     72  a651							;now check for each column
     73  a651		       a9 fe		      lda	#$FE
     74  a653		       8d 20 91 	      sta	kb_column
     75  a656		       ad 21 91 	      lda	kb_row
     76  a659		       49 ff		      eor	#$FF	; inversed accumulator contains all bits in this column
     77  a65b		       c5 51		      cmp	c3
     78  a65d		       f0 05		      beq	KeyDone	; these arent the droids you are looking for move along
     79  a65f		       85 51		      sta	c3
     80  a661		       8d 03 1e 	      sta	$1E03
     81  a664				   KeyDone
     82  a664		       58		      cli
     83  a665		       60		      rts
     84  a666
     85  a666							; ---------------------------------------------------------------------------
     86  a666
     87  a666				   setchars
     88  a666		       a2 00		      ldx	#$00
     89  a668		       a9 51		      lda	#$51
     90  a66a				   setcharsloop1
     91  a66a		       9d 00 1e 	      sta	$1E00,x
     92  a66d		       e8		      inx
     93  a66e		       e0 00		      cpx	#$00
     94  a670		       d0 f8		      bne	setcharsloop1
     95  a672		       a2 00		      ldx	#$00
     96  a674		       a9 66		      lda	#$66
     97  a676				   setcharsloop2
     98  a676		       9d 00 1f 	      sta	$1F00,x
     99  a679		       e8		      inx
    100  a67a		       e0 00		      cpx	#$00
    101  a67c		       d0 f8		      bne	setcharsloop2
    102  a67e		       60		      rts
------- FILE vicmidi.asm
    747  a67f				   setwaveorg
------- FILE setwave.asm LEVEL 2 PASS 2
      0  a67f					      include	"setwave.asm"
      1  a67f							;A short generic routine for setting any shift register value for any pulse
      2  a67f							;channel in about 150 cpu clocks. Use it freely.
      3  a67f
      4  a67f							; USAGE: y = channel ($0a..$0c)
      5  a67f							;	  x = initial frequency
      6  a67f							;	  a = shift register contents
      7  a67f							;
      8  a67f							; WARNING for purists: self-modifying code, illegal opcodes.
      9  a67f							;
     10  a67f							; code align assertion: make sure that the loop is within a page.
     11  a67f							; oscillator assertion: make sure that the channel has been at $7e
     12  a67f							; for some time before calling this function.
     13  a67f							; put TMP and TMP2 in the zero page.
     14  a67f
     15  a67f		       8e a1 a6 	      stx	initfreq	; 4
     16  a682
     17  a682		       8c 90 a6 	      sty	ch0	; 4
     18  a685		       8c 9b a6 	      sty	ch1	; 4
     19  a688		       be 9f a6 	      ldx	ldfqmasks-$a,y	; 4
     20  a68b		       85 57		      sta	TMP	; 3
     21  a68d
     22  a68d		       09 7f		      ora	#$7f	; 2
     23  a68f
     24  a68f		       8f 0c 90 	      .byte.b	$8f,$0C,$90	; axs $900c  ; 4  [$900c] = a AND x	     *ILLEGAL OPCODE*
     25  a692
     26  a692		       a6 90	   ch0	      =	*-2
     27  a692		       84 58		      sty	TMP2	; 3
     28  a694		       a0 07		      ldy	#7	; 2
     29  a696
     30  a696				   l0
     31  a696		       a9 7f		      lda	#$7f	; 2
     32  a698		       07 57		      .byte.b	$07,TMP	; aso TMP		 ; 5  asl tmp; a = [tmp] OR $7f  *ILLEGAL OPCODE*
     33  a69a		       8f 0c 90 	      .byte.b	$8F,$0C,$90	; axs $900c	 ; 4  [$900c] = a AND x	  *ILLEGAL OPCODE*
     34  a69a		       a6 9b	   ch1	      =	*-2
     35  a69d		       88		      dey		; 2
     36  a69e		       d0 f6		      bne	l0	; 3
     37  a6a0
     38  a6a0		       a9 80		      lda	#128	; 2
     39  a6a0		       a6 a1	   initfreq   =	*-1
     40  a6a2		       ea		      nop		; 2
     41  a6a3		       a4 58		      ldy	TMP2	; 3
     42  a6a5				   noset
     43  a6a5		       99 00 90 	      sta	$9000,y	; 5
     44  a6a8
     45  a6a8		       60		      rts		; 6	total clocks 11+4+3+2+16*7+16+6 eq 154
     46  a6a9
     47  a6a9				   ldfqmasks
     48  a6a9		       fe		      .byte.b	$fe	; $900a - 1 x 16 clocks/bit
     49  a6aa		       fd		      .byte.b	$fd	; $900b - 2 x	8 clocks/bit
     50  a6ab		       fb		      .byte.b	$fb	; $900c - 4 x	4 clocks/bit
     51  a6ac
     52  a6ac
     53  a6ac				   viznutwaveforms
     54  a6ac		       00		      .byte.b	0	; MIDI Program #1	default  0000000011111111
     55  a6ad		       02		      .byte.b	2	; MIDI Program #2	"10"	 0000001011111101
     56  a6ae		       04		      .byte.b	4	; MIDI Program #3	"100"	 0000010011111011
     57  a6af		       06		      .byte.b	6	; MIDI Program #4	"110"	 0000011011111001
     58  a6b0		       08		      .byte.b	8	; MIDI Program #5	"1000"	 0000100011110111
     59  a6b1		       0a		      .byte.b	10	; MIDI Program #6	"1010"	 0000101011110101
     60  a6b2		       0b		      .byte.b	11	; MIDI Program #7	"1011"	 0000110011110011
     61  a6b3		       0e		      .byte.b	14	; MIDI Program #8	"1110"	 0000111011110001
     62  a6b4		       12		      .byte.b	18	; MIDI Program #9	"10010"  0001001011101101
     63  a6b5		       14		      .byte.b	20	; MIDI Program #10	"10100"  0001010011101011
     64  a6b6		       16		      .byte.b	22	; MIDI Program #11	"10110"  0001011011101001
     65  a6b7		       18		      .byte.b	24	; MIDI Program #12	"11000"  0001100011100111
     66  a6b8		       1a		      .byte.b	26	; MIDI Program #13	"11010"  0001101011100101
     67  a6b9		       24		      .byte.b	36	; MIDI Program #14	"100100" 0010010011011011
     68  a6ba		       2a		      .byte.b	42	; MIDI Program #15	"101010" 0010101011010101
     69  a6bb		       2c		      .byte.b	44	; MIDI Program #16	"101100" 0010110011010011
------- FILE vicmidi.asm
    749  a6bc
------- FILE lookup-ntsc.asm LEVEL 2 PASS 2
      0  a6bc					      include	"lookup-ntsc.asm"
      1  a6bc							; --------------------------------------------------------------------------------------------------
      2  a6bc							; Note Lookups NTSC - 128 bytes each, map MIDI Note# to a VIC register value
      3  a6bc							; From http://sleepingelephant.com/ipw-web/bulletin/bb/viewtopic.php?t=3643
      4  a6bc
      5  a6bc				   voice1lookup_ntsc
      6  a6bc		       00		      byte.b	0
      7  a6bd		       00		      byte.b	0
      8  a6be		       00		      byte.b	0
      9  a6bf		       00		      byte.b	0
     10  a6c0		       00		      byte.b	0
     11  a6c1		       00		      byte.b	0
     12  a6c2		       00		      byte.b	0
     13  a6c3		       00		      byte.b	0
     14  a6c4		       00		      byte.b	0
     15  a6c5		       00		      byte.b	0
     16  a6c6		       00		      byte.b	0
     17  a6c7		       00		      byte.b	0
     18  a6c8		       00		      byte.b	0
     19  a6c9		       00		      byte.b	0
     20  a6ca		       00		      byte.b	0
     21  a6cb		       00		      byte.b	0
     22  a6cc		       00		      byte.b	0
     23  a6cd		       00		      byte.b	0
     24  a6ce		       00		      byte.b	0
     25  a6cf		       00		      byte.b	0
     26  a6d0		       00		      byte.b	0
     27  a6d1		       00		      byte.b	0
     28  a6d2		       00		      byte.b	0
     29  a6d3		       00		      byte.b	0
     30  a6d4		       85		      byte.b	133
     31  a6d5		       8c		      byte.b	140
     32  a6d6		       92		      byte.b	146
     33  a6d7		       98		      byte.b	152
     34  a6d8		       9e		      byte.b	158
     35  a6d9		       a3		      byte.b	163
     36  a6da		       a9		      byte.b	169
     37  a6db		       ad		      byte.b	173
     38  a6dc		       b2		      byte.b	178
     39  a6dd		       b6		      byte.b	182
     40  a6de		       ba		      byte.b	186
     41  a6df		       be		      byte.b	190
     42  a6e0		       c2		      byte.b	194
     43  a6e1		       c5		      byte.b	197
     44  a6e2		       c9		      byte.b	201
     45  a6e3		       cc		      byte.b	204
     46  a6e4		       cf		      byte.b	207
     47  a6e5		       d1		      byte.b	209
     48  a6e6		       d4		      byte.b	212
     49  a6e7		       d6		      byte.b	214
     50  a6e8		       d9		      byte.b	217
     51  a6e9		       db		      byte.b	219
     52  a6ea		       dd		      byte.b	221
     53  a6eb		       df		      byte.b	223
     54  a6ec		       e0		      byte.b	224
     55  a6ed		       e2		      byte.b	226
     56  a6ee		       e4		      byte.b	228
     57  a6ef		       e5		      byte.b	229
     58  a6f0		       e7		      byte.b	231
     59  a6f1		       e8		      byte.b	232
     60  a6f2		       e9		      byte.b	233
     61  a6f3		       eb		      byte.b	235
     62  a6f4		       ec		      byte.b	236
     63  a6f5		       ed		      byte.b	237
     64  a6f6		       ee		      byte.b	238
     65  a6f7		       ef		      byte.b	239
     66  a6f8		       f0		      byte.b	240
     67  a6f9		       00		      byte.b	0
     68  a6fa		       00		      byte.b	0
     69  a6fb		       00		      byte.b	0
     70  a6fc		       00		      byte.b	0
     71  a6fd		       00		      byte.b	0
     72  a6fe		       00		      byte.b	0
     73  a6ff		       00		      byte.b	0
     74  a700		       00		      byte.b	0
     75  a701		       00		      byte.b	0
     76  a702		       00		      byte.b	0
     77  a703		       00		      byte.b	0
     78  a704		       00		      byte.b	0
     79  a705		       00		      byte.b	0
     80  a706		       00		      byte.b	0
     81  a707		       00		      byte.b	0
     82  a708		       00		      byte.b	0
     83  a709		       00		      byte.b	0
     84  a70a		       00		      byte.b	0
     85  a70b		       00		      byte.b	0
     86  a70c		       00		      byte.b	0
     87  a70d		       00		      byte.b	0
     88  a70e		       00		      byte.b	0
     89  a70f		       00		      byte.b	0
     90  a710		       00		      byte.b	0
     91  a711		       00		      byte.b	0
     92  a712		       00		      byte.b	0
     93  a713		       00		      byte.b	0
     94  a714		       00		      byte.b	0
     95  a715		       00		      byte.b	0
     96  a716		       00		      byte.b	0
     97  a717		       00		      byte.b	0
     98  a718		       00		      byte.b	0
     99  a719		       00		      byte.b	0
    100  a71a		       00		      byte.b	0
    101  a71b		       00		      byte.b	0
    102  a71c		       00		      byte.b	0
    103  a71d		       00		      byte.b	0
    104  a71e		       00		      byte.b	0
    105  a71f		       00		      byte.b	0
    106  a720		       00		      byte.b	0
    107  a721		       00		      byte.b	0
    108  a722		       00		      byte.b	0
    109  a723		       00		      byte.b	0
    110  a724		       00		      byte.b	0
    111  a725		       00		      byte.b	0
    112  a726		       00		      byte.b	0
    113  a727		       00		      byte.b	0
    114  a728		       00		      byte.b	0
    115  a729		       00		      byte.b	0
    116  a72a		       00		      byte.b	0
    117  a72b		       00		      byte.b	0
    118  a72c		       00		      byte.b	0
    119  a72d		       00		      byte.b	0
    120  a72e		       00		      byte.b	0
    121  a72f		       00		      byte.b	0
    122  a730		       00		      byte.b	0
    123  a731		       00		      byte.b	0
    124  a732		       00		      byte.b	0
    125  a733		       00		      byte.b	0
    126  a734		       00		      byte.b	0
    127  a735		       00		      byte.b	0
    128  a736		       00		      byte.b	0
    129  a737		       00		      byte.b	0
    130  a738		       00		      byte.b	0
    131  a739		       00		      byte.b	0
    132  a73a		       00		      byte.b	0
    133  a73b		       00		      byte.b	0
    134  a73c
    135  a73c				   voice2lookup_ntsc
    136  a73c		       00		      byte.b	0
    137  a73d		       00		      byte.b	0
    138  a73e		       00		      byte.b	0
    139  a73f		       00		      byte.b	0
    140  a740		       00		      byte.b	0
    141  a741		       00		      byte.b	0
    142  a742		       00		      byte.b	0
    143  a743		       00		      byte.b	0
    144  a744		       00		      byte.b	0
    145  a745		       00		      byte.b	0
    146  a746		       00		      byte.b	0
    147  a747		       00		      byte.b	0
    148  a748		       00		      byte.b	0
    149  a749		       00		      byte.b	0
    150  a74a		       00		      byte.b	0
    151  a74b		       00		      byte.b	0
    152  a74c		       00		      byte.b	0
    153  a74d		       00		      byte.b	0
    154  a74e		       00		      byte.b	0
    155  a74f		       00		      byte.b	0
    156  a750		       00		      byte.b	0
    157  a751		       00		      byte.b	0
    158  a752		       00		      byte.b	0
    159  a753		       00		      byte.b	0
    160  a754		       00		      byte.b	0
    161  a755		       00		      byte.b	0
    162  a756		       00		      byte.b	0
    163  a757		       00		      byte.b	0
    164  a758		       00		      byte.b	0
    165  a759		       00		      byte.b	0
    166  a75a		       00		      byte.b	0
    167  a75b		       00		      byte.b	0
    168  a75c		       00		      byte.b	0
    169  a75d		       00		      byte.b	0
    170  a75e		       00		      byte.b	0
    171  a75f		       00		      byte.b	0
    172  a760		       85		      byte.b	133
    173  a761		       8c		      byte.b	140
    174  a762		       92		      byte.b	146
    175  a763		       98		      byte.b	152
    176  a764		       9e		      byte.b	158
    177  a765		       a3		      byte.b	163
    178  a766		       a9		      byte.b	169
    179  a767		       ad		      byte.b	173
    180  a768		       b2		      byte.b	178
    181  a769		       b6		      byte.b	182
    182  a76a		       ba		      byte.b	186
    183  a76b		       be		      byte.b	190
    184  a76c		       c2		      byte.b	194
    185  a76d		       c5		      byte.b	197
    186  a76e		       c9		      byte.b	201
    187  a76f		       cc		      byte.b	204
    188  a770		       cf		      byte.b	207
    189  a771		       d1		      byte.b	209
    190  a772		       d4		      byte.b	212
    191  a773		       d6		      byte.b	214
    192  a774		       d9		      byte.b	217
    193  a775		       db		      byte.b	219
    194  a776		       dd		      byte.b	221
    195  a777		       df		      byte.b	223
    196  a778		       e0		      byte.b	224
    197  a779		       e2		      byte.b	226
    198  a77a		       e4		      byte.b	228
    199  a77b		       e5		      byte.b	229
    200  a77c		       e7		      byte.b	231
    201  a77d		       e8		      byte.b	232
    202  a77e		       e9		      byte.b	233
    203  a77f		       eb		      byte.b	235
    204  a780		       ec		      byte.b	236
    205  a781		       ed		      byte.b	237
    206  a782		       ee		      byte.b	238
    207  a783		       ef		      byte.b	239
    208  a784		       f0		      byte.b	240
    209  a785		       00		      byte.b	0
    210  a786		       00		      byte.b	0
    211  a787		       00		      byte.b	0
    212  a788		       00		      byte.b	0
    213  a789		       00		      byte.b	0
    214  a78a		       00		      byte.b	0
    215  a78b		       00		      byte.b	0
    216  a78c		       00		      byte.b	0
    217  a78d		       00		      byte.b	0
    218  a78e		       00		      byte.b	0
    219  a78f		       00		      byte.b	0
    220  a790		       00		      byte.b	0
    221  a791		       00		      byte.b	0
    222  a792		       00		      byte.b	0
    223  a793		       00		      byte.b	0
    224  a794		       00		      byte.b	0
    225  a795		       00		      byte.b	0
    226  a796		       00		      byte.b	0
    227  a797		       00		      byte.b	0
    228  a798		       00		      byte.b	0
    229  a799		       00		      byte.b	0
    230  a79a		       00		      byte.b	0
    231  a79b		       00		      byte.b	0
    232  a79c		       00		      byte.b	0
    233  a79d		       00		      byte.b	0
    234  a79e		       00		      byte.b	0
    235  a79f		       00		      byte.b	0
    236  a7a0		       00		      byte.b	0
    237  a7a1		       00		      byte.b	0
    238  a7a2		       00		      byte.b	0
    239  a7a3		       00		      byte.b	0
    240  a7a4		       00		      byte.b	0
    241  a7a5		       00		      byte.b	0
    242  a7a6		       00		      byte.b	0
    243  a7a7		       00		      byte.b	0
    244  a7a8		       00		      byte.b	0
    245  a7a9		       00		      byte.b	0
    246  a7aa		       00		      byte.b	0
    247  a7ab		       00		      byte.b	0
    248  a7ac		       00		      byte.b	0
    249  a7ad		       00		      byte.b	0
    250  a7ae		       00		      byte.b	0
    251  a7af		       00		      byte.b	0
    252  a7b0		       00		      byte.b	0
    253  a7b1		       00		      byte.b	0
    254  a7b2		       00		      byte.b	0
    255  a7b3		       00		      byte.b	0
    256  a7b4		       00		      byte.b	0
    257  a7b5		       00		      byte.b	0
    258  a7b6		       00		      byte.b	0
    259  a7b7		       00		      byte.b	0
    260  a7b8		       00		      byte.b	0
    261  a7b9		       00		      byte.b	0
    262  a7ba		       00		      byte.b	0
    263  a7bb		       00		      byte.b	0
    264  a7bc
    265  a7bc				   voice3lookup_ntsc
    266  a7bc		       00		      byte.b	0
    267  a7bd		       00		      byte.b	0
    268  a7be		       00		      byte.b	0
    269  a7bf		       00		      byte.b	0
    270  a7c0		       00		      byte.b	0
    271  a7c1		       00		      byte.b	0
    272  a7c2		       00		      byte.b	0
    273  a7c3		       00		      byte.b	0
    274  a7c4		       00		      byte.b	0
    275  a7c5		       00		      byte.b	0
    276  a7c6		       00		      byte.b	0
    277  a7c7		       00		      byte.b	0
    278  a7c8		       00		      byte.b	0
    279  a7c9		       00		      byte.b	0
    280  a7ca		       00		      byte.b	0
    281  a7cb		       00		      byte.b	0
    282  a7cc		       00		      byte.b	0
    283  a7cd		       00		      byte.b	0
    284  a7ce		       00		      byte.b	0
    285  a7cf		       00		      byte.b	0
    286  a7d0		       00		      byte.b	0
    287  a7d1		       00		      byte.b	0
    288  a7d2		       00		      byte.b	0
    289  a7d3		       00		      byte.b	0
    290  a7d4		       00		      byte.b	0
    291  a7d5		       00		      byte.b	0
    292  a7d6		       00		      byte.b	0
    293  a7d7		       00		      byte.b	0
    294  a7d8		       00		      byte.b	0
    295  a7d9		       00		      byte.b	0
    296  a7da		       00		      byte.b	0
    297  a7db		       00		      byte.b	0
    298  a7dc		       00		      byte.b	0
    299  a7dd		       00		      byte.b	0
    300  a7de		       00		      byte.b	0
    301  a7df		       00		      byte.b	0
    302  a7e0		       00		      byte.b	0
    303  a7e1		       00		      byte.b	0
    304  a7e2		       00		      byte.b	0
    305  a7e3		       00		      byte.b	0
    306  a7e4		       00		      byte.b	0
    307  a7e5		       00		      byte.b	0
    308  a7e6		       00		      byte.b	0
    309  a7e7		       00		      byte.b	0
    310  a7e8		       00		      byte.b	0
    311  a7e9		       00		      byte.b	0
    312  a7ea		       00		      byte.b	0
    313  a7eb		       00		      byte.b	0
    314  a7ec		       85		      byte.b	133
    315  a7ed		       8c		      byte.b	140
    316  a7ee		       92		      byte.b	146
    317  a7ef		       98		      byte.b	152
    318  a7f0		       9e		      byte.b	158
    319  a7f1		       a3		      byte.b	163
    320  a7f2		       a9		      byte.b	169
    321  a7f3		       ad		      byte.b	173
    322  a7f4		       b2		      byte.b	178
    323  a7f5		       b6		      byte.b	182
    324  a7f6		       ba		      byte.b	186
    325  a7f7		       be		      byte.b	190
    326  a7f8		       c2		      byte.b	194
    327  a7f9		       c5		      byte.b	197
    328  a7fa		       c9		      byte.b	201
    329  a7fb		       cc		      byte.b	204
    330  a7fc		       cf		      byte.b	207
    331  a7fd		       d1		      byte.b	209
    332  a7fe		       d4		      byte.b	212
    333  a7ff		       d6		      byte.b	214
    334  a800		       d9		      byte.b	217
    335  a801		       db		      byte.b	219
    336  a802		       dd		      byte.b	221
    337  a803		       df		      byte.b	223
    338  a804		       e0		      byte.b	224
    339  a805		       e2		      byte.b	226
    340  a806		       e4		      byte.b	228
    341  a807		       e5		      byte.b	229
    342  a808		       e7		      byte.b	231
    343  a809		       e8		      byte.b	232
    344  a80a		       e9		      byte.b	233
    345  a80b		       eb		      byte.b	235
    346  a80c		       ec		      byte.b	236
    347  a80d		       ed		      byte.b	237
    348  a80e		       ee		      byte.b	238
    349  a80f		       ef		      byte.b	239
    350  a810		       f0		      byte.b	240
    351  a811		       00		      byte.b	0
    352  a812		       00		      byte.b	0
    353  a813		       00		      byte.b	0
    354  a814		       00		      byte.b	0
    355  a815		       00		      byte.b	0
    356  a816		       00		      byte.b	0
    357  a817		       00		      byte.b	0
    358  a818		       00		      byte.b	0
    359  a819		       00		      byte.b	0
    360  a81a		       00		      byte.b	0
    361  a81b		       00		      byte.b	0
    362  a81c		       00		      byte.b	0
    363  a81d		       00		      byte.b	0
    364  a81e		       00		      byte.b	0
    365  a81f		       00		      byte.b	0
    366  a820		       00		      byte.b	0
    367  a821		       00		      byte.b	0
    368  a822		       00		      byte.b	0
    369  a823		       00		      byte.b	0
    370  a824		       00		      byte.b	0
    371  a825		       00		      byte.b	0
    372  a826		       00		      byte.b	0
    373  a827		       00		      byte.b	0
    374  a828		       00		      byte.b	0
    375  a829		       00		      byte.b	0
    376  a82a		       00		      byte.b	0
    377  a82b		       00		      byte.b	0
    378  a82c		       00		      byte.b	0
    379  a82d		       00		      byte.b	0
    380  a82e		       00		      byte.b	0
    381  a82f		       00		      byte.b	0
    382  a830		       00		      byte.b	0
    383  a831		       00		      byte.b	0
    384  a832		       00		      byte.b	0
    385  a833		       00		      byte.b	0
    386  a834		       00		      byte.b	0
    387  a835		       00		      byte.b	0
    388  a836		       00		      byte.b	0
    389  a837		       00		      byte.b	0
    390  a838		       00		      byte.b	0
    391  a839		       00		      byte.b	0
    392  a83a		       00		      byte.b	0
    393  a83b		       00		      byte.b	0
    394  a83c
    395  a83c
    396  a83c				   voice4lookup_ntsc
    397  a83c		       00		      byte.b	0
    398  a83d		       00		      byte.b	0
    399  a83e		       00		      byte.b	0
    400  a83f		       00		      byte.b	0
    401  a840		       00		      byte.b	0
    402  a841		       00		      byte.b	0
    403  a842		       00		      byte.b	0
    404  a843		       00		      byte.b	0
    405  a844		       00		      byte.b	0
    406  a845		       00		      byte.b	0
    407  a846		       00		      byte.b	0
    408  a847		       00		      byte.b	0
    409  a848		       00		      byte.b	0
    410  a849		       00		      byte.b	0
    411  a84a		       00		      byte.b	0
    412  a84b		       00		      byte.b	0
    413  a84c		       00		      byte.b	0
    414  a84d		       00		      byte.b	0
    415  a84e		       00		      byte.b	0
    416  a84f		       00		      byte.b	0
    417  a850		       00		      byte.b	0
    418  a851		       00		      byte.b	0
    419  a852		       00		      byte.b	0
    420  a853		       00		      byte.b	0
    421  a854		       00		      byte.b	0
    422  a855		       00		      byte.b	0
    423  a856		       00		      byte.b	0
    424  a857		       00		      byte.b	0
    425  a858		       00		      byte.b	0
    426  a859		       00		      byte.b	0
    427  a85a		       00		      byte.b	0
    428  a85b		       00		      byte.b	0
    429  a85c		       00		      byte.b	0
    430  a85d		       00		      byte.b	0
    431  a85e		       00		      byte.b	0
    432  a85f		       00		      byte.b	0
    433  a860		       85		      byte.b	133
    434  a861		       8c		      byte.b	140
    435  a862		       92		      byte.b	146
    436  a863		       98		      byte.b	152
    437  a864		       9e		      byte.b	158
    438  a865		       a3		      byte.b	163
    439  a866		       a9		      byte.b	169
    440  a867		       ad		      byte.b	173
    441  a868		       b2		      byte.b	178
    442  a869		       b6		      byte.b	182
    443  a86a		       ba		      byte.b	186
    444  a86b		       be		      byte.b	190
    445  a86c		       c2		      byte.b	194
    446  a86d		       c5		      byte.b	197
    447  a86e		       c9		      byte.b	201
    448  a86f		       cc		      byte.b	204
    449  a870		       cf		      byte.b	207
    450  a871		       d1		      byte.b	209
    451  a872		       d4		      byte.b	212
    452  a873		       d6		      byte.b	214
    453  a874		       d9		      byte.b	217
    454  a875		       db		      byte.b	219
    455  a876		       dd		      byte.b	221
    456  a877		       df		      byte.b	223
    457  a878		       e0		      byte.b	224
    458  a879		       e2		      byte.b	226
    459  a87a		       e4		      byte.b	228
    460  a87b		       e5		      byte.b	229
    461  a87c		       e7		      byte.b	231
    462  a87d		       e8		      byte.b	232
    463  a87e		       e9		      byte.b	233
    464  a87f		       eb		      byte.b	235
    465  a880		       ec		      byte.b	236
    466  a881		       ed		      byte.b	237
    467  a882		       ee		      byte.b	238
    468  a883		       ef		      byte.b	239
    469  a884		       f0		      byte.b	240
    470  a885		       00		      byte.b	0
    471  a886		       00		      byte.b	0
    472  a887		       00		      byte.b	0
    473  a888		       00		      byte.b	0
    474  a889		       00		      byte.b	0
    475  a88a		       00		      byte.b	0
    476  a88b		       00		      byte.b	0
    477  a88c		       00		      byte.b	0
    478  a88d		       00		      byte.b	0
    479  a88e		       00		      byte.b	0
    480  a88f		       00		      byte.b	0
    481  a890		       00		      byte.b	0
    482  a891		       00		      byte.b	0
    483  a892		       00		      byte.b	0
    484  a893		       00		      byte.b	0
    485  a894		       00		      byte.b	0
    486  a895		       00		      byte.b	0
    487  a896		       00		      byte.b	0
    488  a897		       00		      byte.b	0
    489  a898		       00		      byte.b	0
    490  a899		       00		      byte.b	0
    491  a89a		       00		      byte.b	0
    492  a89b		       00		      byte.b	0
    493  a89c		       00		      byte.b	0
    494  a89d		       00		      byte.b	0
    495  a89e		       00		      byte.b	0
    496  a89f		       00		      byte.b	0
    497  a8a0		       00		      byte.b	0
    498  a8a1		       00		      byte.b	0
    499  a8a2		       00		      byte.b	0
    500  a8a3		       00		      byte.b	0
    501  a8a4		       00		      byte.b	0
    502  a8a5		       00		      byte.b	0
    503  a8a6		       00		      byte.b	0
    504  a8a7		       00		      byte.b	0
    505  a8a8		       00		      byte.b	0
    506  a8a9		       00		      byte.b	0
    507  a8aa		       00		      byte.b	0
    508  a8ab		       00		      byte.b	0
    509  a8ac		       00		      byte.b	0
    510  a8ad		       00		      byte.b	0
    511  a8ae		       00		      byte.b	0
    512  a8af		       00		      byte.b	0
    513  a8b0		       00		      byte.b	0
    514  a8b1		       00		      byte.b	0
    515  a8b2		       00		      byte.b	0
    516  a8b3		       00		      byte.b	0
    517  a8b4		       00		      byte.b	0
    518  a8b5		       00		      byte.b	0
    519  a8b6		       00		      byte.b	0
    520  a8b7		       00		      byte.b	0
    521  a8b8		       00		      byte.b	0
    522  a8b9		       00		      byte.b	0
    523  a8ba		       00		      byte.b	0
    524  a8bb		       00		      byte.b	0
    525  a8bc
    526  a8bc							; EOF!
------- FILE vicmidi.asm
------- FILE lookup-pal.asm LEVEL 2 PASS 2
      0  a8bc					      include	"lookup-pal.asm"
      1  a8bc							; --------------------------------------------------------------------------------------------------
      2  a8bc							; Note Lookups PAL - 128 bytes each, map MIDI Note# to a VIC register value
      3  a8bc							; From http://sleepingelephant.com/ipw-web/bulletin/bb/viewtopic.php?t=3643
      4  a8bc
      5  a8bc				   voice1lookup_pal
      6  a8bc		       00		      byte.b	0
      7  a8bd		       00		      byte.b	0
      8  a8be		       00		      byte.b	0
      9  a8bf		       00		      byte.b	0
     10  a8c0		       00		      byte.b	0
     11  a8c1		       00		      byte.b	0
     12  a8c2		       00		      byte.b	0
     13  a8c3		       00		      byte.b	0
     14  a8c4		       00		      byte.b	0
     15  a8c5		       00		      byte.b	0
     16  a8c6		       00		      byte.b	0
     17  a8c7		       00		      byte.b	0
     18  a8c8		       00		      byte.b	0
     19  a8c9		       00		      byte.b	0
     20  a8ca		       00		      byte.b	0
     21  a8cb		       00		      byte.b	0
     22  a8cc		       00		      byte.b	0
     23  a8cd		       00		      byte.b	0
     24  a8ce		       00		      byte.b	0
     25  a8cf		       00		      byte.b	0
     26  a8d0		       00		      byte.b	0
     27  a8d1		       00		      byte.b	0
     28  a8d2		       00		      byte.b	0
     29  a8d3		       00		      byte.b	0
     30  a8d4		       7b		      byte.b	123	; (122.60)  <- not reachable in PAL
     31  a8d5		       82		      byte.b	130
     32  a8d6		       89		      byte.b	137
     33  a8d7		       90		      byte.b	144
     34  a8d8		       96		      byte.b	150
     35  a8d9		       9c		      byte.b	156
     36  a8da		       a1		      byte.b	161
     37  a8db		       a7		      byte.b	167
     38  a8dc		       ac		      byte.b	172
     39  a8dd		       b0		      byte.b	176
     40  a8de		       b5		      byte.b	181
     41  a8df		       b9		      byte.b	185
     42  a8e0		       bd		      byte.b	189
     43  a8e1		       c1		      byte.b	193
     44  a8e2		       c4		      byte.b	196
     45  a8e3		       c7		      byte.b	199
     46  a8e4		       ca		      byte.b	202
     47  a8e5		       cd		      byte.b	205
     48  a8e6		       d0		      byte.b	208
     49  a8e7		       d3		      byte.b	211
     50  a8e8		       d5		      byte.b	213
     51  a8e9		       d8		      byte.b	216
     52  a8ea		       da		      byte.b	218
     53  a8eb		       dc		      byte.b	220
     54  a8ec		       de		      byte.b	222
     55  a8ed		       e0		      byte.b	224
     56  a8ee		       e2		      byte.b	226
     57  a8ef		       e3		      byte.b	227
     58  a8f0		       e5		      byte.b	229
     59  a8f1		       e6		      byte.b	230
     60  a8f2		       e8		      byte.b	232
     61  a8f3		       e9		      byte.b	233
     62  a8f4		       ea		      byte.b	234
     63  a8f5		       eb		      byte.b	235
     64  a8f6		       ec		      byte.b	236
     65  a8f7		       ed		      byte.b	237
     66  a8f8		       ee		      byte.b	238
     67  a8f9		       00		      byte.b	0
     68  a8fa		       00		      byte.b	0
     69  a8fb		       00		      byte.b	0
     70  a8fc		       00		      byte.b	0
     71  a8fd		       00		      byte.b	0
     72  a8fe		       00		      byte.b	0
     73  a8ff		       00		      byte.b	0
     74  a900		       00		      byte.b	0
     75  a901		       00		      byte.b	0
     76  a902		       00		      byte.b	0
     77  a903		       00		      byte.b	0
     78  a904		       00		      byte.b	0
     79  a905		       00		      byte.b	0
     80  a906		       00		      byte.b	0
     81  a907		       00		      byte.b	0
     82  a908		       00		      byte.b	0
     83  a909		       00		      byte.b	0
     84  a90a		       00		      byte.b	0
     85  a90b		       00		      byte.b	0
     86  a90c		       00		      byte.b	0
     87  a90d		       00		      byte.b	0
     88  a90e		       00		      byte.b	0
     89  a90f		       00		      byte.b	0
     90  a910		       00		      byte.b	0
     91  a911		       00		      byte.b	0
     92  a912		       00		      byte.b	0
     93  a913		       00		      byte.b	0
     94  a914		       00		      byte.b	0
     95  a915		       00		      byte.b	0
     96  a916		       00		      byte.b	0
     97  a917		       00		      byte.b	0
     98  a918		       00		      byte.b	0
     99  a919		       00		      byte.b	0
    100  a91a		       00		      byte.b	0
    101  a91b		       00		      byte.b	0
    102  a91c		       00		      byte.b	0
    103  a91d		       00		      byte.b	0
    104  a91e		       00		      byte.b	0
    105  a91f		       00		      byte.b	0
    106  a920		       00		      byte.b	0
    107  a921		       00		      byte.b	0
    108  a922		       00		      byte.b	0
    109  a923		       00		      byte.b	0
    110  a924		       00		      byte.b	0
    111  a925		       00		      byte.b	0
    112  a926		       00		      byte.b	0
    113  a927		       00		      byte.b	0
    114  a928		       00		      byte.b	0
    115  a929		       00		      byte.b	0
    116  a92a		       00		      byte.b	0
    117  a92b		       00		      byte.b	0
    118  a92c		       00		      byte.b	0
    119  a92d		       00		      byte.b	0
    120  a92e		       00		      byte.b	0
    121  a92f		       00		      byte.b	0
    122  a930		       00		      byte.b	0
    123  a931		       00		      byte.b	0
    124  a932		       00		      byte.b	0
    125  a933		       00		      byte.b	0
    126  a934		       00		      byte.b	0
    127  a935		       00		      byte.b	0
    128  a936		       00		      byte.b	0
    129  a937		       00		      byte.b	0
    130  a938		       00		      byte.b	0
    131  a939		       00		      byte.b	0
    132  a93a		       00		      byte.b	0
    133  a93b		       00		      byte.b	0
    134  a93c
    135  a93c				   voice2lookup_pal
    136  a93c		       00		      byte.b	0
    137  a93d		       00		      byte.b	0
    138  a93e		       00		      byte.b	0
    139  a93f		       00		      byte.b	0
    140  a940		       00		      byte.b	0
    141  a941		       00		      byte.b	0
    142  a942		       00		      byte.b	0
    143  a943		       00		      byte.b	0
    144  a944		       00		      byte.b	0
    145  a945		       00		      byte.b	0
    146  a946		       00		      byte.b	0
    147  a947		       00		      byte.b	0
    148  a948		       00		      byte.b	0
    149  a949		       00		      byte.b	0
    150  a94a		       00		      byte.b	0
    151  a94b		       00		      byte.b	0
    152  a94c		       00		      byte.b	0
    153  a94d		       00		      byte.b	0
    154  a94e		       00		      byte.b	0
    155  a94f		       00		      byte.b	0
    156  a950		       00		      byte.b	0
    157  a951		       00		      byte.b	0
    158  a952		       00		      byte.b	0
    159  a953		       00		      byte.b	0
    160  a954		       00		      byte.b	0
    161  a955		       00		      byte.b	0
    162  a956		       00		      byte.b	0
    163  a957		       00		      byte.b	0
    164  a958		       00		      byte.b	0
    165  a959		       00		      byte.b	0
    166  a95a		       00		      byte.b	0
    167  a95b		       00		      byte.b	0
    168  a95c		       00		      byte.b	0
    169  a95d		       00		      byte.b	0
    170  a95e		       00		      byte.b	0
    171  a95f		       00		      byte.b	0
    172  a960		       7b		      byte.b	123	; (122.60)  <- not reachable in PAL
    173  a961		       82		      byte.b	130
    174  a962		       89		      byte.b	137
    175  a963		       90		      byte.b	144
    176  a964		       96		      byte.b	150
    177  a965		       9c		      byte.b	156
    178  a966		       a1		      byte.b	161
    179  a967		       a7		      byte.b	167
    180  a968		       ac		      byte.b	172
    181  a969		       b0		      byte.b	176
    182  a96a		       b5		      byte.b	181
    183  a96b		       b9		      byte.b	185
    184  a96c		       bd		      byte.b	189
    185  a96d		       c1		      byte.b	193
    186  a96e		       c4		      byte.b	196
    187  a96f		       c7		      byte.b	199
    188  a970		       ca		      byte.b	202
    189  a971		       cd		      byte.b	205
    190  a972		       d0		      byte.b	208
    191  a973		       d3		      byte.b	211
    192  a974		       d5		      byte.b	213
    193  a975		       d8		      byte.b	216
    194  a976		       da		      byte.b	218
    195  a977		       dc		      byte.b	220
    196  a978		       de		      byte.b	222
    197  a979		       e0		      byte.b	224
    198  a97a		       e2		      byte.b	226
    199  a97b		       e3		      byte.b	227
    200  a97c		       e5		      byte.b	229
    201  a97d		       e6		      byte.b	230
    202  a97e		       e8		      byte.b	232
    203  a97f		       e9		      byte.b	233
    204  a980		       ea		      byte.b	234
    205  a981		       eb		      byte.b	235
    206  a982		       ec		      byte.b	236
    207  a983		       ed		      byte.b	237
    208  a984		       ee		      byte.b	238
    209  a985		       00		      byte.b	0
    210  a986		       00		      byte.b	0
    211  a987		       00		      byte.b	0
    212  a988		       00		      byte.b	0
    213  a989		       00		      byte.b	0
    214  a98a		       00		      byte.b	0
    215  a98b		       00		      byte.b	0
    216  a98c		       00		      byte.b	0
    217  a98d		       00		      byte.b	0
    218  a98e		       00		      byte.b	0
    219  a98f		       00		      byte.b	0
    220  a990		       00		      byte.b	0
    221  a991		       00		      byte.b	0
    222  a992		       00		      byte.b	0
    223  a993		       00		      byte.b	0
    224  a994		       00		      byte.b	0
    225  a995		       00		      byte.b	0
    226  a996		       00		      byte.b	0
    227  a997		       00		      byte.b	0
    228  a998		       00		      byte.b	0
    229  a999		       00		      byte.b	0
    230  a99a		       00		      byte.b	0
    231  a99b		       00		      byte.b	0
    232  a99c		       00		      byte.b	0
    233  a99d		       00		      byte.b	0
    234  a99e		       00		      byte.b	0
    235  a99f		       00		      byte.b	0
    236  a9a0		       00		      byte.b	0
    237  a9a1		       00		      byte.b	0
    238  a9a2		       00		      byte.b	0
    239  a9a3		       00		      byte.b	0
    240  a9a4		       00		      byte.b	0
    241  a9a5		       00		      byte.b	0
    242  a9a6		       00		      byte.b	0
    243  a9a7		       00		      byte.b	0
    244  a9a8		       00		      byte.b	0
    245  a9a9		       00		      byte.b	0
    246  a9aa		       00		      byte.b	0
    247  a9ab		       00		      byte.b	0
    248  a9ac		       00		      byte.b	0
    249  a9ad		       00		      byte.b	0
    250  a9ae		       00		      byte.b	0
    251  a9af		       00		      byte.b	0
    252  a9b0		       00		      byte.b	0
    253  a9b1		       00		      byte.b	0
    254  a9b2		       00		      byte.b	0
    255  a9b3		       00		      byte.b	0
    256  a9b4		       00		      byte.b	0
    257  a9b5		       00		      byte.b	0
    258  a9b6		       00		      byte.b	0
    259  a9b7		       00		      byte.b	0
    260  a9b8		       00		      byte.b	0
    261  a9b9		       00		      byte.b	0
    262  a9ba		       00		      byte.b	0
    263  a9bb		       00		      byte.b	0
    264  a9bc
    265  a9bc				   voice3lookup_pal
    266  a9bc		       00		      byte.b	0
    267  a9bd		       00		      byte.b	0
    268  a9be		       00		      byte.b	0
    269  a9bf		       00		      byte.b	0
    270  a9c0		       00		      byte.b	0
    271  a9c1		       00		      byte.b	0
    272  a9c2		       00		      byte.b	0
    273  a9c3		       00		      byte.b	0
    274  a9c4		       00		      byte.b	0
    275  a9c5		       00		      byte.b	0
    276  a9c6		       00		      byte.b	0
    277  a9c7		       00		      byte.b	0
    278  a9c8		       00		      byte.b	0
    279  a9c9		       00		      byte.b	0
    280  a9ca		       00		      byte.b	0
    281  a9cb		       00		      byte.b	0
    282  a9cc		       00		      byte.b	0
    283  a9cd		       00		      byte.b	0
    284  a9ce		       00		      byte.b	0
    285  a9cf		       00		      byte.b	0
    286  a9d0		       00		      byte.b	0
    287  a9d1		       00		      byte.b	0
    288  a9d2		       00		      byte.b	0
    289  a9d3		       00		      byte.b	0
    290  a9d4		       00		      byte.b	0
    291  a9d5		       00		      byte.b	0
    292  a9d6		       00		      byte.b	0
    293  a9d7		       00		      byte.b	0
    294  a9d8		       00		      byte.b	0
    295  a9d9		       00		      byte.b	0
    296  a9da		       00		      byte.b	0
    297  a9db		       00		      byte.b	0
    298  a9dc		       00		      byte.b	0
    299  a9dd		       00		      byte.b	0
    300  a9de		       00		      byte.b	0
    301  a9df		       00		      byte.b	0
    302  a9e0		       00		      byte.b	0
    303  a9e1		       00		      byte.b	0
    304  a9e2		       00		      byte.b	0
    305  a9e3		       00		      byte.b	0
    306  a9e4		       00		      byte.b	0
    307  a9e5		       00		      byte.b	0
    308  a9e6		       00		      byte.b	0
    309  a9e7		       00		      byte.b	0
    310  a9e8		       00		      byte.b	0
    311  a9e9		       00		      byte.b	0
    312  a9ea		       00		      byte.b	0
    313  a9eb		       00		      byte.b	0
    314  a9ec		       7b		      byte.b	123	; (122.60)  <- not reachable in PAL
    315  a9ed		       82		      byte.b	130
    316  a9ee		       89		      byte.b	137
    317  a9ef		       90		      byte.b	144
    318  a9f0		       96		      byte.b	150
    319  a9f1		       9c		      byte.b	156
    320  a9f2		       a1		      byte.b	161
    321  a9f3		       a7		      byte.b	167
    322  a9f4		       ac		      byte.b	172
    323  a9f5		       b0		      byte.b	176
    324  a9f6		       b5		      byte.b	181
    325  a9f7		       b9		      byte.b	185
    326  a9f8		       bd		      byte.b	189
    327  a9f9		       c1		      byte.b	193
    328  a9fa		       c4		      byte.b	196
    329  a9fb		       c7		      byte.b	199
    330  a9fc		       ca		      byte.b	202
    331  a9fd		       cd		      byte.b	205
    332  a9fe		       d0		      byte.b	208
    333  a9ff		       d3		      byte.b	211
    334  aa00		       d5		      byte.b	213
    335  aa01		       d8		      byte.b	216
    336  aa02		       da		      byte.b	218
    337  aa03		       dc		      byte.b	220
    338  aa04		       de		      byte.b	222
    339  aa05		       e0		      byte.b	224
    340  aa06		       e2		      byte.b	226
    341  aa07		       e3		      byte.b	227
    342  aa08		       e5		      byte.b	229
    343  aa09		       e6		      byte.b	230
    344  aa0a		       e8		      byte.b	232
    345  aa0b		       e9		      byte.b	233
    346  aa0c		       ea		      byte.b	234
    347  aa0d		       eb		      byte.b	235
    348  aa0e		       ec		      byte.b	236
    349  aa0f		       ed		      byte.b	237
    350  aa10		       ee		      byte.b	238
    351  aa11		       00		      byte.b	0
    352  aa12		       00		      byte.b	0
    353  aa13		       00		      byte.b	0
    354  aa14		       00		      byte.b	0
    355  aa15		       00		      byte.b	0
    356  aa16		       00		      byte.b	0
    357  aa17		       00		      byte.b	0
    358  aa18		       00		      byte.b	0
    359  aa19		       00		      byte.b	0
    360  aa1a		       00		      byte.b	0
    361  aa1b		       00		      byte.b	0
    362  aa1c		       00		      byte.b	0
    363  aa1d		       00		      byte.b	0
    364  aa1e		       00		      byte.b	0
    365  aa1f		       00		      byte.b	0
    366  aa20		       00		      byte.b	0
    367  aa21		       00		      byte.b	0
    368  aa22		       00		      byte.b	0
    369  aa23		       00		      byte.b	0
    370  aa24		       00		      byte.b	0
    371  aa25		       00		      byte.b	0
    372  aa26		       00		      byte.b	0
    373  aa27		       00		      byte.b	0
    374  aa28		       00		      byte.b	0
    375  aa29		       00		      byte.b	0
    376  aa2a		       00		      byte.b	0
    377  aa2b		       00		      byte.b	0
    378  aa2c		       00		      byte.b	0
    379  aa2d		       00		      byte.b	0
    380  aa2e		       00		      byte.b	0
    381  aa2f		       00		      byte.b	0
    382  aa30		       00		      byte.b	0
    383  aa31		       00		      byte.b	0
    384  aa32		       00		      byte.b	0
    385  aa33		       00		      byte.b	0
    386  aa34		       00		      byte.b	0
    387  aa35		       00		      byte.b	0
    388  aa36		       00		      byte.b	0
    389  aa37		       00		      byte.b	0
    390  aa38		       00		      byte.b	0
    391  aa39		       00		      byte.b	0
    392  aa3a		       00		      byte.b	0
    393  aa3b		       00		      byte.b	0
    394  aa3c
    395  aa3c
    396  aa3c				   voice4lookup_pal
    397  aa3c		       00		      byte.b	0
    398  aa3d		       00		      byte.b	0
    399  aa3e		       00		      byte.b	0
    400  aa3f		       00		      byte.b	0
    401  aa40		       00		      byte.b	0
    402  aa41		       00		      byte.b	0
    403  aa42		       00		      byte.b	0
    404  aa43		       00		      byte.b	0
    405  aa44		       00		      byte.b	0
    406  aa45		       00		      byte.b	0
    407  aa46		       00		      byte.b	0
    408  aa47		       00		      byte.b	0
    409  aa48		       00		      byte.b	0
    410  aa49		       00		      byte.b	0
    411  aa4a		       00		      byte.b	0
    412  aa4b		       00		      byte.b	0
    413  aa4c		       00		      byte.b	0
    414  aa4d		       00		      byte.b	0
    415  aa4e		       00		      byte.b	0
    416  aa4f		       00		      byte.b	0
    417  aa50		       00		      byte.b	0
    418  aa51		       00		      byte.b	0
    419  aa52		       00		      byte.b	0
    420  aa53		       00		      byte.b	0
    421  aa54		       00		      byte.b	0
    422  aa55		       00		      byte.b	0
    423  aa56		       00		      byte.b	0
    424  aa57		       00		      byte.b	0
    425  aa58		       00		      byte.b	0
    426  aa59		       00		      byte.b	0
    427  aa5a		       00		      byte.b	0
    428  aa5b		       00		      byte.b	0
    429  aa5c		       00		      byte.b	0
    430  aa5d		       00		      byte.b	0
    431  aa5e		       00		      byte.b	0
    432  aa5f		       00		      byte.b	0
    433  aa60		       85		      byte.b	133	; (122.60)  <- not reachable in PAL
    434  aa61		       8c		      byte.b	140
    435  aa62		       92		      byte.b	146
    436  aa63		       98		      byte.b	152
    437  aa64		       9e		      byte.b	158
    438  aa65		       a3		      byte.b	163
    439  aa66		       a9		      byte.b	169
    440  aa67		       ad		      byte.b	173
    441  aa68		       b2		      byte.b	178
    442  aa69		       b6		      byte.b	182
    443  aa6a		       ba		      byte.b	186
    444  aa6b		       be		      byte.b	190
    445  aa6c		       c2		      byte.b	194
    446  aa6d		       c5		      byte.b	197
    447  aa6e		       c9		      byte.b	201
    448  aa6f		       cc		      byte.b	204
    449  aa70		       cf		      byte.b	207
    450  aa71		       d1		      byte.b	209
    451  aa72		       d4		      byte.b	212
    452  aa73		       d6		      byte.b	214
    453  aa74		       d9		      byte.b	217
    454  aa75		       db		      byte.b	219
    455  aa76		       dd		      byte.b	221
    456  aa77		       df		      byte.b	223
    457  aa78		       e0		      byte.b	224
    458  aa79		       e2		      byte.b	226
    459  aa7a		       e4		      byte.b	228
    460  aa7b		       e5		      byte.b	229
    461  aa7c		       e7		      byte.b	231
    462  aa7d		       e8		      byte.b	232
    463  aa7e		       e9		      byte.b	233
    464  aa7f		       eb		      byte.b	235
    465  aa80		       ec		      byte.b	236
    466  aa81		       ed		      byte.b	237
    467  aa82		       ee		      byte.b	238
    468  aa83		       ef		      byte.b	239
    469  aa84		       f0		      byte.b	240
    470  aa85		       00		      byte.b	0
    471  aa86		       00		      byte.b	0
    472  aa87		       00		      byte.b	0
    473  aa88		       00		      byte.b	0
    474  aa89		       00		      byte.b	0
    475  aa8a		       00		      byte.b	0
    476  aa8b		       00		      byte.b	0
    477  aa8c		       00		      byte.b	0
    478  aa8d		       00		      byte.b	0
    479  aa8e		       00		      byte.b	0
    480  aa8f		       00		      byte.b	0
    481  aa90		       00		      byte.b	0
    482  aa91		       00		      byte.b	0
    483  aa92		       00		      byte.b	0
    484  aa93		       00		      byte.b	0
    485  aa94		       00		      byte.b	0
    486  aa95		       00		      byte.b	0
    487  aa96		       00		      byte.b	0
    488  aa97		       00		      byte.b	0
    489  aa98		       00		      byte.b	0
    490  aa99		       00		      byte.b	0
    491  aa9a		       00		      byte.b	0
    492  aa9b		       00		      byte.b	0
    493  aa9c		       00		      byte.b	0
    494  aa9d		       00		      byte.b	0
    495  aa9e		       00		      byte.b	0
    496  aa9f		       00		      byte.b	0
    497  aaa0		       00		      byte.b	0
    498  aaa1		       00		      byte.b	0
    499  aaa2		       00		      byte.b	0
    500  aaa3		       00		      byte.b	0
    501  aaa4		       00		      byte.b	0
    502  aaa5		       00		      byte.b	0
    503  aaa6		       00		      byte.b	0
    504  aaa7		       00		      byte.b	0
    505  aaa8		       00		      byte.b	0
    506  aaa9		       00		      byte.b	0
    507  aaaa		       00		      byte.b	0
    508  aaab		       00		      byte.b	0
    509  aaac		       00		      byte.b	0
    510  aaad		       00		      byte.b	0
    511  aaae		       00		      byte.b	0
    512  aaaf		       00		      byte.b	0
    513  aab0		       00		      byte.b	0
    514  aab1		       00		      byte.b	0
    515  aab2		       00		      byte.b	0
    516  aab3		       00		      byte.b	0
    517  aab4		       00		      byte.b	0
    518  aab5		       00		      byte.b	0
    519  aab6		       00		      byte.b	0
    520  aab7		       00		      byte.b	0
    521  aab8		       00		      byte.b	0
    522  aab9		       00		      byte.b	0
    523  aaba		       00		      byte.b	0
    524  aabb		       00		      byte.b	0
    525  aabc
    526  aabc							; EOF!
------- FILE vicmidi.asm
------- FILE lookup-alt.asm LEVEL 2 PASS 2
      0  aabc					      include	"lookup-alt.asm"
      1  aabc							; --------------------------------------------------------------------------------------------------
      2  aabc							; Note Lookups Alternate - 128 bytes each, map MIDI Note# to a VIC register value
      3  aabc							; From http://sleepingelephant.com/ipw-web/bulletin/bb/viewtopic.php?t=3643
      4  aabc
      5  aabc				   voice1lookup_alt
      6  aabc		       00		      byte.b	0
      7  aabd		       00		      byte.b	0
      8  aabe		       00		      byte.b	0
      9  aabf		       00		      byte.b	0
     10  aac0		       00		      byte.b	0
     11  aac1		       00		      byte.b	0
     12  aac2		       00		      byte.b	0
     13  aac3		       00		      byte.b	0
     14  aac4		       00		      byte.b	0
     15  aac5		       00		      byte.b	0
     16  aac6		       00		      byte.b	0
     17  aac7		       00		      byte.b	0
     18  aac8		       00		      byte.b	0
     19  aac9		       00		      byte.b	0
     20  aaca		       00		      byte.b	0
     21  aacb		       00		      byte.b	0
     22  aacc		       00		      byte.b	0
     23  aacd		       00		      byte.b	0
     24  aace		       00		      byte.b	0
     25  aacf		       00		      byte.b	0
     26  aad0		       00		      byte.b	0
     27  aad1		       00		      byte.b	0
     28  aad2		       00		      byte.b	0
     29  aad3		       00		      byte.b	0
     30  aad4		       ff		      byte.b	255
     31  aad5		       86		      byte.b	134
     32  aad6		       8d		      byte.b	141
     33  aad7		       93		      byte.b	147
     34  aad8		       99		      byte.b	153
     35  aad9		       9f		      byte.b	159
     36  aada		       a4		      byte.b	164
     37  aadb		       aa		      byte.b	170
     38  aadc		       ae		      byte.b	174
     39  aadd		       b3		      byte.b	179
     40  aade		       b7		      byte.b	183
     41  aadf		       bb		      byte.b	187
     42  aae0		       bf		      byte.b	191
     43  aae1		       c3		      byte.b	195
     44  aae2		       c6		      byte.b	198
     45  aae3		       c9		      byte.b	201
     46  aae4		       cc		      byte.b	204
     47  aae5		       cf		      byte.b	207
     48  aae6		       d2		      byte.b	210
     49  aae7		       d4		      byte.b	212
     50  aae8		       d7		      byte.b	215
     51  aae9		       d9		      byte.b	217
     52  aaea		       db		      byte.b	219
     53  aaeb		       dd		      byte.b	221
     54  aaec		       df		      byte.b	223
     55  aaed		       e1		      byte.b	225
     56  aaee		       e2		      byte.b	226
     57  aaef		       e4		      byte.b	228
     58  aaf0		       e6		      byte.b	230
     59  aaf1		       e7		      byte.b	231
     60  aaf2		       e8		      byte.b	232
     61  aaf3		       ea		      byte.b	234
     62  aaf4		       eb		      byte.b	235
     63  aaf5		       ec		      byte.b	236
     64  aaf6		       ed		      byte.b	237
     65  aaf7		       ee		      byte.b	238
     66  aaf8		       ef		      byte.b	239
     67  aaf9		       00		      byte.b	0
     68  aafa		       00		      byte.b	0
     69  aafb		       00		      byte.b	0
     70  aafc		       00		      byte.b	0
     71  aafd		       00		      byte.b	0
     72  aafe		       00		      byte.b	0
     73  aaff		       00		      byte.b	0
     74  ab00		       00		      byte.b	0
     75  ab01		       00		      byte.b	0
     76  ab02		       00		      byte.b	0
     77  ab03		       00		      byte.b	0
     78  ab04		       00		      byte.b	0
     79  ab05		       00		      byte.b	0
     80  ab06		       00		      byte.b	0
     81  ab07		       00		      byte.b	0
     82  ab08		       00		      byte.b	0
     83  ab09		       00		      byte.b	0
     84  ab0a		       00		      byte.b	0
     85  ab0b		       00		      byte.b	0
     86  ab0c		       00		      byte.b	0
     87  ab0d		       00		      byte.b	0
     88  ab0e		       00		      byte.b	0
     89  ab0f		       00		      byte.b	0
     90  ab10		       00		      byte.b	0
     91  ab11		       00		      byte.b	0
     92  ab12		       00		      byte.b	0
     93  ab13		       00		      byte.b	0
     94  ab14		       00		      byte.b	0
     95  ab15		       00		      byte.b	0
     96  ab16		       00		      byte.b	0
     97  ab17		       00		      byte.b	0
     98  ab18		       00		      byte.b	0
     99  ab19		       00		      byte.b	0
    100  ab1a		       00		      byte.b	0
    101  ab1b		       00		      byte.b	0
    102  ab1c		       00		      byte.b	0
    103  ab1d		       00		      byte.b	0
    104  ab1e		       00		      byte.b	0
    105  ab1f		       00		      byte.b	0
    106  ab20		       00		      byte.b	0
    107  ab21		       00		      byte.b	0
    108  ab22		       00		      byte.b	0
    109  ab23		       00		      byte.b	0
    110  ab24		       00		      byte.b	0
    111  ab25		       00		      byte.b	0
    112  ab26		       00		      byte.b	0
    113  ab27		       00		      byte.b	0
    114  ab28		       00		      byte.b	0
    115  ab29		       00		      byte.b	0
    116  ab2a		       00		      byte.b	0
    117  ab2b		       00		      byte.b	0
    118  ab2c		       00		      byte.b	0
    119  ab2d		       00		      byte.b	0
    120  ab2e		       00		      byte.b	0
    121  ab2f		       00		      byte.b	0
    122  ab30		       00		      byte.b	0
    123  ab31		       00		      byte.b	0
    124  ab32		       00		      byte.b	0
    125  ab33		       00		      byte.b	0
    126  ab34		       00		      byte.b	0
    127  ab35		       00		      byte.b	0
    128  ab36		       00		      byte.b	0
    129  ab37		       00		      byte.b	0
    130  ab38		       00		      byte.b	0
    131  ab39		       00		      byte.b	0
    132  ab3a		       00		      byte.b	0
    133  ab3b		       00		      byte.b	0
    134  ab3c
    135  ab3c				   voice2lookup_alt
    136  ab3c		       00		      byte.b	0
    137  ab3d		       00		      byte.b	0
    138  ab3e		       00		      byte.b	0
    139  ab3f		       00		      byte.b	0
    140  ab40		       00		      byte.b	0
    141  ab41		       00		      byte.b	0
    142  ab42		       00		      byte.b	0
    143  ab43		       00		      byte.b	0
    144  ab44		       00		      byte.b	0
    145  ab45		       00		      byte.b	0
    146  ab46		       00		      byte.b	0
    147  ab47		       00		      byte.b	0
    148  ab48		       00		      byte.b	0
    149  ab49		       00		      byte.b	0
    150  ab4a		       00		      byte.b	0
    151  ab4b		       00		      byte.b	0
    152  ab4c		       00		      byte.b	0
    153  ab4d		       00		      byte.b	0
    154  ab4e		       00		      byte.b	0
    155  ab4f		       00		      byte.b	0
    156  ab50		       00		      byte.b	0
    157  ab51		       00		      byte.b	0
    158  ab52		       00		      byte.b	0
    159  ab53		       00		      byte.b	0
    160  ab54		       00		      byte.b	0
    161  ab55		       00		      byte.b	0
    162  ab56		       00		      byte.b	0
    163  ab57		       00		      byte.b	0
    164  ab58		       00		      byte.b	0
    165  ab59		       00		      byte.b	0
    166  ab5a		       00		      byte.b	0
    167  ab5b		       00		      byte.b	0
    168  ab5c		       00		      byte.b	0
    169  ab5d		       00		      byte.b	0
    170  ab5e		       00		      byte.b	0
    171  ab5f		       00		      byte.b	0
    172  ab60		       ff		      byte.b	255
    173  ab61		       86		      byte.b	134
    174  ab62		       8d		      byte.b	141
    175  ab63		       93		      byte.b	147
    176  ab64		       99		      byte.b	153
    177  ab65		       9f		      byte.b	159
    178  ab66		       a4		      byte.b	164
    179  ab67		       aa		      byte.b	170
    180  ab68		       ae		      byte.b	174
    181  ab69		       b3		      byte.b	179
    182  ab6a		       b7		      byte.b	183
    183  ab6b		       bb		      byte.b	187
    184  ab6c		       bf		      byte.b	191
    185  ab6d		       c3		      byte.b	195
    186  ab6e		       c6		      byte.b	198
    187  ab6f		       c9		      byte.b	201
    188  ab70		       cc		      byte.b	204
    189  ab71		       cf		      byte.b	207
    190  ab72		       d2		      byte.b	210
    191  ab73		       d4		      byte.b	212
    192  ab74		       d7		      byte.b	215
    193  ab75		       d9		      byte.b	217
    194  ab76		       db		      byte.b	219
    195  ab77		       dd		      byte.b	221
    196  ab78		       df		      byte.b	223
    197  ab79		       e1		      byte.b	225
    198  ab7a		       e2		      byte.b	226
    199  ab7b		       e4		      byte.b	228
    200  ab7c		       e6		      byte.b	230
    201  ab7d		       e7		      byte.b	231
    202  ab7e		       e8		      byte.b	232
    203  ab7f		       ea		      byte.b	234
    204  ab80		       eb		      byte.b	235
    205  ab81		       ec		      byte.b	236
    206  ab82		       ed		      byte.b	237
    207  ab83		       ee		      byte.b	238
    208  ab84		       ef		      byte.b	239
    209  ab85		       00		      byte.b	0
    210  ab86		       00		      byte.b	0
    211  ab87		       00		      byte.b	0
    212  ab88		       00		      byte.b	0
    213  ab89		       00		      byte.b	0
    214  ab8a		       00		      byte.b	0
    215  ab8b		       00		      byte.b	0
    216  ab8c		       00		      byte.b	0
    217  ab8d		       00		      byte.b	0
    218  ab8e		       00		      byte.b	0
    219  ab8f		       00		      byte.b	0
    220  ab90		       00		      byte.b	0
    221  ab91		       00		      byte.b	0
    222  ab92		       00		      byte.b	0
    223  ab93		       00		      byte.b	0
    224  ab94		       00		      byte.b	0
    225  ab95		       00		      byte.b	0
    226  ab96		       00		      byte.b	0
    227  ab97		       00		      byte.b	0
    228  ab98		       00		      byte.b	0
    229  ab99		       00		      byte.b	0
    230  ab9a		       00		      byte.b	0
    231  ab9b		       00		      byte.b	0
    232  ab9c		       00		      byte.b	0
    233  ab9d		       00		      byte.b	0
    234  ab9e		       00		      byte.b	0
    235  ab9f		       00		      byte.b	0
    236  aba0		       00		      byte.b	0
    237  aba1		       00		      byte.b	0
    238  aba2		       00		      byte.b	0
    239  aba3		       00		      byte.b	0
    240  aba4		       00		      byte.b	0
    241  aba5		       00		      byte.b	0
    242  aba6		       00		      byte.b	0
    243  aba7		       00		      byte.b	0
    244  aba8		       00		      byte.b	0
    245  aba9		       00		      byte.b	0
    246  abaa		       00		      byte.b	0
    247  abab		       00		      byte.b	0
    248  abac		       00		      byte.b	0
    249  abad		       00		      byte.b	0
    250  abae		       00		      byte.b	0
    251  abaf		       00		      byte.b	0
    252  abb0		       00		      byte.b	0
    253  abb1		       00		      byte.b	0
    254  abb2		       00		      byte.b	0
    255  abb3		       00		      byte.b	0
    256  abb4		       00		      byte.b	0
    257  abb5		       00		      byte.b	0
    258  abb6		       00		      byte.b	0
    259  abb7		       00		      byte.b	0
    260  abb8		       00		      byte.b	0
    261  abb9		       00		      byte.b	0
    262  abba		       00		      byte.b	0
    263  abbb		       00		      byte.b	0
    264  abbc
    265  abbc				   voice3lookup_alt
    266  abbc		       00		      byte.b	0
    267  abbd		       00		      byte.b	0
    268  abbe		       00		      byte.b	0
    269  abbf		       00		      byte.b	0
    270  abc0		       00		      byte.b	0
    271  abc1		       00		      byte.b	0
    272  abc2		       00		      byte.b	0
    273  abc3		       00		      byte.b	0
    274  abc4		       00		      byte.b	0
    275  abc5		       00		      byte.b	0
    276  abc6		       00		      byte.b	0
    277  abc7		       00		      byte.b	0
    278  abc8		       00		      byte.b	0
    279  abc9		       00		      byte.b	0
    280  abca		       00		      byte.b	0
    281  abcb		       00		      byte.b	0
    282  abcc		       00		      byte.b	0
    283  abcd		       00		      byte.b	0
    284  abce		       00		      byte.b	0
    285  abcf		       00		      byte.b	0
    286  abd0		       00		      byte.b	0
    287  abd1		       00		      byte.b	0
    288  abd2		       00		      byte.b	0
    289  abd3		       00		      byte.b	0
    290  abd4		       00		      byte.b	0
    291  abd5		       00		      byte.b	0
    292  abd6		       00		      byte.b	0
    293  abd7		       00		      byte.b	0
    294  abd8		       00		      byte.b	0
    295  abd9		       00		      byte.b	0
    296  abda		       00		      byte.b	0
    297  abdb		       00		      byte.b	0
    298  abdc		       00		      byte.b	0
    299  abdd		       00		      byte.b	0
    300  abde		       00		      byte.b	0
    301  abdf		       00		      byte.b	0
    302  abe0		       00		      byte.b	0
    303  abe1		       00		      byte.b	0
    304  abe2		       00		      byte.b	0
    305  abe3		       00		      byte.b	0
    306  abe4		       00		      byte.b	0
    307  abe5		       00		      byte.b	0
    308  abe6		       00		      byte.b	0
    309  abe7		       00		      byte.b	0
    310  abe8		       00		      byte.b	0
    311  abe9		       00		      byte.b	0
    312  abea		       00		      byte.b	0
    313  abeb		       00		      byte.b	0
    314  abec		       ff		      byte.b	255
    315  abed		       86		      byte.b	134
    316  abee		       8d		      byte.b	141
    317  abef		       93		      byte.b	147
    318  abf0		       99		      byte.b	153
    319  abf1		       9f		      byte.b	159
    320  abf2		       a4		      byte.b	164
    321  abf3		       aa		      byte.b	170
    322  abf4		       ae		      byte.b	174
    323  abf5		       b3		      byte.b	179
    324  abf6		       b7		      byte.b	183
    325  abf7		       bb		      byte.b	187
    326  abf8		       bf		      byte.b	191
    327  abf9		       c3		      byte.b	195
    328  abfa		       c6		      byte.b	198
    329  abfb		       c9		      byte.b	201
    330  abfc		       cc		      byte.b	204
    331  abfd		       cf		      byte.b	207
    332  abfe		       d2		      byte.b	210
    333  abff		       d4		      byte.b	212
    334  ac00		       d7		      byte.b	215
    335  ac01		       d9		      byte.b	217
    336  ac02		       db		      byte.b	219
    337  ac03		       dd		      byte.b	221
    338  ac04		       df		      byte.b	223
    339  ac05		       e1		      byte.b	225
    340  ac06		       e2		      byte.b	226
    341  ac07		       e4		      byte.b	228
    342  ac08		       e6		      byte.b	230
    343  ac09		       e7		      byte.b	231
    344  ac0a		       e8		      byte.b	232
    345  ac0b		       ea		      byte.b	234
    346  ac0c		       eb		      byte.b	235
    347  ac0d		       ec		      byte.b	236
    348  ac0e		       ed		      byte.b	237
    349  ac0f		       ee		      byte.b	238
    350  ac10		       ef		      byte.b	239
    351  ac11		       00		      byte.b	0
    352  ac12		       00		      byte.b	0
    353  ac13		       00		      byte.b	0
    354  ac14		       00		      byte.b	0
    355  ac15		       00		      byte.b	0
    356  ac16		       00		      byte.b	0
    357  ac17		       00		      byte.b	0
    358  ac18		       00		      byte.b	0
    359  ac19		       00		      byte.b	0
    360  ac1a		       00		      byte.b	0
    361  ac1b		       00		      byte.b	0
    362  ac1c		       00		      byte.b	0
    363  ac1d		       00		      byte.b	0
    364  ac1e		       00		      byte.b	0
    365  ac1f		       00		      byte.b	0
    366  ac20		       00		      byte.b	0
    367  ac21		       00		      byte.b	0
    368  ac22		       00		      byte.b	0
    369  ac23		       00		      byte.b	0
    370  ac24		       00		      byte.b	0
    371  ac25		       00		      byte.b	0
    372  ac26		       00		      byte.b	0
    373  ac27		       00		      byte.b	0
    374  ac28		       00		      byte.b	0
    375  ac29		       00		      byte.b	0
    376  ac2a		       00		      byte.b	0
    377  ac2b		       00		      byte.b	0
    378  ac2c		       00		      byte.b	0
    379  ac2d		       00		      byte.b	0
    380  ac2e		       00		      byte.b	0
    381  ac2f		       00		      byte.b	0
    382  ac30		       00		      byte.b	0
    383  ac31		       00		      byte.b	0
    384  ac32		       00		      byte.b	0
    385  ac33		       00		      byte.b	0
    386  ac34		       00		      byte.b	0
    387  ac35		       00		      byte.b	0
    388  ac36		       00		      byte.b	0
    389  ac37		       00		      byte.b	0
    390  ac38		       00		      byte.b	0
    391  ac39		       00		      byte.b	0
    392  ac3a		       00		      byte.b	0
    393  ac3b		       00		      byte.b	0
    394  ac3c
    395  ac3c
    396  ac3c				   voice4lookup_alt
    397  ac3c		       00		      byte.b	0
    398  ac3d		       00		      byte.b	0
    399  ac3e		       00		      byte.b	0
    400  ac3f		       00		      byte.b	0
    401  ac40		       00		      byte.b	0
    402  ac41		       00		      byte.b	0
    403  ac42		       00		      byte.b	0
    404  ac43		       00		      byte.b	0
    405  ac44		       00		      byte.b	0
    406  ac45		       00		      byte.b	0
    407  ac46		       00		      byte.b	0
    408  ac47		       00		      byte.b	0
    409  ac48		       00		      byte.b	0
    410  ac49		       00		      byte.b	0
    411  ac4a		       00		      byte.b	0
    412  ac4b		       00		      byte.b	0
    413  ac4c		       00		      byte.b	0
    414  ac4d		       00		      byte.b	0
    415  ac4e		       00		      byte.b	0
    416  ac4f		       00		      byte.b	0
    417  ac50		       00		      byte.b	0
    418  ac51		       00		      byte.b	0
    419  ac52		       00		      byte.b	0
    420  ac53		       00		      byte.b	0
    421  ac54		       00		      byte.b	0
    422  ac55		       00		      byte.b	0
    423  ac56		       00		      byte.b	0
    424  ac57		       00		      byte.b	0
    425  ac58		       00		      byte.b	0
    426  ac59		       00		      byte.b	0
    427  ac5a		       00		      byte.b	0
    428  ac5b		       00		      byte.b	0
    429  ac5c		       00		      byte.b	0
    430  ac5d		       00		      byte.b	0
    431  ac5e		       00		      byte.b	0
    432  ac5f		       00		      byte.b	0
    433  ac60		       ff		      byte.b	255
    434  ac61		       86		      byte.b	134
    435  ac62		       8d		      byte.b	141
    436  ac63		       93		      byte.b	147
    437  ac64		       99		      byte.b	153
    438  ac65		       9f		      byte.b	159
    439  ac66		       a4		      byte.b	164
    440  ac67		       aa		      byte.b	170
    441  ac68		       ae		      byte.b	174
    442  ac69		       b3		      byte.b	179
    443  ac6a		       b7		      byte.b	183
    444  ac6b		       bb		      byte.b	187
    445  ac6c		       bf		      byte.b	191
    446  ac6d		       c3		      byte.b	195
    447  ac6e		       c6		      byte.b	198
    448  ac6f		       c9		      byte.b	201
    449  ac70		       cc		      byte.b	204
    450  ac71		       cf		      byte.b	207
    451  ac72		       d2		      byte.b	210
    452  ac73		       d4		      byte.b	212
    453  ac74		       d7		      byte.b	215
    454  ac75		       d9		      byte.b	217
    455  ac76		       db		      byte.b	219
    456  ac77		       dd		      byte.b	221
    457  ac78		       df		      byte.b	223
    458  ac79		       e1		      byte.b	225
    459  ac7a		       e2		      byte.b	226
    460  ac7b		       e4		      byte.b	228
    461  ac7c		       e6		      byte.b	230
    462  ac7d		       e7		      byte.b	231
    463  ac7e		       e8		      byte.b	232
    464  ac7f		       ea		      byte.b	234
    465  ac80		       eb		      byte.b	235
    466  ac81		       ec		      byte.b	236
    467  ac82		       ed		      byte.b	237
    468  ac83		       ee		      byte.b	238
    469  ac84		       ef		      byte.b	239
    470  ac85		       00		      byte.b	0
    471  ac86		       00		      byte.b	0
    472  ac87		       00		      byte.b	0
    473  ac88		       00		      byte.b	0
    474  ac89		       00		      byte.b	0
    475  ac8a		       00		      byte.b	0
    476  ac8b		       00		      byte.b	0
    477  ac8c		       00		      byte.b	0
    478  ac8d		       00		      byte.b	0
    479  ac8e		       00		      byte.b	0
    480  ac8f		       00		      byte.b	0
    481  ac90		       00		      byte.b	0
    482  ac91		       00		      byte.b	0
    483  ac92		       00		      byte.b	0
    484  ac93		       00		      byte.b	0
    485  ac94		       00		      byte.b	0
    486  ac95		       00		      byte.b	0
    487  ac96		       00		      byte.b	0
    488  ac97		       00		      byte.b	0
    489  ac98		       00		      byte.b	0
    490  ac99		       00		      byte.b	0
    491  ac9a		       00		      byte.b	0
    492  ac9b		       00		      byte.b	0
    493  ac9c		       00		      byte.b	0
    494  ac9d		       00		      byte.b	0
    495  ac9e		       00		      byte.b	0
    496  ac9f		       00		      byte.b	0
    497  aca0		       00		      byte.b	0
    498  aca1		       00		      byte.b	0
    499  aca2		       00		      byte.b	0
    500  aca3		       00		      byte.b	0
    501  aca4		       00		      byte.b	0
    502  aca5		       00		      byte.b	0
    503  aca6		       00		      byte.b	0
    504  aca7		       00		      byte.b	0
    505  aca8		       00		      byte.b	0
    506  aca9		       00		      byte.b	0
    507  acaa		       00		      byte.b	0
    508  acab		       00		      byte.b	0
    509  acac		       00		      byte.b	0
    510  acad		       00		      byte.b	0
    511  acae		       00		      byte.b	0
    512  acaf		       00		      byte.b	0
    513  acb0		       00		      byte.b	0
    514  acb1		       00		      byte.b	0
    515  acb2		       00		      byte.b	0
    516  acb3		       00		      byte.b	0
    517  acb4		       00		      byte.b	0
    518  acb5		       00		      byte.b	0
    519  acb6		       00		      byte.b	0
    520  acb7		       00		      byte.b	0
    521  acb8		       00		      byte.b	0
    522  acb9		       00		      byte.b	0
    523  acba		       00		      byte.b	0
    524  acbb		       00		      byte.b	0
    525  acbc
    526  acbc							; EOF!
------- FILE vicmidi.asm
    753  acbc
    754  acbc							; EOF!
