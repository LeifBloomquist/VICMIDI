------- FILE vicmidi.asm LEVEL 1 PASS 2
      1  ac6b ????						; VIC-20 MIDI Interface
      2  ac6b ????						; By David Viens and Leif Bloomquist, portions by
      3  ac6b ????						; Michael Kircher and Viznut
      4  ac6b ????
      5  ac6b ????						; ----------------------------------------------------------------------------
      6  ac6b ????
      7  ac6b ????				      processor	6502	; VIC-20
      8  ac6b ????
      9  ac6b ????						; Assume no memory expansion.	 Compile as Cartridge ROM in Block 5.
     10  a000					      org	$A000	; Block 5
     11  a000
     12  a000							; Macro and equate includes (must be at start)
------- FILE macros.asm LEVEL 2 PASS 2
      0  a000					      include	"macros.asm"
      1  a000
      2  a000							; ==============================================================
      3  a000							; Macro wrapping the fast hex poke
      4  a000							; ==============================================================
      5  a000
      6  a000					      MAC	hexpoke
      7  a000					      lda	#<{1}	; Low byte
      8  a000					      sta	$22
      9  a000					      lda	#>{1}	; High byte
     10  a000					      sta	$23
     11  a000
     12  a000					      lda	{2}	; Note - address
     13  a000					      jsr	hexstr
     14  a000					      ENDM
     15  a000
     16  a000							; ==============================================================
     17  a000							; Macro to position the cursor
     18  a000							; ==============================================================
     19  a000
     20  a000					      MAC	plot
     21  a000					      ldy	#{1}
     22  a000					      ldx	#{2}
     23  a000					      clc
     24  a000					      jsr	$E50A	; PLOT - same on 64 and VIC
     25  a000					      ENDM
     26  a000
     27  a000							; ==============================================================
     28  a000							; Macro to print a string
     29  a000							; ==============================================================
     30  a000
     31  a000					      MAC	printstring
     32  a000					      ldy	#>{0}
     33  a000					      lda	#<{0}
     34  a000					      jsr	STROUT
     35  a000					      ENDM
     36  a000
     37  a000							; ==============================================================
     38  a000							; Macro to print a byte (Hex)
     39  a000							; ==============================================================
     40  a000
     41  a000					      MAC	printbyte
     42  a000					      ldx	#$00
     43  a000					      ldy	#$0F
     44  a000					      lda	{0}
     45  a000					      jsr	printnum
     46  a000					      ENDM
------- FILE vicmidi.asm
------- FILE equates.asm LEVEL 2 PASS 2
      0  a000					      include	"equates.asm"
      1  a000							; --------------------------------------------------------------------------------------------------
      2  a000							;;free zero page (to use as vars)
      3  a000							;INDEX1: $0022-$0023, First utility pointer		       used by HEXPOKE
      4  a000							;INDEX2: $0024-$0025, Second utility pointer		       bytesexpected, midicounter
      5  a000							;FORNAM: $0049-$004A, Pointer to FOR/NEXT index variable etc  channel
      6  a000							;TEMPF3: $004E-$0052, Temporary FLPT storage		       Used by keyboard routines
      7  a000							;TEMPF1: $0057-$005B, Temporary FLPT storage		       Used by setwave
      8  a000							;TEMPF2: $005C-$0060: Temporary FLPT storage		       FIFO pointers
      9  a000							;FAC:	  $0061-$0066, Floating-point Accumulator (FAC)        Flags for Poly mode
     10  a000							;AFAC:   $0069-$006E, Alternative/Auxilary FAC 	       69=last note
     11  a000
     12  a000							; ---- Zero Page Addresses -------------------------------------------------
     13  a000
     14  a000		       00 24	   midicounter =	$24
     15  a000		       00 25	   bytesexpected =	$25
     16  a000
     17  a000		       00 49	   channel    =	$49
     18  a000		       00 4a	   bank       =	$4A	; 0=NTSC Normal, 1=PAL Normal, 2=NTSC Alt., 3=PAL Alt.
     19  a000
     20  a000							; Previous keyboard column bits.
     21  a000		       00 4e	   c0	      =	$4E	; 2,4,6,8,(...)
     22  a000		       00 4f	   c1	      =	$4F	; q,e,t,u,(...)
     23  a000		       00 50	   c2	      =	$50	; w,r,y,i,p,(...)
     24  a000		       00 51	   c3	      =	$51	; 1,3,5,7,(...)
     25  a000
     26  a000							; Used by setwave
     27  a000		       00 57	   TMP	      =	$57
     28  a000		       00 58	   TMP2       =	$58
     29  a000
     30  a000		       00 5c	   write_pointer =	$5C	; FIFO current write pointer - incremented on byte received
     31  a000		       00 5d	   read_pointer =	$5D	; FIFO current read pointer - incremented on byte removed
     32  a000
     33  a000		       00 5e	   currentvalue =	$5E	; Current value for voice settings
     34  a000
     35  a000		       00 61	   poly_flags =	$61	; Flags for polymode
     36  a000							; Also 62,63,64
     37  a000
     38  a000		       00 69	   lastnote   =	$69	; Remembers last note, so Note Off applies to that note only
     39  a000							; Also 69,6A,6B
     40  a000
     41  a000		       00 6c	   temp1      =	$6C	; Used for screen colors
     42  a000		       00 6d	   tempx      =	$6D	; Used by program change
     43  a000
     44  a000							;*00FB-00FE  251-254  Operating system free zero page space
     45  a000		       00 fb	   statusbyte =	$FB
     46  a000		       00 fc	   mididata0  =	$FC
     47  a000		       00 fd	   mididata1  =	$FD
     48  a000		       00 fe	   mididata2  =	$FE	; If needed
     49  a000
     50  a000							; ---- Non Zero Page Addresses -----------------------------------------------
     51  a000
     52  a000							; Setwave Target
     53  a000		       10 00	   setwave    =	$1000	; This is right at the start of BASIC space.  Setwave code has to all be on one page.
     54  a000
     55  a000							; Store viznut waveform being used per voice
     56  a000		       11 00	   waveform1  =	$1100
     57  a000		       11 01	   waveform2  =	$1101
     58  a000		       11 02	   waveform3  =	$1102
     59  a000		       11 03	   waveform4  =	$1103
     60  a000
     61  a000							; Input Buffer
     62  a000		       12 00	   buffer     =	$1200
     63  a000
     64  a000							; ST16C450 Registers
     65  a000		       9c 00	   UART_RXTX  =	$9C00
     66  a000		       9c 01	   UART_IER   =	$9C01
     67  a000		       9c 02	   UART_ISR   =	$9C02
     68  a000		       9c 03	   UART_LCR   =	$9C03
     69  a000		       9c 05	   UART_LSR   =	$9C05
     70  a000		       9c 07	   UART_SCRATCHPAD =	$9C07
     71  a000		       9c 00	   UART_DIVISOR_LSB =	$9C00	; Yes, same as UART_RXTX
     72  a000		       9c 01	   UART_DIVISOR_MSB =	$9C01
     73  a000
     74  a000							;Sound and Video Registers
     75  a000		       90 0a	   sound_voice1 =	$900A	; Frequency for oscillator 1 (low)    (on: 128-255)
     76  a000		       90 0b	   sound_voice2 =	$900B	; Frequency for oscillator 2 (medium) (on: 128-255)
     77  a000		       90 0c	   sound_voice3 =	$900C	; Frequency for oscillator 3 (high)   (on: 128-255)
     78  a000		       90 0d	   sound_noise =	$900D	; Frequency of noise source	       (on: 128-255)
     79  a000		       90 0e	   sound_volume =	$900E	; Bits 0-3 sets volume of all sound.  Bits 4-7 are auxiliary color information (not used)
     80  a000		       90 0f	   screen_colors =	$900F
     81  a000
     82  a000							;Screen locations
     83  a000		       1e 00	   screen_start =	$1E00
     84  a000		       1e 4d	   midi_display =	$1E4D
     85  a000		       1e 77	   voice_display =	$1E77
     86  a000		       1f f9	   spin_display =	$1FF9	; Lower-right corner
     87  a000		       97 f9	   spin_color =	spin_display + $7800
     88  a000
     89  a000
     90  a000							; Kernal/BASIC Routines
     91  a000		       f2 7a	   CHROUT     =	$f27a
     92  a000		       e5 5f	   CLRSCREEN  =	$e55f
     93  a000		       e5 81	   HOME       =	$E581
     94  a000		       cb 1e	   STROUT     =	$CB1E	; Print string pointed to by (A/Y) until zero byte.
     95  a000
     96  a000		       00 08	   CG_DCS     =	8	;disable shift+C=
     97  a000		       00 09	   CG_ECS     =	9	;enable shift+C=
     98  a000
     99  a000		       00 0e	   CG_LCS     =	14	;switch to lowercase
    100  a000		       00 8e	   CG_UCS     =	142	;switch to uppercase
    101  a000
    102  a000							;cursor movement
    103  a000		       00 13	   CS_HOM     =	19
    104  a000		       00 91	   CS_U       =	145
    105  a000		       00 11	   CS_D       =	17
    106  a000		       00 9d	   CS_L       =	157
    107  a000		       00 1d	   CS_R       =	29
    108  a000
    109  a000		       00 0d	   CRLF       =	13
    110  a000
    111  a000							; EOF!
------- FILE vicmidi.asm
     15  a000
     16  a000							; ---- Startup Code ---------------------------------------------------------
     17  a000		       09 a0		      dc.w	START	; Entry point for power up
     18  a002		       f1 a4		      dc.w	RESTORE	; Entry point for warm start (RESTORE)
     19  a004
     20  a004		       41 30 c3 c2*	      dc.b	"A0",$C3,$C2,$CD	; 'A0CBM' boot string
     21  a009
     22  a009				   START
     23  a009							;Kernel Init
     24  a009		       20 8d fd 	      jsr	$fd8d	; RAMTAS - Initialise System Constants
     25  a00c		       20 52 fd 	      jsr	$fd52	; Init Vectors
     26  a00f		       20 f9 fd 	      jsr	$fdf9	; Init I/O
     27  a012		       20 18 e5 	      jsr	$e518	; Init I/O
     28  a015
     29  a015							;BASIC Init (Partial)
     30  a015		       20 5b e4 	      jsr	$e45b	; Init Vectors
     31  a018		       20 a4 e3 	      jsr	$e3a4	; BASIC RAM
     32  a01b		       20 04 e4 	      jsr	$e404	; INIT Message (needed (?) so keycheck routines work)
     33  a01e
     34  a01e				   entry
     35  a01e		       20 00 a3 	      jsr	mainscreen
     36  a021		       20 55 a5 	      jsr	setup_pal
     37  a024		       20 25 a3 	      jsr	setwavecopy
     38  a027		       20 90 a4 	      jsr	checkuart
     39  a02a		       20 cc a4 	      jsr	setupirq
     40  a02d		       20 b2 a4 	      jsr	resetuart
     41  a030
     42  a030							; Default to maximum volume
     43  a030		       a9 0f		      lda	#$0F
     44  a032		       20 f5 a1 	      jsr	setvolume
     45  a035
     46  a035							; Initial Values
     47  a035		       a9 00		      lda	#$00
     48  a037		       85 24		      sta	midicounter	; midicounter=0
     49  a039		       85 fb		      sta	statusbyte	; statusbyte=0
     50  a03b		       85 fc		      sta	mididata0	; mididata0=0
     51  a03d		       85 fd		      sta	mididata1	; mididata1=0
     52  a03f		       85 fe		      sta	mididata2	; mididata2=0
     53  a041		       85 4e		      sta	c0	; no keys are pressed in 7F
     54  a043		       85 4f		      sta	c1	; no keys are pressed in BF
     55  a045		       85 50		      sta	c2	; no keys are pressed in FD
     56  a047		       85 51		      sta	c3	; no keys are pressed in FE
     57  a049		       85 69		      sta	lastnote+0	; Clear
     58  a04b		       85 6a		      sta	lastnote+1	;    last
     59  a04d		       85 6b		      sta	lastnote+2	;	note
     60  a04f		       85 61		      sta	poly_flags+0	; Clear
     61  a051		       85 62		      sta	poly_flags+1	;   poly
     62  a053		       85 63		      sta	poly_flags+2	;     flags
     63  a055		       8d f9 97 	      sta	spin_color
     64  a058		       85 5c		      sta	write_pointer
     65  a05a		       85 5d		      sta	read_pointer
     66  a05c		       8d 00 11 	      sta	waveform1
     67  a05f		       8d 01 11 	      sta	waveform2
     68  a062		       8d 02 11 	      sta	waveform3
     69  a065		       8d 03 11 	      sta	waveform4
     70  a068
     71  a068							;;; ==========================================================================
     72  a068							;;; main LOOP!
     73  a068				   loop
     74  a068		       ee f9 97 	      inc	spin_color	; Prove we aren't 'frozen'
     75  a06b							;jsr GetKey	  ; create events from keyboard if needed - TODO
     76  a06b
     77  a06b		       a5 5d		      lda	read_pointer
     78  a06d		       c5 5c		      cmp	write_pointer
     79  a06f		       f0 f7		      beq	loop	; Pointers match, no data
     80  a071							;;; ==========================================================================
     81  a071
     82  a071							; We have data!
     83  a071							; Advance pointer for next read
     84  a071		       e6 5d		      inc	read_pointer
     85  a073
     86  a073							; Read current byte
     87  a073		       aa		      tax		; Since A still contains the unincremented pointer
     88  a074		       bd 00 12 	      lda	buffer,x
     89  a077
     90  a077							; If Bit 7 is set, it means it's a status byte and we need to prepare for a new message
     91  a077		       10 18		      bpl	data	; Not a status byte
     92  a079
     93  a079							; Store the status byte
     94  a079		       85 fb		      sta	statusbyte
     95  a07b
     96  a07b							; Reset the midi counter to 0
     97  a07b		       a2 00		      ldx	#$00
     98  a07d		       86 24		      stx	midicounter
     99  a07f
    100  a07f							; Also, check how many bytes we'll need - Normally 3, but 2 for Program Change
    101  a07f		       29 f0		      and	#$F0	; Get the upper nybble
    102  a081		       c9 c0		      cmp	#$C0	; Program change
    103  a083		       d0 05		      bne	bytes2
    104  a085
    105  a085				   bytes1
    106  a085		       a0 01		      ldy	#$01
    107  a087		       4c 8c a0 	      jmp	setbytes
    108  a08a
    109  a08a				   bytes2
    110  a08a		       a0 02		      ldy	#$02
    111  a08c
    112  a08c				   setbytes
    113  a08c		       84 25		      sty	bytesexpected
    114  a08e		       4c 68 a0 	      jmp	loop	; Wait for next byte
    115  a091
    116  a091							; ----------------------------------------------------------------------------
    117  a091							; Store data byte
    118  a091
    119  a091				   data
    120  a091		       a6 24		      ldx	midicounter	; What byte are we at?
    121  a093		       95 fc		      sta	mididata0,x	; Store received midi data pointed by x
    122  a095
    123  a095		       e8		      inx		; x++
    124  a096		       86 24		      stx	midicounter	; and store x
    125  a098
    126  a098		       e4 25		      cpx	bytesexpected	; Number of data bytes expected in this MIDI message (i.e. 2)
    127  a09a		       f0 03		      beq	messageproc	; Complete MIDI message received.
    128  a09c
    129  a09c							; Not complete, wait for more bytes.
    130  a09c		       4c 68 a0 	      jmp	loop
    131  a09f
    132  a09f							; ----------------------------------------------------------------------------
    133  a09f							; Process a complete MIDI message
    134  a09f
    135  a09f				   messageproc
    136  a09f							; Reset midicounter back to 0 for next message -
    137  a09f							; This might be redundant, see above line 100
    138  a09f		       a9 00		      lda	#$00
    139  a0a1		       85 24		      sta	midicounter
    140  a0a3
    141  a0a3							; Display received message bytes
      0  a0a3					      HEXPOKE	(midi_display+0),statusbyte
      1  a0a3		       a9 4d		      lda	#<(midi_display+0)
      2  a0a5		       85 22		      sta	$22
      3  a0a7		       a9 1e		      lda	#>(midi_display+0)
      4  a0a9		       85 23		      sta	$23
      5  a0ab
      6  a0ab		       a5 fb		      lda	statusbyte
      7  a0ad		       20 09 a5 	      jsr	hexstr
      0  a0b0					      HEXPOKE	(midi_display+3),mididata0
      1  a0b0		       a9 50		      lda	#<(midi_display+3)
      2  a0b2		       85 22		      sta	$22
      3  a0b4		       a9 1e		      lda	#>(midi_display+3)
      4  a0b6		       85 23		      sta	$23
      5  a0b8
      6  a0b8		       a5 fc		      lda	mididata0
      7  a0ba		       20 09 a5 	      jsr	hexstr
      0  a0bd					      HEXPOKE	(midi_display+6),mididata1
      1  a0bd		       a9 53		      lda	#<(midi_display+6)
      2  a0bf		       85 22		      sta	$22
      3  a0c1		       a9 1e		      lda	#>(midi_display+6)
      4  a0c3		       85 23		      sta	$23
      5  a0c5
      6  a0c5		       a5 fd		      lda	mididata1
      7  a0c7		       20 09 a5 	      jsr	hexstr
    145  a0ca
    146  a0ca							; Save channel
    147  a0ca		       a5 fb		      lda	statusbyte
    148  a0cc		       29 0f		      and	#$0F
    149  a0ce		       85 49		      sta	channel
    150  a0d0
    151  a0d0							; Determine Command
    152  a0d0		       a5 fb		      lda	statusbyte	; Status Byte
    153  a0d2		       29 f0		      and	#$F0	; Get the upper nybble
    154  a0d4
    155  a0d4		       c9 80		      cmp	#$80	; Note Off
    156  a0d6		       f0 0f		      beq	donoteoff
    157  a0d8
    158  a0d8		       c9 90		      cmp	#$90	; Note On
    159  a0da		       f0 11		      beq	donoteon
    160  a0dc
    161  a0dc		       c9 b0		      cmp	#$B0	; Control Change
    162  a0de		       f0 13		      beq	docontrolchange
    163  a0e0
    164  a0e0		       c9 c0		      cmp	#$C0	; Program Change
    165  a0e2		       f0 15		      beq	doprogramchange
    166  a0e4
    167  a0e4							; All others (Aftertouch, etc.) ignored.
    168  a0e4		       4c 68 a0 	      jmp	loop
    169  a0e7
    170  a0e7				   donoteoff
    171  a0e7		       20 9f a1 	      jsr	noteoff
    172  a0ea		       4c 68 a0 	      jmp	loop
    173  a0ed
    174  a0ed				   donoteon
    175  a0ed		       20 ff a0 	      jsr	noteon
    176  a0f0		       4c 68 a0 	      jmp	loop
    177  a0f3
    178  a0f3				   docontrolchange
    179  a0f3		       20 b8 a1 	      jsr	controlchange
    180  a0f6		       4c 68 a0 	      jmp	loop
    181  a0f9
    182  a0f9				   doprogramchange
    183  a0f9		       20 20 a2 	      jsr	programchange
    184  a0fc		       4c 68 a0 	      jmp	loop
    185  a0ff
    186  a0ff
    187  a0ff							;*****************************************************************************
    188  a0ff							;*************************  MIDI Processing  *********************************
    189  a0ff							;*****************************************************************************
    190  a0ff
    191  a0ff							; ---- Note On ---------------------------------------------------
    192  a0ff							; 9c nn vv
    193  a0ff
    194  a0ff				   noteon
    195  a0ff							; Special Case: Treat Velocity=0 as Note Off.	Velocity ignored otherwise.
    196  a0ff		       a5 fd		      lda	mididata1
    197  a101		       d0 03		      bne	noteon_contd
    198  a103		       4c 9f a1 	      jmp	noteoff
    199  a106
    200  a106				   noteon_contd
    201  a106		       a4 49		      ldy	channel	; Y now contains Channel # (0-offset)
    202  a108		       a6 fc		      ldx	mididata0	; X now contains MIDI Note #
    203  a10a
    204  a10a							; Special Case: Channel 5 used for Poly mode
    205  a10a		       c0 04		      cpy	#$04
    206  a10c		       d0 03		      bne	savenote
    207  a10e		       20 89 a5 	      jsr	get_poly_voice
    208  a111
    209  a111				   savenote
    210  a111							; Save the note# so that later Note Offs only apply to this note.
    211  a111		       8a		      txa
    212  a112		       99 69 00 	      sta	lastnote,y
    213  a115
    214  a115							; Perform a table lookup of MIDI Note# to VIC Register
    215  a115							; Table to use depends on bank/voice/channel
    216  a115
    217  a115							; Check the bank
    218  a115		       a5 4a		      lda	bank
    219  a117
    220  a117		       c9 00		      cmp	#$00
    221  a119		       f0 09		      beq	lookups_ntsc
    222  a11b
    223  a11b		       c9 01		      cmp	#$01
    224  a11d		       f0 2e		      beq	lookups_pal
    225  a11f
    226  a11f		       c9 02		      cmp	#$02
    227  a121		       f0 53		      beq	lookups_alt
    228  a123
    229  a123							; Ignore all other banks
    230  a123		       60		      rts
    231  a124
    232  a124
    233  a124							; ------ NTSC -------
    234  a124
    235  a124				   lookups_ntsc
    236  a124		       c0 00		      cpy	#$00
    237  a126		       f0 0d		      beq	vlook1_ntsc
    238  a128
    239  a128		       c0 01		      cpy	#$01
    240  a12a		       f0 0f		      beq	vlook2_ntsc
    241  a12c
    242  a12c		       c0 02		      cpy	#$02
    243  a12e		       f0 11		      beq	vlook3_ntsc
    244  a130
    245  a130		       c0 03		      cpy	#$03
    246  a132		       f0 13		      beq	vlook4_ntsc
    247  a134
    248  a134							; Ignore all other channels
    249  a134		       60		      rts
    250  a135
    251  a135				   vlook1_ntsc
    252  a135		       bd 6b a6 	      lda	voice1lookup_ntsc,x
    253  a138		       4c 93 a2 	      jmp	setvoice
    254  a13b
    255  a13b				   vlook2_ntsc
    256  a13b		       bd eb a6 	      lda	voice2lookup_ntsc,x
    257  a13e		       4c 93 a2 	      jmp	setvoice
    258  a141
    259  a141				   vlook3_ntsc
    260  a141		       bd 6b a7 	      lda	voice3lookup_ntsc,x
    261  a144		       4c 93 a2 	      jmp	setvoice
    262  a147
    263  a147				   vlook4_ntsc
    264  a147		       bd eb a7 	      lda	voice4lookup_ntsc,x
    265  a14a		       4c 93 a2 	      jmp	setvoice
    266  a14d
    267  a14d							; ------ PAL -------
    268  a14d
    269  a14d				   lookups_pal
    270  a14d		       c0 00		      cpy	#$00
    271  a14f		       f0 0d		      beq	vlook1_pal
    272  a151
    273  a151		       c0 01		      cpy	#$01
    274  a153		       f0 0f		      beq	vlook2_pal
    275  a155
    276  a155		       c0 02		      cpy	#$02
    277  a157		       f0 11		      beq	vlook3_pal
    278  a159
    279  a159		       c0 03		      cpy	#$03
    280  a15b		       f0 13		      beq	vlook4_pal
    281  a15d
    282  a15d							; Ignore all other channels
    283  a15d		       60		      rts
    284  a15e
    285  a15e				   vlook1_pal
    286  a15e		       bd 6b a8 	      lda	voice1lookup_pal,x
    287  a161		       4c 93 a2 	      jmp	setvoice
    288  a164
    289  a164				   vlook2_pal
    290  a164		       bd eb a8 	      lda	voice2lookup_pal,x
    291  a167		       4c 93 a2 	      jmp	setvoice
    292  a16a
    293  a16a				   vlook3_pal
    294  a16a		       bd 6b a9 	      lda	voice3lookup_pal,x
    295  a16d		       4c 93 a2 	      jmp	setvoice
    296  a170
    297  a170				   vlook4_pal
    298  a170		       bd eb a9 	      lda	voice4lookup_pal,x
    299  a173		       4c 93 a2 	      jmp	setvoice
    300  a176
    301  a176							; ------ Alternate -------
    302  a176
    303  a176				   lookups_alt
    304  a176		       c0 00		      cpy	#$00
    305  a178		       f0 0d		      beq	vlook1_alt
    306  a17a
    307  a17a		       c0 01		      cpy	#$01
    308  a17c		       f0 0f		      beq	vlook2_alt
    309  a17e
    310  a17e		       c0 02		      cpy	#$02
    311  a180		       f0 11		      beq	vlook3_alt
    312  a182
    313  a182		       c0 03		      cpy	#$03
    314  a184		       f0 13		      beq	vlook4_alt
    315  a186
    316  a186							; Ignore all other channels
    317  a186		       60		      rts
    318  a187
    319  a187				   vlook1_alt
    320  a187		       bd 6b aa 	      lda	voice1lookup_alt,x
    321  a18a		       4c 93 a2 	      jmp	setvoice
    322  a18d
    323  a18d				   vlook2_alt
    324  a18d		       bd eb aa 	      lda	voice2lookup_alt,x
    325  a190		       4c 93 a2 	      jmp	setvoice
    326  a193
    327  a193				   vlook3_alt
    328  a193		       bd 6b ab 	      lda	voice3lookup_alt,x
    329  a196		       4c 93 a2 	      jmp	setvoice
    330  a199
    331  a199				   vlook4_alt
    332  a199		       bd eb ab 	      lda	voice4lookup_alt,x
    333  a19c		       4c 93 a2 	      jmp	setvoice
    334  a19f
    335  a19f							; ---- Note Off --------------------------------------------------------------
    336  a19f							; 8c nn vv
    337  a19f
    338  a19f				   noteoff
    339  a19f		       a4 49		      ldy	channel	; Y now contains channel #
    340  a1a1
    341  a1a1							; Special Case: Channel 5 used for Poly mode
    342  a1a1		       c0 04		      cpy	#$04
    343  a1a3		       d0 06		      bne	noteoff_check
    344  a1a5
    345  a1a5		       20 9e a5 	      jsr	get_poly_voice_off
    346  a1a8		       4c b2 a1 	      jmp	noteoff_off
    347  a1ab
    348  a1ab				   noteoff_check
    349  a1ab							;For Channels 1-4
    350  a1ab							;Check if it matches the last.  If not, ignore.
    351  a1ab		       b9 69 00 	      lda	lastnote,y
    352  a1ae		       c5 fc		      cmp	mididata0
    353  a1b0		       d0 05		      bne	noteoff_x
    354  a1b2
    355  a1b2				   noteoff_off
    356  a1b2		       a9 00		      lda	#$00	; Off
    357  a1b4		       4c 93 a2 	      jmp	setvoice
    358  a1b7
    359  a1b7				   noteoff_x
    360  a1b7		       60		      rts
    361  a1b8
    362  a1b8							; ---- Control Change --------------------------------------------------------
    363  a1b8							; Bc CC vv
    364  a1b8
    365  a1b8				   controlchange
    366  a1b8		       a4 49		      ldy	channel	; Y now contains channel #
    367  a1ba
    368  a1ba		       a5 fc		      lda	mididata0	; Controller number
    369  a1bc
    370  a1bc		       c9 00		      cmp	#00	; Bank select - decimal
    371  a1be		       f0 15		      beq	bankselect
    372  a1c0
    373  a1c0		       c9 01		      cmp	#01	; Modulation Wheel (coarse) - decimal
    374  a1c2		       f0 25		      beq	modwheel
    375  a1c4
    376  a1c4		       c9 07		      cmp	#07	; Volume (coarse) - decimal
    377  a1c6		       f0 28		      beq	volume
    378  a1c8
    379  a1c8		       c9 4a		      cmp	#74	; Brightness - decimal
    380  a1ca		       f0 3b		      beq	screencolors
    381  a1cc
    382  a1cc		       c9 78		      cmp	#120	; All Sound Off - decimal
    383  a1ce		       f0 4b		      beq	soundoff
    384  a1d0
    385  a1d0		       c9 7b		      cmp	#123	; All Notes Off - decimal
    386  a1d2		       f0 47		      beq	soundoff
    387  a1d4
    388  a1d4							; Ignore all the rest
    389  a1d4		       60		      rts
    390  a1d5
    391  a1d5							; ---- Bank Select -----------------------------------------------------------
    392  a1d5							; Bc 00 vv
    393  a1d5
    394  a1d5				   bankselect
    395  a1d5		       a5 fd		      lda	mididata1
    396  a1d7		       29 03		      and	#$03	; A contains bank, 0-3
    397  a1d9		       85 4a		      sta	bank
    398  a1db				   showbank
      0  a1db					      HEXPOKE	(voice_display+132),bank
      1  a1db		       a9 fb		      lda	#<(voice_display+132)
      2  a1dd		       85 22		      sta	$22
      3  a1df		       a9 1e		      lda	#>(voice_display+132)
      4  a1e1		       85 23		      sta	$23
      5  a1e3
      6  a1e3		       a5 4a		      lda	bank
      7  a1e5		       20 09 a5 	      jsr	hexstr
    400  a1e8		       60		      rts
    401  a1e9
    402  a1e9							; ---- MOD Wheel Controller --------------------------------------------------
    403  a1e9							; Bc 01 vv
    404  a1e9
    405  a1e9							; Poke the data directly to the register, after OR'ing with $80
    406  a1e9				   modwheel
    407  a1e9		       a5 fd		      lda	mididata1
    408  a1eb		       09 80		      ora	#$80
    409  a1ed		       4c 93 a2 	      jmp	setvoice
    410  a1f0
    411  a1f0							; ---- Volume Controller -----------------------------------------------------
    412  a1f0							; Bc 07 vv
    413  a1f0
    414  a1f0				   volume
    415  a1f0		       a5 fd		      lda	mididata1
    416  a1f2		       4a		      lsr
    417  a1f3		       4a		      lsr
    418  a1f4		       4a		      lsr
    419  a1f5
    420  a1f5				   setvolume
    421  a1f5		       8d 0e 90 	      sta	sound_volume
      0  a1f8					      HEXPOKE	(voice_display+110),sound_volume
      1  a1f8		       a9 e5		      lda	#<(voice_display+110)
      2  a1fa		       85 22		      sta	$22
      3  a1fc		       a9 1e		      lda	#>(voice_display+110)
      4  a1fe		       85 23		      sta	$23
      5  a200
      6  a200		       ad 0e 90 	      lda	sound_volume
      7  a203		       20 09 a5 	      jsr	hexstr
    423  a206		       60		      rts
    424  a207
    425  a207							; ---- Brightness Controller (used for screen color)--------------------------
    426  a207							; Bc 4a vv
    427  a207
    428  a207				   screencolors
    429  a207		       18		      clc
    430  a208		       a5 fd		      lda	mididata1	; 7-bit
    431  a20a
    432  a20a		       29 07		      and	#%00000111	; Get border
    433  a20c		       85 6c		      sta	temp1
    434  a20e
    435  a20e		       a5 fd		      lda	mididata1
    436  a210		       29 78		      and	#%01111000	; Get background
    437  a212		       0a		      asl		; Shift 1 bit left
    438  a213
    439  a213		       05 6c		      ora	temp1	; Put border back in
    440  a215		       09 08		      ora	#%00001000	; No Reverse Mode
    441  a217
    442  a217		       8d 0f 90 	      sta	screen_colors
    443  a21a		       60		      rts
    444  a21b
    445  a21b							; ---- Sound Off / All Notes Off Controller-----------------------------------
    446  a21b							; Bc 78 xx
    447  a21b							; Bc 7B xx
    448  a21b
    449  a21b				   soundoff
    450  a21b		       a9 00		      lda	#$00	; Off
    451  a21d		       4c 93 a2 	      jmp	setvoice
    452  a220
    453  a220
    454  a220							; ---- Program Change --------------------------------------------------------
    455  a220							; Cc pn  <NOTE 2 bytes!>
    456  a220
    457  a220				   programchange
    458  a220							; Blank the unused MIDI byte
    459  a220		       a9 2d		      lda	#45	; -
    460  a222		       8d 53 1e 	      sta	midi_display+6
    461  a225		       8d 54 1e 	      sta	midi_display+7
    462  a228
    463  a228							; Get low nybble and replace, since there are only 16 viznut waveforms
    464  a228		       a5 fc		      lda	mididata0
    465  a22a		       29 0f		      and	#$0f
    466  a22c		       85 fc		      sta	mididata0	; Note that this is the waveform NUMBER, not the VALUE!
    467  a22e
    468  a22e		       a4 49		      ldy	channel	; Y now contains channel #
    469  a230		       99 00 11 	      sta	waveform1,y	; Store waveform used
    470  a233
    471  a233		       c0 00		      cpy	#00
    472  a235		       f0 0d		      beq	pc_0
    473  a237
    474  a237		       c0 01		      cpy	#01
    475  a239		       f0 18		      beq	pc_1
    476  a23b
    477  a23b		       c0 02		      cpy	#02
    478  a23d		       f0 23		      beq	pc_2
    479  a23f
    480  a23f		       c0 03		      cpy	#03	; Not sure if viznut's waveforms applies to the noise voice,
    481  a241		       f0 2e		      beq	pc_3	; but keep it in away.
    482  a243
    483  a243							; Ignore all other channels
    484  a243		       60		      rts
    485  a244
    486  a244							; Update the screen with Program# (viznut waveform code)
    487  a244							; Note that these are not actually used until setvoice is called below [1]
    488  a244
    489  a244				   pc_0
      0  a244					      HEXPOKE	(voice_display+ 5),waveform1
      1  a244		       a9 7c		      lda	#<(voice_display+ 5)
      2  a246		       85 22		      sta	$22
      3  a248		       a9 1e		      lda	#>(voice_display+ 5)
      4  a24a		       85 23		      sta	$23
      5  a24c
      6  a24c		       ad 00 11 	      lda	waveform1
      7  a24f		       20 09 a5 	      jsr	hexstr
    491  a252		       60		      rts
    492  a253
    493  a253				   pc_1
      0  a253					      HEXPOKE	(voice_display+27),waveform2
      1  a253		       a9 92		      lda	#<(voice_display+27)
      2  a255		       85 22		      sta	$22
      3  a257		       a9 1e		      lda	#>(voice_display+27)
      4  a259		       85 23		      sta	$23
      5  a25b
      6  a25b		       ad 01 11 	      lda	waveform2
      7  a25e		       20 09 a5 	      jsr	hexstr
    495  a261		       60		      rts
    496  a262
    497  a262				   pc_2
      0  a262					      HEXPOKE	(voice_display+49),waveform3
      1  a262		       a9 a8		      lda	#<(voice_display+49)
      2  a264		       85 22		      sta	$22
      3  a266		       a9 1e		      lda	#>(voice_display+49)
      4  a268		       85 23		      sta	$23
      5  a26a
      6  a26a		       ad 02 11 	      lda	waveform3
      7  a26d		       20 09 a5 	      jsr	hexstr
    499  a270		       60		      rts
    500  a271
    501  a271				   pc_3
      0  a271					      HEXPOKE	(voice_display+71),waveform4
      1  a271		       a9 be		      lda	#<(voice_display+71)
      2  a273		       85 22		      sta	$22
      3  a275		       a9 1e		      lda	#>(voice_display+71)
      4  a277		       85 23		      sta	$23
      5  a279
      6  a279		       ad 03 11 	      lda	waveform4
      7  a27c		       20 09 a5 	      jsr	hexstr
    503  a27f		       60		      rts
    504  a280
    505  a280
    506  a280							;---------------------------------------------------------
    507  a280							; Set a voice using viznut's setwave function.
    508  a280							; If a sound is already playing, fine.  But if not, need a "short" delay.  TODO ***
    509  a280
    510  a280				   viznut
    511  a280		       a4 49		      ldy	channel	; Channel # (0-3)
    512  a282		       b9 8c a4 	      lda	voice_to_register,y
    513  a285		       a8		      tay		; Y now contains low byte of register 90xx
    514  a286
    515  a286		       bd 00 11 	      lda	waveform1,x	; Retrieve the last desired waveform#
    516  a289		       aa		      tax
    517  a28a		       bd 5b a6 	      lda	viznutwaveforms,x	; A now contains the desired shift register contents
    518  a28d
    519  a28d		       a6 5e		      ldx	currentvalue	; X now contains initial frequency of selected channel
    520  a28f
    521  a28f							; X,Y,A are set - Set the waveform.
    522  a28f		       20 00 10 	      jsr	setwave
    523  a292		       60		      rts
    524  a293
    525  a293
    526  a293							;***************************************************************************
    527  a293							;*******************  Set/Display Functions  *******************************
    528  a293							;***************************************************************************
    529  a293
    530  a293							; Dispatcher for setting the appropriate voice and updating the screen
    531  a293							; Channel# in Y (Channel 0 = Voice 1, etc)
    532  a293							; Value to set it to in A.
    533  a293
    534  a293				   setvoice
    535  a293		       85 5e		      sta	currentvalue
    536  a295
    537  a295							; Before setting the voice, check if a viznut waveform was selected previously [1]
    538  a295							; If so, handle that separately.
    539  a295							;  lda waveform1,y
    540  a295							;  bne viznut
    541  a295
    542  a295							; Nope, carry on.
    543  a295		       a5 5e		      lda	currentvalue
    544  a297
    545  a297		       c0 00		      cpy	#$00
    546  a299		       f0 0d		      beq	v1
    547  a29b
    548  a29b		       c0 01		      cpy	#$01
    549  a29d		       f0 1b		      beq	v2
    550  a29f
    551  a29f		       c0 02		      cpy	#$02
    552  a2a1		       f0 29		      beq	v3
    553  a2a3
    554  a2a3		       c0 03		      cpy	#$03
    555  a2a5		       f0 37		      beq	v4
    556  a2a7
    557  a2a7							; Ignore all other channels
    558  a2a7		       60		      rts
    559  a2a8
    560  a2a8							; ---- Voice 1 -------
    561  a2a8				   v1
    562  a2a8		       8d 0a 90 	      sta	sound_voice1
      0  a2ab					      HEXPOKE	(voice_display+00),sound_voice1
      1  a2ab		       a9 77		      lda	#<(voice_display+00)
      2  a2ad		       85 22		      sta	$22
      3  a2af		       a9 1e		      lda	#>(voice_display+00)
      4  a2b1		       85 23		      sta	$23
      5  a2b3
      6  a2b3		       ad 0a 90 	      lda	sound_voice1
      7  a2b6		       20 09 a5 	      jsr	hexstr
    564  a2b9		       60		      rts
    565  a2ba
    566  a2ba							; ---- Voice 2 -------
    567  a2ba				   v2
    568  a2ba		       8d 0b 90 	      sta	sound_voice2
      0  a2bd					      HEXPOKE	(voice_display+22),sound_voice2
      1  a2bd		       a9 8d		      lda	#<(voice_display+22)
      2  a2bf		       85 22		      sta	$22
      3  a2c1		       a9 1e		      lda	#>(voice_display+22)
      4  a2c3		       85 23		      sta	$23
      5  a2c5
      6  a2c5		       ad 0b 90 	      lda	sound_voice2
      7  a2c8		       20 09 a5 	      jsr	hexstr
    570  a2cb		       60		      rts
    571  a2cc
    572  a2cc							; ---- Voice 3 -------
    573  a2cc				   v3
    574  a2cc		       8d 0c 90 	      sta	sound_voice3
      0  a2cf					      HEXPOKE	(voice_display+44),sound_voice3
      1  a2cf		       a9 a3		      lda	#<(voice_display+44)
      2  a2d1		       85 22		      sta	$22
      3  a2d3		       a9 1e		      lda	#>(voice_display+44)
      4  a2d5		       85 23		      sta	$23
      5  a2d7
      6  a2d7		       ad 0c 90 	      lda	sound_voice3
      7  a2da		       20 09 a5 	      jsr	hexstr
    576  a2dd		       60		      rts
    577  a2de
    578  a2de							; ---- Voice 4 -------
    579  a2de				   v4
    580  a2de		       8d 0d 90 	      sta	sound_noise
      0  a2e1					      HEXPOKE	(voice_display+66),sound_noise
      1  a2e1		       a9 b9		      lda	#<(voice_display+66)
      2  a2e3		       85 22		      sta	$22
      3  a2e5		       a9 1e		      lda	#>(voice_display+66)
      4  a2e7		       85 23		      sta	$23
      5  a2e9
      6  a2e9		       ad 0d 90 	      lda	sound_noise
      7  a2ec		       20 09 a5 	      jsr	hexstr
    582  a2ef		       60		      rts
    583  a2f0
    584  a2f0							; ----------------------------------------------------------------------------
    585  a2f0
    586  a2f0				   setcolors
    587  a2f0		       a2 00		      ldx	#$00
    588  a2f2		       a9 00		      lda	#$00
    589  a2f4				   setcolorsloop
    590  a2f4		       9d 00 96 	      sta	$9600,x
    591  a2f7		       9d 00 97 	      sta	$9700,x
    592  a2fa		       e8		      inx
    593  a2fb		       e0 00		      cpx	#$00
    594  a2fd		       d0 f5		      bne	setcolorsloop
    595  a2ff		       60		      rts
    596  a300
    597  a300							; ----------------------------------------------------------------------------
    598  a300							; Draw Main Screen
    599  a300
    600  a300				   mainscreen
    601  a300		       20 5f e5 	      jsr	CLRSCREEN
    602  a303		       a9 06		      lda	#$06	; Blue
    603  a305		       8d 86 02 	      sta	$0286	; Cursor Color
      0  a308					      PRINTSTRING	maintext
      1  a308		       a0 a3		      ldy	#>maintext
      2  a30a		       a9 31		      lda	#<maintext
      3  a30c		       20 1e cb 	      jsr	STROUT
    605  a30f
    606  a30f		       a9 6c		      lda	#$6C
    607  a311		       8d f9 1f 	      sta	spin_display
    608  a314		       60		      rts
    609  a315
    610  a315
    611  a315							; ----------------------------------------------------------------------------
    612  a315							; Draw Credits Screen
    613  a315
    614  a315				   creditscreen
    615  a315		       20 5f e5 	      jsr	CLRSCREEN
    616  a318		       a9 06		      lda	#$06	; Blue
    617  a31a		       8d 86 02 	      sta	$0286	; Cursor Color
      0  a31d					      PRINTSTRING	credits
      1  a31d		       a0 a3		      ldy	#>credits
      2  a31f		       a9 cc		      lda	#<credits
      3  a321		       20 1e cb 	      jsr	STROUT
    619  a324		       60		      rts
    620  a325
    621  a325
    622  a325							; ----------------------------------------------------------------------------
    623  a325							; setwave needs to start on a page and is self-modifying,
    624  a325							; so it is copied to RAM here
    625  a325
    626  a325				   setwavecopy
    627  a325		       a2 00		      ldx	#$00
    628  a327				   copyloop
    629  a327		       bd 2e a6 	      lda	setwaveorg,x
    630  a32a		       9d 00 10 	      sta	setwave,x
    631  a32d		       e8		      inx
    632  a32e		       d0 f7		      bne	copyloop
    633  a330		       60		      rts
    634  a331
    635  a331
    636  a331							; ----------------------------------------------------------------------------
    637  a331							; Strings
    638  a331
    639  a331				   maintext
    640  a331		       0e 08		      byte.b	CG_LCS, CG_DCS
    641  a333		       2a 76 69 63*	      byte.b	"*vic20 midi iNTERFACE*", CRLF
    642  a34a		       0d		      byte.b	CRLF
    643  a34b		       6d 69 64 69*	      byte.b	"midi dATA: --:--:--", CRLF
    644  a35f		       0d		      byte.b	CRLF
    645  a360		       76 4f 49 43*	      byte.b	"vOICE 1: -- / --", CRLF
    646  a371		       76 4f 49 43*	      byte.b	"vOICE 2: -- / --", CRLF
    647  a382		       76 4f 49 43*	      byte.b	"vOICE 3: -- / --", CRLF
    648  a393		       76 4f 49 43*	      byte.b	"vOICE 4: -- / --", CRLF
    649  a3a4		       0d		      byte.b	CRLF
    650  a3a5		       76 4f 4c 55*	      byte.b	"vOLUME : --", CRLF
    651  a3b1		       62 41 4e 4b*	      byte.b	"bANK	 : --", CRLF
    652  a3bd		       0d		      byte.b	CRLF
    653  a3be		       73 59 53 54*	      byte.b	"sYSTEM : ???", CRLF
    654  a3cb		       00		      byte.b	0
    655  a3cc
    656  a3cc
    657  a3cc				   credits
    658  a3cc		       0e 08		      byte.b	CG_LCS, CG_DCS
    659  a3ce		       20 2a 76 69*	      byte.b	" *vic20 midi cREDITS*", CRLF
    660  a3e4		       0d		      byte.b	CRLF
    661  a3e5		       68 41 52 44*	      byte.b	"hARDWARE:", CRLF
    662  a3ef		       20 20 6a 49*	      byte.b	"  jIM bRAIN", CRLF
    663  a3fb		       20 20 66 52*	      byte.b	"  fRANCOIS lEVEILLE", CRLF
    664  a40f		       20 20 6c 64*	      byte.b	"  ld bALL", CRLF
    665  a419		       0d		      byte.b	CRLF
    666  a41a		       73 4f 46 54*	      byte.b	"sOFTWARE:", CRLF
    667  a424		       20 6c 45 49*	      byte.b	" lEIF bLOOMQUIST", CRLF
    668  a435		       20 64 41 56*	      byte.b	" dAVID vIENS", CRLF
    669  a442		       20 6d 49 43*	      byte.b	" mICHAEL kIRCHER", CRLF
    670  a453		       20 76 49 5a*	      byte.b	" vIZNUT", CRLF
    671  a45b		       0d		      byte.b	CRLF
    672  a45c		       74 48 41 4e*	      byte.b	"tHANKS TO EVERYONE", CRLF
    673  a46f		       4f 4e 20 54*	      byte.b	"ON THE vic20 dENIAL", CRLF
    674  a483		       46 4f 52 55*	      byte.b	"FORUMS!", CRLF
    675  a48b		       00		      byte.b	0
    676  a48c
    677  a48c							; ----------------------------------------------------------------------------
    678  a48c							; Lookup table between voice #(0-3) and low byte of register# ($0A-$0D)
    679  a48c
    680  a48c				   voice_to_register
    681  a48c		       0a 0b 0c 0d	      byte.b	$0A,$0B,$0C,$0D
    682  a490
    683  a490
    684  a490							; ----------------------------------------------------------------------------
    685  a490							; Code includes
    686  a490
------- FILE hardware.asm LEVEL 2 PASS 2
      0  a490					      include	"hardware.asm"
      1  a490							;***************************************************************************
      2  a490							;*******************	 Hardware Functions   *******************************
      3  a490							;***************************************************************************
      4  a490
      5  a490							; ----------------------------------------------------------------------------
      6  a490							; Confirm the presence of the ST16C450 UART
      7  a490				   checkuart
      8  a490		       a9 55		      lda	#$55
      9  a492		       8d 07 9c 	      sta	UART_SCRATCHPAD
     10  a495
     11  a495		       ad 07 9c 	      lda	UART_SCRATCHPAD
     12  a498		       c9 55		      cmp	#$55
     13  a49a		       f0 15		      beq	checkuart_ok
     14  a49c
     15  a49c							; Not found!
      0  a49c					      PLOT	0,20
      1  a49c		       a0 00		      ldy	#0
      2  a49e		       a2 14		      ldx	#20
      3  a4a0		       18		      clc
      4  a4a1		       20 0a e5 	      jsr	$E50A
      0  a4a4					      PRINTSTRING	nouart
      1  a4a4		       a0 a4		      ldy	#>nouart
      2  a4a6		       a9 f4		      lda	#<nouart
      3  a4a8		       20 1e cb 	      jsr	STROUT
     18  a4ab
     19  a4ab				   uloop
     20  a4ab		       ee 0f 90 	      inc	screen_colors
     21  a4ae		       4c ab a4 	      jmp	uloop
     22  a4b1
     23  a4b1				   checkuart_ok
     24  a4b1		       60		      rts
     25  a4b2
     26  a4b2							; ----------------------------------------------------------------------------
     27  a4b2							; Set up the UART
     28  a4b2
     29  a4b2				   resetuart
     30  a4b2							; Expose the divisor latch.
     31  a4b2		       a9 80		      lda	#%10000000
     32  a4b4		       8d 03 9c 	      sta	UART_LCR
     33  a4b7
     34  a4b7							; Set the MIDI baud rate.
     35  a4b7							; The ST16C450 datasheet says that it divides the input clock rate by
     36  a4b7							; 16, so with a 2Mhz crystal on board, that gives
     37  a4b7							; 2000000 * (1/16) * (1/x) = 31250.  Solving gives x=4 for the low
     38  a4b7							; byte of the divisor, and 0 for the high byte.
     39  a4b7
     40  a4b7		       a2 00		      ldx	#$00
     41  a4b9		       a0 04		      ldy	#$04
     42  a4bb		       8e 01 9c 	      stx	UART_DIVISOR_MSB
     43  a4be		       8c 00 9c 	      sty	UART_DIVISOR_LSB
     44  a4c1
     45  a4c1							; Set to MIDI: Word length 8, Stop bits 1, no parity (also hides divisor latch)
     46  a4c1		       a9 03		      lda	#%00000011
     47  a4c3		       8d 03 9c 	      sta	UART_LCR
     48  a4c6
     49  a4c6							; Enable the interrupt when data is received
     50  a4c6		       a9 01		      lda	#%00000001
     51  a4c8		       8d 01 9c 	      sta	UART_IER
     52  a4cb		       60		      rts
     53  a4cc
     54  a4cc							; ----------------------------------------------------------------------------
     55  a4cc							; Set up the IRQ for reading bytes from the UART
     56  a4cc
     57  a4cc				   setupirq
     58  a4cc		       78		      sei
     59  a4cd
     60  a4cd							; Point to my interrupt vector
     61  a4cd		       a9 e1		      lda	#<theirq
     62  a4cf		       8d 14 03 	      sta	$0314
     63  a4d2		       a9 a4		      lda	#>theirq
     64  a4d4		       8d 15 03 	      sta	$0315
     65  a4d7
     66  a4d7							; Disable timer interrupts
     67  a4d7
     68  a4d7		       a9 60		      lda	#%01100000
     69  a4d9		       8d 2e 91 	      sta	$912e	; disable and acknowledge interrupts
     70  a4dc		       8d 2d 91 	      sta	$912d
     71  a4df							;sta $911e	; disable NMIs (Restore key)
     72  a4df
     73  a4df		       58		      cli
     74  a4e0		       60		      rts
     75  a4e1
     76  a4e1							; ----------------------------------------------------------------------------
     77  a4e1							; The IRQ.
     78  a4e1
     79  a4e1				   theirq
     80  a4e1							; Fetch the received byte
     81  a4e1		       ad 00 9c 	      lda	UART_RXTX	;get data
     82  a4e4		       a4 5c		      ldy	write_pointer
     83  a4e6		       99 00 12 	      sta	buffer,y
     84  a4e9		       e6 5c		      inc	write_pointer
     85  a4eb
     86  a4eb							; Clear the interrupt from the UART by reading the status register
     87  a4eb		       ad 02 9c 	      lda	UART_ISR
     88  a4ee
     89  a4ee		       4c 56 ff 	      jmp	$ff56	; Use this in place of rti because it restores the A,X,Y registers from the stack
     90  a4f1							;jmp $eabf	; return to normal IRQ	(scans keyboard and stuff)
     91  a4f1
     92  a4f1
     93  a4f1							; ----------------------------------------------------------------------------
     94  a4f1							; Handle the RESTORE key
     95  a4f1
     96  a4f1				   RESTORE
     97  a4f1		       4c c7 fe 	      jmp	$fec7	; Continue as if no cartridge installed
     98  a4f4
     99  a4f4
    100  a4f4							; ----------------------------------------------------------------------------
    101  a4f4							; Strings
    102  a4f4
    103  a4f4				   nouart
    104  a4f4		       2a 2a 75 61*	      .byte.b	"**uart NOT FOUND! ***"
    105  a509
    106  a509							; EOF!
------- FILE vicmidi.asm
------- FILE utils.asm LEVEL 2 PASS 2
      0  a509					      include	"utils.asm"
      1  a509							; VIC Version by Schema/AIC (Leif Bloomquist)
      2  a509							; Original by Six/Style (Oliver VieBrooks)
      3  a509
      4  a509							; Fast POKE of hex value to screen
      5  a509							; also see HEXPOKE macro
      6  a509							; print hex  char $ of number in a at location referenced by screen_temp
      7  a509
      8  a509				   hexstr
      9  a509		       a0 00		      ldy	#$00
     10  a50b		       48		      pha
     11  a50c		       29 f0		      and	#$f0
     12  a50e		       18		      clc
     13  a50f		       4a		      lsr
     14  a510		       4a		      lsr
     15  a511		       4a		      lsr
     16  a512		       4a		      lsr
     17  a513		       aa		      tax
     18  a514		       bd 45 a5 	      lda	hexstring,x
     19  a517		       91 22		      sta	($22),y
     20  a519
     21  a519		       c8		      iny
     22  a51a		       68		      pla
     23  a51b		       29 0f		      and	#$0f
     24  a51d		       aa		      tax
     25  a51e		       bd 45 a5 	      lda	hexstring,x
     26  a521		       91 22		      sta	($22),y
     27  a523		       60		      rts
     28  a524
     29  a524
     30  a524							; print hex  char $ of number in a    SLOW!
     31  a524		       00	   hexx       dc.b	$00
     32  a525
     33  a525				   printhexstr
     34  a525		       8e 24 a5 	      stx	hexx
     35  a528		       48		      pha
     36  a529		       29 f0		      and	#$f0
     37  a52b		       18		      clc
     38  a52c		       4a		      lsr
     39  a52d		       4a		      lsr
     40  a52e		       4a		      lsr
     41  a52f		       4a		      lsr
     42  a530		       aa		      tax
     43  a531		       bd 45 a5 	      lda	hexstring,x
     44  a534		       20 d2 ff 	      jsr	$ffd2
     45  a537
     46  a537		       68		      pla
     47  a538		       29 0f		      and	#$0f
     48  a53a		       aa		      tax
     49  a53b		       bd 45 a5 	      lda	hexstring,x
     50  a53e		       20 d2 ff 	      jsr	$ffd2
     51  a541		       ae 24 a5 	      ldx	hexx
     52  a544		       60		      rts
     53  a545
     54  a545				   hexstring
     55  a545		       30 31 32 33*	      .byte.b	"0123456789ABCDEF"
     56  a555
     57  a555
     58  a555							; ==============================================================
     59  a555							; Most defaults are NTSC.  This code overrides for PAL.
     60  a555							; ==============================================================
     61  a555
     62  a555				   setup_pal
      0  a555					      PLOT	9,13
      1  a555		       a0 09		      ldy	#9
      2  a557		       a2 0d		      ldx	#13
      3  a559		       18		      clc
      4  a55a		       20 0a e5 	      jsr	$E50A
     64  a55d
     65  a55d		       ad e4 ed 	      lda	$EDE4
     66  a560		       c9 0c		      cmp	#$0C
     67  a562		       f0 0e		      beq	DOPAL
     68  a564
     69  a564							; NTSC System detected
      0  a564					      PRINTSTRING	ntscstring
      1  a564		       a0 a5		      ldy	#>ntscstring
      2  a566		       a9 84		      lda	#<ntscstring
      3  a568		       20 1e cb 	      jsr	STROUT
     71  a56b		       a9 00		      lda	#$00
     72  a56d		       85 4a		      sta	bank
     73  a56f		       4c db a1 	      jmp	showbank	; There's an rts there
     74  a572
     75  a572							; PAL System detected, make changes
     76  a572				   DOPAL
      0  a572					      PRINTSTRING	palstring
      1  a572		       a0 a5		      ldy	#>palstring
      2  a574		       a9 80		      lda	#<palstring
      3  a576		       20 1e cb 	      jsr	STROUT
     78  a579		       a9 01		      lda	#$01
     79  a57b		       85 4a		      sta	bank
     80  a57d		       4c db a1 	      jmp	showbank	; There's an rts there
     81  a580
     82  a580				   palstring
     83  a580		       70 61 6c 00	      .byte.b	"pal",0
     84  a584
     85  a584				   ntscstring
     86  a584		       6e 74 73 63*	      .byte.b	"ntsc",0
     87  a589
     88  a589							; EOF!
------- FILE vicmidi.asm
------- FILE polymode.asm LEVEL 2 PASS 2
      0  a589					      include	"polymode.asm"
      1  a589
      2  a589							;***************************************************************************
      3  a589							;***************  Determine next Channel in Poly Mode (set Y) **************
      4  a589							;***************************************************************************
      5  a589				   get_poly_voice
      6  a589		       a0 00		      ldy	#$00
      7  a58b
      8  a58b				   get_poly_voice_loop
      9  a58b		       b9 61 00 	      lda	poly_flags,y	; 0=not in use, 1=in use
     10  a58e		       f0 08		      beq	get_poly_voice_x
     11  a590		       c8		      iny
     12  a591		       c0 04		      cpy	#$04	; Note that we're only checking the first 3 voices - n/a to noise voice.
     13  a593		       d0 f6		      bne	get_poly_voice_loop
     14  a595
     15  a595							; No free voices, ignore
     16  a595		       a0 04		      ldy	#$04	; Invalid channel, will be ignored by Note On code
     17  a597		       60		      rts
     18  a598
     19  a598				   get_poly_voice_x
     20  a598		       a9 01		      lda	#$01
     21  a59a		       99 61 00 	      sta	poly_flags,y
     22  a59d		       60		      rts
     23  a59e
     24  a59e
     25  a59e							;***************************************************************************
     26  a59e							;********  Determine Channel to turn off in Poly Mode (set Y) **************
     27  a59e							;***************************************************************************
     28  a59e				   get_poly_voice_off
     29  a59e
     30  a59e		       a0 00		      ldy	#$00
     31  a5a0
     32  a5a0				   get_poly_voice_off_loop
     33  a5a0		       b9 61 00 	      lda	poly_flags,y	; Is the channel in use?
     34  a5a3		       f0 07		      beq	poly_next	; No, so skip it
     35  a5a5
     36  a5a5		       b9 69 00 	      lda	lastnote,y	; Get last note on this voice
     37  a5a8		       c5 fc		      cmp	mididata0	; Compare to note received
     38  a5aa		       f0 0b		      beq	get_poly_voice_off_x	; Matched!
     39  a5ac
     40  a5ac				   poly_next
     41  a5ac		       c8		      iny		; Next channel
     42  a5ad		       c0 04		      cpy	#$04	; Note that we're only checking the first 3 voices - n/a to noise voice.
     43  a5af		       d0 ef		      bne	get_poly_voice_off_loop
     44  a5b1
     45  a5b1							; No match to the note to turn off, ignore
     46  a5b1		       a0 04		      ldy	#$04	; Invalid channel, will be ignored by Note Off code
     47  a5b3		       ee 0f 90 	      inc	screen_colors	; DEBUG
     48  a5b6		       60		      rts
     49  a5b7
     50  a5b7				   get_poly_voice_off_x
     51  a5b7		       a9 00		      lda	#$00
     52  a5b9		       99 61 00 	      sta	poly_flags,y
     53  a5bc		       60		      rts
     54  a5bd
------- FILE vicmidi.asm
------- FILE keyboard.asm LEVEL 2 PASS 2
      0  a5bd					      include	"keyboard.asm"
      1  a5bd							;*******************************************************************************************
      2  a5bd							;********************************  keyboard stuff  *****************************************
      3  a5bd							;*******************************************************************************************
      4  a5bd
      5  a5bd							; --------------------------------------------------------------------------------------------------
      6  a5bd							;;;;;;;;;;;;;;; keyboard stuff
      7  a5bd							;previous keyboard column bits
      8  a5bd		       00 4e	   c0	      =	$4E	; 2,4,6,8,(...)
      9  a5bd		       00 4f	   c1	      =	$4F	; q,e,t,u,(...)
     10  a5bd		       00 50	   c2	      =	$50	; w,r,y,i,p,(...)
     11  a5bd		       00 51	   c3	      =	$51	; 1,3,5,7,(...)
     12  a5bd
     13  a5bd		       91 20	   kb_column  =	$9120
     14  a5bd		       91 21	   kb_row     =	$9121
     15  a5bd
     16  a5bd							; 9121   9120: (Write column value to this address)
     17  a5bd							;
     18  a5bd							;	  7f	  bf	  df	  ef	  f7	  fb	  fd	  fe
     19  a5bd							;
     20  a5bd							;  fe	  2	  q	  CBM	  Space   RunStop Control Lft_arr 1
     21  a5bd							;  fd	  4	  e	  s	  z	  Shift_L a	  w	  3
     22  a5bd							;  fb	  6	  t	  f	  c	  x	  d	  r	  5
     23  a5bd							;  f7	  8	  u	  h	  b	  v	  g	  y	  7
     24  a5bd							;  ef	  0	  o	  k	  m	  n	  j	  i	  9
     25  a5bd							;  df	  -	  @	  :	  .	  ,	  l	  p	  +
     26  a5bd							;  bf	  Home	  Up_arr  =	  Shift_R /	  ;	  *	  GBP
     27  a5bd							;  7f	  F7	  F5	  F3	  F1	  Down	  Right   Return  Del
     28  a5bd
     29  a5bd				   GetKey
     30  a5bd		       78		      sei
     31  a5be							; this should not be done, we want to compare the OLD recorded status with new one
     32  a5be							;lda #$0
     33  a5be							;sta kb_column
     34  a5be							;lda kb_row
     35  a5be							;cmp #$FF
     36  a5be							;beq NoKey	 ; no key at all pressed
     37  a5be
     38  a5be				   Check7F
     39  a5be							;now check for each column
     40  a5be		       a9 7f		      lda	#$7F
     41  a5c0		       8d 20 91 	      sta	kb_column
     42  a5c3		       ad 21 91 	      lda	kb_row
     43  a5c6		       49 ff		      eor	#$FF	; inversed accumulator contains all bits in this column
     44  a5c8		       c5 4e		      cmp	c0
     45  a5ca		       f0 08		      beq	CheckBF	; these arent the droids you are looking for move along
     46  a5cc		       85 4e		      sta	c0
     47  a5ce		       8d 00 1e 	      sta	$1E00
     48  a5d1		       4c 13 a6 	      jmp	KeyDone
     49  a5d4				   CheckBF
     50  a5d4							;now check for each column
     51  a5d4		       a9 bf		      lda	#$BF
     52  a5d6		       8d 20 91 	      sta	kb_column
     53  a5d9		       ad 21 91 	      lda	kb_row
     54  a5dc		       49 ff		      eor	#$FF	; inversed accumulator contains all bits in this column
     55  a5de		       c5 4f		      cmp	c1
     56  a5e0		       f0 08		      beq	CheckFD	; these arent the droids you are looking for move along
     57  a5e2		       85 4f		      sta	c1
     58  a5e4		       8d 01 1e 	      sta	$1E01
     59  a5e7		       4c 13 a6 	      jmp	KeyDone
     60  a5ea				   CheckFD
     61  a5ea							;now check for each column
     62  a5ea		       a9 fd		      lda	#$FD
     63  a5ec		       8d 20 91 	      sta	kb_column
     64  a5ef		       ad 21 91 	      lda	kb_row
     65  a5f2		       49 ff		      eor	#$FF	; inversed accumulator contains all bits in this column
     66  a5f4		       c5 50		      cmp	c2
     67  a5f6		       f0 08		      beq	CheckFE	; these arent the droids you are looking for move along
     68  a5f8		       85 50		      sta	c2
     69  a5fa		       8d 02 1e 	      sta	$1E02
     70  a5fd		       4c 13 a6 	      jmp	KeyDone
     71  a600				   CheckFE
     72  a600							;now check for each column
     73  a600		       a9 fe		      lda	#$FE
     74  a602		       8d 20 91 	      sta	kb_column
     75  a605		       ad 21 91 	      lda	kb_row
     76  a608		       49 ff		      eor	#$FF	; inversed accumulator contains all bits in this column
     77  a60a		       c5 51		      cmp	c3
     78  a60c		       f0 05		      beq	KeyDone	; these arent the droids you are looking for move along
     79  a60e		       85 51		      sta	c3
     80  a610		       8d 03 1e 	      sta	$1E03
     81  a613				   KeyDone
     82  a613		       58		      cli
     83  a614		       60		      rts
     84  a615
     85  a615							; ---------------------------------------------------------------------------
     86  a615
     87  a615				   setchars
     88  a615		       a2 00		      ldx	#$00
     89  a617		       a9 51		      lda	#$51
     90  a619				   setcharsloop1
     91  a619		       9d 00 1e 	      sta	$1E00,x
     92  a61c		       e8		      inx
     93  a61d		       e0 00		      cpx	#$00
     94  a61f		       d0 f8		      bne	setcharsloop1
     95  a621		       a2 00		      ldx	#$00
     96  a623		       a9 66		      lda	#$66
     97  a625				   setcharsloop2
     98  a625		       9d 00 1f 	      sta	$1F00,x
     99  a628		       e8		      inx
    100  a629		       e0 00		      cpx	#$00
    101  a62b		       d0 f8		      bne	setcharsloop2
    102  a62d		       60		      rts
------- FILE vicmidi.asm
    691  a62e				   setwaveorg
------- FILE setwave.asm LEVEL 2 PASS 2
      0  a62e					      include	"setwave.asm"
      1  a62e							;A short generic routine for setting any shift register value for any pulse
      2  a62e							;channel in about 150 cpu clocks. Use it freely.
      3  a62e
      4  a62e							; USAGE: y = channel ($0a..$0c)
      5  a62e							;	  x = initial frequency
      6  a62e							;	  a = shift register contents
      7  a62e							;
      8  a62e							; WARNING for purists: self-modifying code, illegal opcodes.
      9  a62e							;
     10  a62e							; code align assertion: make sure that the loop is within a page.
     11  a62e							; oscillator assertion: make sure that the channel has been at $7e
     12  a62e							; for some time before calling this function.
     13  a62e							; put TMP and TMP2 in the zero page.
     14  a62e
     15  a62e		       8e 50 a6 	      stx	initfreq	; 4
     16  a631
     17  a631		       8c 3f a6 	      sty	ch0	; 4
     18  a634		       8c 4a a6 	      sty	ch1	; 4
     19  a637		       be 4e a6 	      ldx	ldfqmasks-$a,y	; 4
     20  a63a		       85 57		      sta	TMP	; 3
     21  a63c
     22  a63c		       09 7f		      ora	#$7f	; 2
     23  a63e
     24  a63e		       8f 0c 90 	      .byte.b	$8f,$0C,$90	; axs $900c  ; 4  [$900c] = a AND x	     *ILLEGAL OPCODE*
     25  a641
     26  a641		       a6 3f	   ch0	      =	*-2
     27  a641		       84 58		      sty	TMP2	; 3
     28  a643		       a0 07		      ldy	#7	; 2
     29  a645
     30  a645				   l0
     31  a645		       a9 7f		      lda	#$7f	; 2
     32  a647		       07 57		      .byte.b	$07,TMP	; aso TMP		 ; 5  asl tmp; a = [tmp] OR $7f  *ILLEGAL OPCODE*
     33  a649		       8f 0c 90 	      .byte.b	$8F,$0C,$90	; axs $900c	 ; 4  [$900c] = a AND x	  *ILLEGAL OPCODE*
     34  a649		       a6 4a	   ch1	      =	*-2
     35  a64c		       88		      dey		; 2
     36  a64d		       d0 f6		      bne	l0	; 3
     37  a64f
     38  a64f		       a9 80		      lda	#128	; 2
     39  a64f		       a6 50	   initfreq   =	*-1
     40  a651		       ea		      nop		; 2
     41  a652		       a4 58		      ldy	TMP2	; 3
     42  a654				   noset
     43  a654		       99 00 90 	      sta	$9000,y	; 5
     44  a657
     45  a657		       60		      rts		; 6	total clocks 11+4+3+2+16*7+16+6 eq 154
     46  a658
     47  a658				   ldfqmasks
     48  a658		       fe		      .byte.b	$fe	; $900a - 1 x 16 clocks/bit
     49  a659		       fd		      .byte.b	$fd	; $900b - 2 x	8 clocks/bit
     50  a65a		       fb		      .byte.b	$fb	; $900c - 4 x	4 clocks/bit
     51  a65b
     52  a65b
     53  a65b				   viznutwaveforms
     54  a65b		       00		      .byte.b	0	; MIDI Program #1	default  0000000011111111
     55  a65c		       02		      .byte.b	2	; MIDI Program #2	"10"	 0000001011111101
     56  a65d		       04		      .byte.b	4	; MIDI Program #3	"100"	 0000010011111011
     57  a65e		       06		      .byte.b	6	; MIDI Program #4	"110"	 0000011011111001
     58  a65f		       08		      .byte.b	8	; MIDI Program #5	"1000"	 0000100011110111
     59  a660		       0a		      .byte.b	10	; MIDI Program #6	"1010"	 0000101011110101
     60  a661		       0b		      .byte.b	11	; MIDI Program #7	"1011"	 0000110011110011
     61  a662		       0e		      .byte.b	14	; MIDI Program #8	"1110"	 0000111011110001
     62  a663		       12		      .byte.b	18	; MIDI Program #9	"10010"  0001001011101101
     63  a664		       14		      .byte.b	20	; MIDI Program #10	"10100"  0001010011101011
     64  a665		       16		      .byte.b	22	; MIDI Program #11	"10110"  0001011011101001
     65  a666		       18		      .byte.b	24	; MIDI Program #12	"11000"  0001100011100111
     66  a667		       1a		      .byte.b	26	; MIDI Program #13	"11010"  0001101011100101
     67  a668		       24		      .byte.b	36	; MIDI Program #14	"100100" 0010010011011011
     68  a669		       2a		      .byte.b	42	; MIDI Program #15	"101010" 0010101011010101
     69  a66a		       2c		      .byte.b	44	; MIDI Program #16	"101100" 0010110011010011
------- FILE vicmidi.asm
    693  a66b
------- FILE lookup-ntsc.asm LEVEL 2 PASS 2
      0  a66b					      include	"lookup-ntsc.asm"
      1  a66b							; --------------------------------------------------------------------------------------------------
      2  a66b							; Note Lookups NTSC - 128 bytes each, map MIDI Note# to a VIC register value
      3  a66b							; From http://sleepingelephant.com/ipw-web/bulletin/bb/viewtopic.php?t=3643
      4  a66b
      5  a66b				   voice1lookup_ntsc
      6  a66b		       00		      byte.b	0
      7  a66c		       00		      byte.b	0
      8  a66d		       00		      byte.b	0
      9  a66e		       00		      byte.b	0
     10  a66f		       00		      byte.b	0
     11  a670		       00		      byte.b	0
     12  a671		       00		      byte.b	0
     13  a672		       00		      byte.b	0
     14  a673		       00		      byte.b	0
     15  a674		       00		      byte.b	0
     16  a675		       00		      byte.b	0
     17  a676		       00		      byte.b	0
     18  a677		       00		      byte.b	0
     19  a678		       00		      byte.b	0
     20  a679		       00		      byte.b	0
     21  a67a		       00		      byte.b	0
     22  a67b		       00		      byte.b	0
     23  a67c		       00		      byte.b	0
     24  a67d		       00		      byte.b	0
     25  a67e		       00		      byte.b	0
     26  a67f		       00		      byte.b	0
     27  a680		       00		      byte.b	0
     28  a681		       00		      byte.b	0
     29  a682		       00		      byte.b	0
     30  a683		       85		      byte.b	133
     31  a684		       8c		      byte.b	140
     32  a685		       92		      byte.b	146
     33  a686		       98		      byte.b	152
     34  a687		       9e		      byte.b	158
     35  a688		       a3		      byte.b	163
     36  a689		       a9		      byte.b	169
     37  a68a		       ad		      byte.b	173
     38  a68b		       b2		      byte.b	178
     39  a68c		       b6		      byte.b	182
     40  a68d		       ba		      byte.b	186
     41  a68e		       be		      byte.b	190
     42  a68f		       c2		      byte.b	194
     43  a690		       c5		      byte.b	197
     44  a691		       c9		      byte.b	201
     45  a692		       cc		      byte.b	204
     46  a693		       cf		      byte.b	207
     47  a694		       d1		      byte.b	209
     48  a695		       d4		      byte.b	212
     49  a696		       d6		      byte.b	214
     50  a697		       d9		      byte.b	217
     51  a698		       db		      byte.b	219
     52  a699		       dd		      byte.b	221
     53  a69a		       df		      byte.b	223
     54  a69b		       e0		      byte.b	224
     55  a69c		       e2		      byte.b	226
     56  a69d		       e4		      byte.b	228
     57  a69e		       e5		      byte.b	229
     58  a69f		       e7		      byte.b	231
     59  a6a0		       e8		      byte.b	232
     60  a6a1		       e9		      byte.b	233
     61  a6a2		       eb		      byte.b	235
     62  a6a3		       ec		      byte.b	236
     63  a6a4		       ed		      byte.b	237
     64  a6a5		       ee		      byte.b	238
     65  a6a6		       ef		      byte.b	239
     66  a6a7		       f0		      byte.b	240
     67  a6a8		       00		      byte.b	0
     68  a6a9		       00		      byte.b	0
     69  a6aa		       00		      byte.b	0
     70  a6ab		       00		      byte.b	0
     71  a6ac		       00		      byte.b	0
     72  a6ad		       00		      byte.b	0
     73  a6ae		       00		      byte.b	0
     74  a6af		       00		      byte.b	0
     75  a6b0		       00		      byte.b	0
     76  a6b1		       00		      byte.b	0
     77  a6b2		       00		      byte.b	0
     78  a6b3		       00		      byte.b	0
     79  a6b4		       00		      byte.b	0
     80  a6b5		       00		      byte.b	0
     81  a6b6		       00		      byte.b	0
     82  a6b7		       00		      byte.b	0
     83  a6b8		       00		      byte.b	0
     84  a6b9		       00		      byte.b	0
     85  a6ba		       00		      byte.b	0
     86  a6bb		       00		      byte.b	0
     87  a6bc		       00		      byte.b	0
     88  a6bd		       00		      byte.b	0
     89  a6be		       00		      byte.b	0
     90  a6bf		       00		      byte.b	0
     91  a6c0		       00		      byte.b	0
     92  a6c1		       00		      byte.b	0
     93  a6c2		       00		      byte.b	0
     94  a6c3		       00		      byte.b	0
     95  a6c4		       00		      byte.b	0
     96  a6c5		       00		      byte.b	0
     97  a6c6		       00		      byte.b	0
     98  a6c7		       00		      byte.b	0
     99  a6c8		       00		      byte.b	0
    100  a6c9		       00		      byte.b	0
    101  a6ca		       00		      byte.b	0
    102  a6cb		       00		      byte.b	0
    103  a6cc		       00		      byte.b	0
    104  a6cd		       00		      byte.b	0
    105  a6ce		       00		      byte.b	0
    106  a6cf		       00		      byte.b	0
    107  a6d0		       00		      byte.b	0
    108  a6d1		       00		      byte.b	0
    109  a6d2		       00		      byte.b	0
    110  a6d3		       00		      byte.b	0
    111  a6d4		       00		      byte.b	0
    112  a6d5		       00		      byte.b	0
    113  a6d6		       00		      byte.b	0
    114  a6d7		       00		      byte.b	0
    115  a6d8		       00		      byte.b	0
    116  a6d9		       00		      byte.b	0
    117  a6da		       00		      byte.b	0
    118  a6db		       00		      byte.b	0
    119  a6dc		       00		      byte.b	0
    120  a6dd		       00		      byte.b	0
    121  a6de		       00		      byte.b	0
    122  a6df		       00		      byte.b	0
    123  a6e0		       00		      byte.b	0
    124  a6e1		       00		      byte.b	0
    125  a6e2		       00		      byte.b	0
    126  a6e3		       00		      byte.b	0
    127  a6e4		       00		      byte.b	0
    128  a6e5		       00		      byte.b	0
    129  a6e6		       00		      byte.b	0
    130  a6e7		       00		      byte.b	0
    131  a6e8		       00		      byte.b	0
    132  a6e9		       00		      byte.b	0
    133  a6ea		       00		      byte.b	0
    134  a6eb
    135  a6eb				   voice2lookup_ntsc
    136  a6eb		       00		      byte.b	0
    137  a6ec		       00		      byte.b	0
    138  a6ed		       00		      byte.b	0
    139  a6ee		       00		      byte.b	0
    140  a6ef		       00		      byte.b	0
    141  a6f0		       00		      byte.b	0
    142  a6f1		       00		      byte.b	0
    143  a6f2		       00		      byte.b	0
    144  a6f3		       00		      byte.b	0
    145  a6f4		       00		      byte.b	0
    146  a6f5		       00		      byte.b	0
    147  a6f6		       00		      byte.b	0
    148  a6f7		       00		      byte.b	0
    149  a6f8		       00		      byte.b	0
    150  a6f9		       00		      byte.b	0
    151  a6fa		       00		      byte.b	0
    152  a6fb		       00		      byte.b	0
    153  a6fc		       00		      byte.b	0
    154  a6fd		       00		      byte.b	0
    155  a6fe		       00		      byte.b	0
    156  a6ff		       00		      byte.b	0
    157  a700		       00		      byte.b	0
    158  a701		       00		      byte.b	0
    159  a702		       00		      byte.b	0
    160  a703		       00		      byte.b	0
    161  a704		       00		      byte.b	0
    162  a705		       00		      byte.b	0
    163  a706		       00		      byte.b	0
    164  a707		       00		      byte.b	0
    165  a708		       00		      byte.b	0
    166  a709		       00		      byte.b	0
    167  a70a		       00		      byte.b	0
    168  a70b		       00		      byte.b	0
    169  a70c		       00		      byte.b	0
    170  a70d		       00		      byte.b	0
    171  a70e		       00		      byte.b	0
    172  a70f		       85		      byte.b	133
    173  a710		       8c		      byte.b	140
    174  a711		       92		      byte.b	146
    175  a712		       98		      byte.b	152
    176  a713		       9e		      byte.b	158
    177  a714		       a3		      byte.b	163
    178  a715		       a9		      byte.b	169
    179  a716		       ad		      byte.b	173
    180  a717		       b2		      byte.b	178
    181  a718		       b6		      byte.b	182
    182  a719		       ba		      byte.b	186
    183  a71a		       be		      byte.b	190
    184  a71b		       c2		      byte.b	194
    185  a71c		       c5		      byte.b	197
    186  a71d		       c9		      byte.b	201
    187  a71e		       cc		      byte.b	204
    188  a71f		       cf		      byte.b	207
    189  a720		       d1		      byte.b	209
    190  a721		       d4		      byte.b	212
    191  a722		       d6		      byte.b	214
    192  a723		       d9		      byte.b	217
    193  a724		       db		      byte.b	219
    194  a725		       dd		      byte.b	221
    195  a726		       df		      byte.b	223
    196  a727		       e0		      byte.b	224
    197  a728		       e2		      byte.b	226
    198  a729		       e4		      byte.b	228
    199  a72a		       e5		      byte.b	229
    200  a72b		       e7		      byte.b	231
    201  a72c		       e8		      byte.b	232
    202  a72d		       e9		      byte.b	233
    203  a72e		       eb		      byte.b	235
    204  a72f		       ec		      byte.b	236
    205  a730		       ed		      byte.b	237
    206  a731		       ee		      byte.b	238
    207  a732		       ef		      byte.b	239
    208  a733		       f0		      byte.b	240
    209  a734		       00		      byte.b	0
    210  a735		       00		      byte.b	0
    211  a736		       00		      byte.b	0
    212  a737		       00		      byte.b	0
    213  a738		       00		      byte.b	0
    214  a739		       00		      byte.b	0
    215  a73a		       00		      byte.b	0
    216  a73b		       00		      byte.b	0
    217  a73c		       00		      byte.b	0
    218  a73d		       00		      byte.b	0
    219  a73e		       00		      byte.b	0
    220  a73f		       00		      byte.b	0
    221  a740		       00		      byte.b	0
    222  a741		       00		      byte.b	0
    223  a742		       00		      byte.b	0
    224  a743		       00		      byte.b	0
    225  a744		       00		      byte.b	0
    226  a745		       00		      byte.b	0
    227  a746		       00		      byte.b	0
    228  a747		       00		      byte.b	0
    229  a748		       00		      byte.b	0
    230  a749		       00		      byte.b	0
    231  a74a		       00		      byte.b	0
    232  a74b		       00		      byte.b	0
    233  a74c		       00		      byte.b	0
    234  a74d		       00		      byte.b	0
    235  a74e		       00		      byte.b	0
    236  a74f		       00		      byte.b	0
    237  a750		       00		      byte.b	0
    238  a751		       00		      byte.b	0
    239  a752		       00		      byte.b	0
    240  a753		       00		      byte.b	0
    241  a754		       00		      byte.b	0
    242  a755		       00		      byte.b	0
    243  a756		       00		      byte.b	0
    244  a757		       00		      byte.b	0
    245  a758		       00		      byte.b	0
    246  a759		       00		      byte.b	0
    247  a75a		       00		      byte.b	0
    248  a75b		       00		      byte.b	0
    249  a75c		       00		      byte.b	0
    250  a75d		       00		      byte.b	0
    251  a75e		       00		      byte.b	0
    252  a75f		       00		      byte.b	0
    253  a760		       00		      byte.b	0
    254  a761		       00		      byte.b	0
    255  a762		       00		      byte.b	0
    256  a763		       00		      byte.b	0
    257  a764		       00		      byte.b	0
    258  a765		       00		      byte.b	0
    259  a766		       00		      byte.b	0
    260  a767		       00		      byte.b	0
    261  a768		       00		      byte.b	0
    262  a769		       00		      byte.b	0
    263  a76a		       00		      byte.b	0
    264  a76b
    265  a76b				   voice3lookup_ntsc
    266  a76b		       00		      byte.b	0
    267  a76c		       00		      byte.b	0
    268  a76d		       00		      byte.b	0
    269  a76e		       00		      byte.b	0
    270  a76f		       00		      byte.b	0
    271  a770		       00		      byte.b	0
    272  a771		       00		      byte.b	0
    273  a772		       00		      byte.b	0
    274  a773		       00		      byte.b	0
    275  a774		       00		      byte.b	0
    276  a775		       00		      byte.b	0
    277  a776		       00		      byte.b	0
    278  a777		       00		      byte.b	0
    279  a778		       00		      byte.b	0
    280  a779		       00		      byte.b	0
    281  a77a		       00		      byte.b	0
    282  a77b		       00		      byte.b	0
    283  a77c		       00		      byte.b	0
    284  a77d		       00		      byte.b	0
    285  a77e		       00		      byte.b	0
    286  a77f		       00		      byte.b	0
    287  a780		       00		      byte.b	0
    288  a781		       00		      byte.b	0
    289  a782		       00		      byte.b	0
    290  a783		       00		      byte.b	0
    291  a784		       00		      byte.b	0
    292  a785		       00		      byte.b	0
    293  a786		       00		      byte.b	0
    294  a787		       00		      byte.b	0
    295  a788		       00		      byte.b	0
    296  a789		       00		      byte.b	0
    297  a78a		       00		      byte.b	0
    298  a78b		       00		      byte.b	0
    299  a78c		       00		      byte.b	0
    300  a78d		       00		      byte.b	0
    301  a78e		       00		      byte.b	0
    302  a78f		       00		      byte.b	0
    303  a790		       00		      byte.b	0
    304  a791		       00		      byte.b	0
    305  a792		       00		      byte.b	0
    306  a793		       00		      byte.b	0
    307  a794		       00		      byte.b	0
    308  a795		       00		      byte.b	0
    309  a796		       00		      byte.b	0
    310  a797		       00		      byte.b	0
    311  a798		       00		      byte.b	0
    312  a799		       00		      byte.b	0
    313  a79a		       00		      byte.b	0
    314  a79b		       85		      byte.b	133
    315  a79c		       8c		      byte.b	140
    316  a79d		       92		      byte.b	146
    317  a79e		       98		      byte.b	152
    318  a79f		       9e		      byte.b	158
    319  a7a0		       a3		      byte.b	163
    320  a7a1		       a9		      byte.b	169
    321  a7a2		       ad		      byte.b	173
    322  a7a3		       b2		      byte.b	178
    323  a7a4		       b6		      byte.b	182
    324  a7a5		       ba		      byte.b	186
    325  a7a6		       be		      byte.b	190
    326  a7a7		       c2		      byte.b	194
    327  a7a8		       c5		      byte.b	197
    328  a7a9		       c9		      byte.b	201
    329  a7aa		       cc		      byte.b	204
    330  a7ab		       cf		      byte.b	207
    331  a7ac		       d1		      byte.b	209
    332  a7ad		       d4		      byte.b	212
    333  a7ae		       d6		      byte.b	214
    334  a7af		       d9		      byte.b	217
    335  a7b0		       db		      byte.b	219
    336  a7b1		       dd		      byte.b	221
    337  a7b2		       df		      byte.b	223
    338  a7b3		       e0		      byte.b	224
    339  a7b4		       e2		      byte.b	226
    340  a7b5		       e4		      byte.b	228
    341  a7b6		       e5		      byte.b	229
    342  a7b7		       e7		      byte.b	231
    343  a7b8		       e8		      byte.b	232
    344  a7b9		       e9		      byte.b	233
    345  a7ba		       eb		      byte.b	235
    346  a7bb		       ec		      byte.b	236
    347  a7bc		       ed		      byte.b	237
    348  a7bd		       ee		      byte.b	238
    349  a7be		       ef		      byte.b	239
    350  a7bf		       f0		      byte.b	240
    351  a7c0		       00		      byte.b	0
    352  a7c1		       00		      byte.b	0
    353  a7c2		       00		      byte.b	0
    354  a7c3		       00		      byte.b	0
    355  a7c4		       00		      byte.b	0
    356  a7c5		       00		      byte.b	0
    357  a7c6		       00		      byte.b	0
    358  a7c7		       00		      byte.b	0
    359  a7c8		       00		      byte.b	0
    360  a7c9		       00		      byte.b	0
    361  a7ca		       00		      byte.b	0
    362  a7cb		       00		      byte.b	0
    363  a7cc		       00		      byte.b	0
    364  a7cd		       00		      byte.b	0
    365  a7ce		       00		      byte.b	0
    366  a7cf		       00		      byte.b	0
    367  a7d0		       00		      byte.b	0
    368  a7d1		       00		      byte.b	0
    369  a7d2		       00		      byte.b	0
    370  a7d3		       00		      byte.b	0
    371  a7d4		       00		      byte.b	0
    372  a7d5		       00		      byte.b	0
    373  a7d6		       00		      byte.b	0
    374  a7d7		       00		      byte.b	0
    375  a7d8		       00		      byte.b	0
    376  a7d9		       00		      byte.b	0
    377  a7da		       00		      byte.b	0
    378  a7db		       00		      byte.b	0
    379  a7dc		       00		      byte.b	0
    380  a7dd		       00		      byte.b	0
    381  a7de		       00		      byte.b	0
    382  a7df		       00		      byte.b	0
    383  a7e0		       00		      byte.b	0
    384  a7e1		       00		      byte.b	0
    385  a7e2		       00		      byte.b	0
    386  a7e3		       00		      byte.b	0
    387  a7e4		       00		      byte.b	0
    388  a7e5		       00		      byte.b	0
    389  a7e6		       00		      byte.b	0
    390  a7e7		       00		      byte.b	0
    391  a7e8		       00		      byte.b	0
    392  a7e9		       00		      byte.b	0
    393  a7ea		       00		      byte.b	0
    394  a7eb
    395  a7eb
    396  a7eb				   voice4lookup_ntsc
    397  a7eb		       00		      byte.b	0
    398  a7ec		       00		      byte.b	0
    399  a7ed		       00		      byte.b	0
    400  a7ee		       00		      byte.b	0
    401  a7ef		       00		      byte.b	0
    402  a7f0		       00		      byte.b	0
    403  a7f1		       00		      byte.b	0
    404  a7f2		       00		      byte.b	0
    405  a7f3		       00		      byte.b	0
    406  a7f4		       00		      byte.b	0
    407  a7f5		       00		      byte.b	0
    408  a7f6		       00		      byte.b	0
    409  a7f7		       00		      byte.b	0
    410  a7f8		       00		      byte.b	0
    411  a7f9		       00		      byte.b	0
    412  a7fa		       00		      byte.b	0
    413  a7fb		       00		      byte.b	0
    414  a7fc		       00		      byte.b	0
    415  a7fd		       00		      byte.b	0
    416  a7fe		       00		      byte.b	0
    417  a7ff		       00		      byte.b	0
    418  a800		       00		      byte.b	0
    419  a801		       00		      byte.b	0
    420  a802		       00		      byte.b	0
    421  a803		       00		      byte.b	0
    422  a804		       00		      byte.b	0
    423  a805		       00		      byte.b	0
    424  a806		       00		      byte.b	0
    425  a807		       00		      byte.b	0
    426  a808		       00		      byte.b	0
    427  a809		       00		      byte.b	0
    428  a80a		       00		      byte.b	0
    429  a80b		       00		      byte.b	0
    430  a80c		       00		      byte.b	0
    431  a80d		       00		      byte.b	0
    432  a80e		       00		      byte.b	0
    433  a80f		       85		      byte.b	133
    434  a810		       8c		      byte.b	140
    435  a811		       92		      byte.b	146
    436  a812		       98		      byte.b	152
    437  a813		       9e		      byte.b	158
    438  a814		       a3		      byte.b	163
    439  a815		       a9		      byte.b	169
    440  a816		       ad		      byte.b	173
    441  a817		       b2		      byte.b	178
    442  a818		       b6		      byte.b	182
    443  a819		       ba		      byte.b	186
    444  a81a		       be		      byte.b	190
    445  a81b		       c2		      byte.b	194
    446  a81c		       c5		      byte.b	197
    447  a81d		       c9		      byte.b	201
    448  a81e		       cc		      byte.b	204
    449  a81f		       cf		      byte.b	207
    450  a820		       d1		      byte.b	209
    451  a821		       d4		      byte.b	212
    452  a822		       d6		      byte.b	214
    453  a823		       d9		      byte.b	217
    454  a824		       db		      byte.b	219
    455  a825		       dd		      byte.b	221
    456  a826		       df		      byte.b	223
    457  a827		       e0		      byte.b	224
    458  a828		       e2		      byte.b	226
    459  a829		       e4		      byte.b	228
    460  a82a		       e5		      byte.b	229
    461  a82b		       e7		      byte.b	231
    462  a82c		       e8		      byte.b	232
    463  a82d		       e9		      byte.b	233
    464  a82e		       eb		      byte.b	235
    465  a82f		       ec		      byte.b	236
    466  a830		       ed		      byte.b	237
    467  a831		       ee		      byte.b	238
    468  a832		       ef		      byte.b	239
    469  a833		       f0		      byte.b	240
    470  a834		       00		      byte.b	0
    471  a835		       00		      byte.b	0
    472  a836		       00		      byte.b	0
    473  a837		       00		      byte.b	0
    474  a838		       00		      byte.b	0
    475  a839		       00		      byte.b	0
    476  a83a		       00		      byte.b	0
    477  a83b		       00		      byte.b	0
    478  a83c		       00		      byte.b	0
    479  a83d		       00		      byte.b	0
    480  a83e		       00		      byte.b	0
    481  a83f		       00		      byte.b	0
    482  a840		       00		      byte.b	0
    483  a841		       00		      byte.b	0
    484  a842		       00		      byte.b	0
    485  a843		       00		      byte.b	0
    486  a844		       00		      byte.b	0
    487  a845		       00		      byte.b	0
    488  a846		       00		      byte.b	0
    489  a847		       00		      byte.b	0
    490  a848		       00		      byte.b	0
    491  a849		       00		      byte.b	0
    492  a84a		       00		      byte.b	0
    493  a84b		       00		      byte.b	0
    494  a84c		       00		      byte.b	0
    495  a84d		       00		      byte.b	0
    496  a84e		       00		      byte.b	0
    497  a84f		       00		      byte.b	0
    498  a850		       00		      byte.b	0
    499  a851		       00		      byte.b	0
    500  a852		       00		      byte.b	0
    501  a853		       00		      byte.b	0
    502  a854		       00		      byte.b	0
    503  a855		       00		      byte.b	0
    504  a856		       00		      byte.b	0
    505  a857		       00		      byte.b	0
    506  a858		       00		      byte.b	0
    507  a859		       00		      byte.b	0
    508  a85a		       00		      byte.b	0
    509  a85b		       00		      byte.b	0
    510  a85c		       00		      byte.b	0
    511  a85d		       00		      byte.b	0
    512  a85e		       00		      byte.b	0
    513  a85f		       00		      byte.b	0
    514  a860		       00		      byte.b	0
    515  a861		       00		      byte.b	0
    516  a862		       00		      byte.b	0
    517  a863		       00		      byte.b	0
    518  a864		       00		      byte.b	0
    519  a865		       00		      byte.b	0
    520  a866		       00		      byte.b	0
    521  a867		       00		      byte.b	0
    522  a868		       00		      byte.b	0
    523  a869		       00		      byte.b	0
    524  a86a		       00		      byte.b	0
    525  a86b
    526  a86b							; EOF!
------- FILE vicmidi.asm
------- FILE lookup-pal.asm LEVEL 2 PASS 2
      0  a86b					      include	"lookup-pal.asm"
      1  a86b							; --------------------------------------------------------------------------------------------------
      2  a86b							; Note Lookups PAL - 128 bytes each, map MIDI Note# to a VIC register value
      3  a86b							; From http://sleepingelephant.com/ipw-web/bulletin/bb/viewtopic.php?t=3643
      4  a86b
      5  a86b				   voice1lookup_pal
      6  a86b		       00		      byte.b	0
      7  a86c		       00		      byte.b	0
      8  a86d		       00		      byte.b	0
      9  a86e		       00		      byte.b	0
     10  a86f		       00		      byte.b	0
     11  a870		       00		      byte.b	0
     12  a871		       00		      byte.b	0
     13  a872		       00		      byte.b	0
     14  a873		       00		      byte.b	0
     15  a874		       00		      byte.b	0
     16  a875		       00		      byte.b	0
     17  a876		       00		      byte.b	0
     18  a877		       00		      byte.b	0
     19  a878		       00		      byte.b	0
     20  a879		       00		      byte.b	0
     21  a87a		       00		      byte.b	0
     22  a87b		       00		      byte.b	0
     23  a87c		       00		      byte.b	0
     24  a87d		       00		      byte.b	0
     25  a87e		       00		      byte.b	0
     26  a87f		       00		      byte.b	0
     27  a880		       00		      byte.b	0
     28  a881		       00		      byte.b	0
     29  a882		       00		      byte.b	0
     30  a883		       7b		      byte.b	123	; (122.60)  <- not reachable in PAL
     31  a884		       82		      byte.b	130
     32  a885		       89		      byte.b	137
     33  a886		       90		      byte.b	144
     34  a887		       96		      byte.b	150
     35  a888		       9c		      byte.b	156
     36  a889		       a1		      byte.b	161
     37  a88a		       a7		      byte.b	167
     38  a88b		       ac		      byte.b	172
     39  a88c		       b0		      byte.b	176
     40  a88d		       b5		      byte.b	181
     41  a88e		       b9		      byte.b	185
     42  a88f		       bd		      byte.b	189
     43  a890		       c1		      byte.b	193
     44  a891		       c4		      byte.b	196
     45  a892		       c7		      byte.b	199
     46  a893		       ca		      byte.b	202
     47  a894		       cd		      byte.b	205
     48  a895		       d0		      byte.b	208
     49  a896		       d3		      byte.b	211
     50  a897		       d5		      byte.b	213
     51  a898		       d8		      byte.b	216
     52  a899		       da		      byte.b	218
     53  a89a		       dc		      byte.b	220
     54  a89b		       de		      byte.b	222
     55  a89c		       e0		      byte.b	224
     56  a89d		       e2		      byte.b	226
     57  a89e		       e3		      byte.b	227
     58  a89f		       e5		      byte.b	229
     59  a8a0		       e6		      byte.b	230
     60  a8a1		       e8		      byte.b	232
     61  a8a2		       e9		      byte.b	233
     62  a8a3		       ea		      byte.b	234
     63  a8a4		       eb		      byte.b	235
     64  a8a5		       ec		      byte.b	236
     65  a8a6		       ed		      byte.b	237
     66  a8a7		       ee		      byte.b	238
     67  a8a8		       00		      byte.b	0
     68  a8a9		       00		      byte.b	0
     69  a8aa		       00		      byte.b	0
     70  a8ab		       00		      byte.b	0
     71  a8ac		       00		      byte.b	0
     72  a8ad		       00		      byte.b	0
     73  a8ae		       00		      byte.b	0
     74  a8af		       00		      byte.b	0
     75  a8b0		       00		      byte.b	0
     76  a8b1		       00		      byte.b	0
     77  a8b2		       00		      byte.b	0
     78  a8b3		       00		      byte.b	0
     79  a8b4		       00		      byte.b	0
     80  a8b5		       00		      byte.b	0
     81  a8b6		       00		      byte.b	0
     82  a8b7		       00		      byte.b	0
     83  a8b8		       00		      byte.b	0
     84  a8b9		       00		      byte.b	0
     85  a8ba		       00		      byte.b	0
     86  a8bb		       00		      byte.b	0
     87  a8bc		       00		      byte.b	0
     88  a8bd		       00		      byte.b	0
     89  a8be		       00		      byte.b	0
     90  a8bf		       00		      byte.b	0
     91  a8c0		       00		      byte.b	0
     92  a8c1		       00		      byte.b	0
     93  a8c2		       00		      byte.b	0
     94  a8c3		       00		      byte.b	0
     95  a8c4		       00		      byte.b	0
     96  a8c5		       00		      byte.b	0
     97  a8c6		       00		      byte.b	0
     98  a8c7		       00		      byte.b	0
     99  a8c8		       00		      byte.b	0
    100  a8c9		       00		      byte.b	0
    101  a8ca		       00		      byte.b	0
    102  a8cb		       00		      byte.b	0
    103  a8cc		       00		      byte.b	0
    104  a8cd		       00		      byte.b	0
    105  a8ce		       00		      byte.b	0
    106  a8cf		       00		      byte.b	0
    107  a8d0		       00		      byte.b	0
    108  a8d1		       00		      byte.b	0
    109  a8d2		       00		      byte.b	0
    110  a8d3		       00		      byte.b	0
    111  a8d4		       00		      byte.b	0
    112  a8d5		       00		      byte.b	0
    113  a8d6		       00		      byte.b	0
    114  a8d7		       00		      byte.b	0
    115  a8d8		       00		      byte.b	0
    116  a8d9		       00		      byte.b	0
    117  a8da		       00		      byte.b	0
    118  a8db		       00		      byte.b	0
    119  a8dc		       00		      byte.b	0
    120  a8dd		       00		      byte.b	0
    121  a8de		       00		      byte.b	0
    122  a8df		       00		      byte.b	0
    123  a8e0		       00		      byte.b	0
    124  a8e1		       00		      byte.b	0
    125  a8e2		       00		      byte.b	0
    126  a8e3		       00		      byte.b	0
    127  a8e4		       00		      byte.b	0
    128  a8e5		       00		      byte.b	0
    129  a8e6		       00		      byte.b	0
    130  a8e7		       00		      byte.b	0
    131  a8e8		       00		      byte.b	0
    132  a8e9		       00		      byte.b	0
    133  a8ea		       00		      byte.b	0
    134  a8eb
    135  a8eb				   voice2lookup_pal
    136  a8eb		       00		      byte.b	0
    137  a8ec		       00		      byte.b	0
    138  a8ed		       00		      byte.b	0
    139  a8ee		       00		      byte.b	0
    140  a8ef		       00		      byte.b	0
    141  a8f0		       00		      byte.b	0
    142  a8f1		       00		      byte.b	0
    143  a8f2		       00		      byte.b	0
    144  a8f3		       00		      byte.b	0
    145  a8f4		       00		      byte.b	0
    146  a8f5		       00		      byte.b	0
    147  a8f6		       00		      byte.b	0
    148  a8f7		       00		      byte.b	0
    149  a8f8		       00		      byte.b	0
    150  a8f9		       00		      byte.b	0
    151  a8fa		       00		      byte.b	0
    152  a8fb		       00		      byte.b	0
    153  a8fc		       00		      byte.b	0
    154  a8fd		       00		      byte.b	0
    155  a8fe		       00		      byte.b	0
    156  a8ff		       00		      byte.b	0
    157  a900		       00		      byte.b	0
    158  a901		       00		      byte.b	0
    159  a902		       00		      byte.b	0
    160  a903		       00		      byte.b	0
    161  a904		       00		      byte.b	0
    162  a905		       00		      byte.b	0
    163  a906		       00		      byte.b	0
    164  a907		       00		      byte.b	0
    165  a908		       00		      byte.b	0
    166  a909		       00		      byte.b	0
    167  a90a		       00		      byte.b	0
    168  a90b		       00		      byte.b	0
    169  a90c		       00		      byte.b	0
    170  a90d		       00		      byte.b	0
    171  a90e		       00		      byte.b	0
    172  a90f		       7b		      byte.b	123	; (122.60)  <- not reachable in PAL
    173  a910		       82		      byte.b	130
    174  a911		       89		      byte.b	137
    175  a912		       90		      byte.b	144
    176  a913		       96		      byte.b	150
    177  a914		       9c		      byte.b	156
    178  a915		       a1		      byte.b	161
    179  a916		       a7		      byte.b	167
    180  a917		       ac		      byte.b	172
    181  a918		       b0		      byte.b	176
    182  a919		       b5		      byte.b	181
    183  a91a		       b9		      byte.b	185
    184  a91b		       bd		      byte.b	189
    185  a91c		       c1		      byte.b	193
    186  a91d		       c4		      byte.b	196
    187  a91e		       c7		      byte.b	199
    188  a91f		       ca		      byte.b	202
    189  a920		       cd		      byte.b	205
    190  a921		       d0		      byte.b	208
    191  a922		       d3		      byte.b	211
    192  a923		       d5		      byte.b	213
    193  a924		       d8		      byte.b	216
    194  a925		       da		      byte.b	218
    195  a926		       dc		      byte.b	220
    196  a927		       de		      byte.b	222
    197  a928		       e0		      byte.b	224
    198  a929		       e2		      byte.b	226
    199  a92a		       e3		      byte.b	227
    200  a92b		       e5		      byte.b	229
    201  a92c		       e6		      byte.b	230
    202  a92d		       e8		      byte.b	232
    203  a92e		       e9		      byte.b	233
    204  a92f		       ea		      byte.b	234
    205  a930		       eb		      byte.b	235
    206  a931		       ec		      byte.b	236
    207  a932		       ed		      byte.b	237
    208  a933		       ee		      byte.b	238
    209  a934		       00		      byte.b	0
    210  a935		       00		      byte.b	0
    211  a936		       00		      byte.b	0
    212  a937		       00		      byte.b	0
    213  a938		       00		      byte.b	0
    214  a939		       00		      byte.b	0
    215  a93a		       00		      byte.b	0
    216  a93b		       00		      byte.b	0
    217  a93c		       00		      byte.b	0
    218  a93d		       00		      byte.b	0
    219  a93e		       00		      byte.b	0
    220  a93f		       00		      byte.b	0
    221  a940		       00		      byte.b	0
    222  a941		       00		      byte.b	0
    223  a942		       00		      byte.b	0
    224  a943		       00		      byte.b	0
    225  a944		       00		      byte.b	0
    226  a945		       00		      byte.b	0
    227  a946		       00		      byte.b	0
    228  a947		       00		      byte.b	0
    229  a948		       00		      byte.b	0
    230  a949		       00		      byte.b	0
    231  a94a		       00		      byte.b	0
    232  a94b		       00		      byte.b	0
    233  a94c		       00		      byte.b	0
    234  a94d		       00		      byte.b	0
    235  a94e		       00		      byte.b	0
    236  a94f		       00		      byte.b	0
    237  a950		       00		      byte.b	0
    238  a951		       00		      byte.b	0
    239  a952		       00		      byte.b	0
    240  a953		       00		      byte.b	0
    241  a954		       00		      byte.b	0
    242  a955		       00		      byte.b	0
    243  a956		       00		      byte.b	0
    244  a957		       00		      byte.b	0
    245  a958		       00		      byte.b	0
    246  a959		       00		      byte.b	0
    247  a95a		       00		      byte.b	0
    248  a95b		       00		      byte.b	0
    249  a95c		       00		      byte.b	0
    250  a95d		       00		      byte.b	0
    251  a95e		       00		      byte.b	0
    252  a95f		       00		      byte.b	0
    253  a960		       00		      byte.b	0
    254  a961		       00		      byte.b	0
    255  a962		       00		      byte.b	0
    256  a963		       00		      byte.b	0
    257  a964		       00		      byte.b	0
    258  a965		       00		      byte.b	0
    259  a966		       00		      byte.b	0
    260  a967		       00		      byte.b	0
    261  a968		       00		      byte.b	0
    262  a969		       00		      byte.b	0
    263  a96a		       00		      byte.b	0
    264  a96b
    265  a96b				   voice3lookup_pal
    266  a96b		       00		      byte.b	0
    267  a96c		       00		      byte.b	0
    268  a96d		       00		      byte.b	0
    269  a96e		       00		      byte.b	0
    270  a96f		       00		      byte.b	0
    271  a970		       00		      byte.b	0
    272  a971		       00		      byte.b	0
    273  a972		       00		      byte.b	0
    274  a973		       00		      byte.b	0
    275  a974		       00		      byte.b	0
    276  a975		       00		      byte.b	0
    277  a976		       00		      byte.b	0
    278  a977		       00		      byte.b	0
    279  a978		       00		      byte.b	0
    280  a979		       00		      byte.b	0
    281  a97a		       00		      byte.b	0
    282  a97b		       00		      byte.b	0
    283  a97c		       00		      byte.b	0
    284  a97d		       00		      byte.b	0
    285  a97e		       00		      byte.b	0
    286  a97f		       00		      byte.b	0
    287  a980		       00		      byte.b	0
    288  a981		       00		      byte.b	0
    289  a982		       00		      byte.b	0
    290  a983		       00		      byte.b	0
    291  a984		       00		      byte.b	0
    292  a985		       00		      byte.b	0
    293  a986		       00		      byte.b	0
    294  a987		       00		      byte.b	0
    295  a988		       00		      byte.b	0
    296  a989		       00		      byte.b	0
    297  a98a		       00		      byte.b	0
    298  a98b		       00		      byte.b	0
    299  a98c		       00		      byte.b	0
    300  a98d		       00		      byte.b	0
    301  a98e		       00		      byte.b	0
    302  a98f		       00		      byte.b	0
    303  a990		       00		      byte.b	0
    304  a991		       00		      byte.b	0
    305  a992		       00		      byte.b	0
    306  a993		       00		      byte.b	0
    307  a994		       00		      byte.b	0
    308  a995		       00		      byte.b	0
    309  a996		       00		      byte.b	0
    310  a997		       00		      byte.b	0
    311  a998		       00		      byte.b	0
    312  a999		       00		      byte.b	0
    313  a99a		       00		      byte.b	0
    314  a99b		       7b		      byte.b	123	; (122.60)  <- not reachable in PAL
    315  a99c		       82		      byte.b	130
    316  a99d		       89		      byte.b	137
    317  a99e		       90		      byte.b	144
    318  a99f		       96		      byte.b	150
    319  a9a0		       9c		      byte.b	156
    320  a9a1		       a1		      byte.b	161
    321  a9a2		       a7		      byte.b	167
    322  a9a3		       ac		      byte.b	172
    323  a9a4		       b0		      byte.b	176
    324  a9a5		       b5		      byte.b	181
    325  a9a6		       b9		      byte.b	185
    326  a9a7		       bd		      byte.b	189
    327  a9a8		       c1		      byte.b	193
    328  a9a9		       c4		      byte.b	196
    329  a9aa		       c7		      byte.b	199
    330  a9ab		       ca		      byte.b	202
    331  a9ac		       cd		      byte.b	205
    332  a9ad		       d0		      byte.b	208
    333  a9ae		       d3		      byte.b	211
    334  a9af		       d5		      byte.b	213
    335  a9b0		       d8		      byte.b	216
    336  a9b1		       da		      byte.b	218
    337  a9b2		       dc		      byte.b	220
    338  a9b3		       de		      byte.b	222
    339  a9b4		       e0		      byte.b	224
    340  a9b5		       e2		      byte.b	226
    341  a9b6		       e3		      byte.b	227
    342  a9b7		       e5		      byte.b	229
    343  a9b8		       e6		      byte.b	230
    344  a9b9		       e8		      byte.b	232
    345  a9ba		       e9		      byte.b	233
    346  a9bb		       ea		      byte.b	234
    347  a9bc		       eb		      byte.b	235
    348  a9bd		       ec		      byte.b	236
    349  a9be		       ed		      byte.b	237
    350  a9bf		       ee		      byte.b	238
    351  a9c0		       00		      byte.b	0
    352  a9c1		       00		      byte.b	0
    353  a9c2		       00		      byte.b	0
    354  a9c3		       00		      byte.b	0
    355  a9c4		       00		      byte.b	0
    356  a9c5		       00		      byte.b	0
    357  a9c6		       00		      byte.b	0
    358  a9c7		       00		      byte.b	0
    359  a9c8		       00		      byte.b	0
    360  a9c9		       00		      byte.b	0
    361  a9ca		       00		      byte.b	0
    362  a9cb		       00		      byte.b	0
    363  a9cc		       00		      byte.b	0
    364  a9cd		       00		      byte.b	0
    365  a9ce		       00		      byte.b	0
    366  a9cf		       00		      byte.b	0
    367  a9d0		       00		      byte.b	0
    368  a9d1		       00		      byte.b	0
    369  a9d2		       00		      byte.b	0
    370  a9d3		       00		      byte.b	0
    371  a9d4		       00		      byte.b	0
    372  a9d5		       00		      byte.b	0
    373  a9d6		       00		      byte.b	0
    374  a9d7		       00		      byte.b	0
    375  a9d8		       00		      byte.b	0
    376  a9d9		       00		      byte.b	0
    377  a9da		       00		      byte.b	0
    378  a9db		       00		      byte.b	0
    379  a9dc		       00		      byte.b	0
    380  a9dd		       00		      byte.b	0
    381  a9de		       00		      byte.b	0
    382  a9df		       00		      byte.b	0
    383  a9e0		       00		      byte.b	0
    384  a9e1		       00		      byte.b	0
    385  a9e2		       00		      byte.b	0
    386  a9e3		       00		      byte.b	0
    387  a9e4		       00		      byte.b	0
    388  a9e5		       00		      byte.b	0
    389  a9e6		       00		      byte.b	0
    390  a9e7		       00		      byte.b	0
    391  a9e8		       00		      byte.b	0
    392  a9e9		       00		      byte.b	0
    393  a9ea		       00		      byte.b	0
    394  a9eb
    395  a9eb
    396  a9eb				   voice4lookup_pal
    397  a9eb		       00		      byte.b	0
    398  a9ec		       00		      byte.b	0
    399  a9ed		       00		      byte.b	0
    400  a9ee		       00		      byte.b	0
    401  a9ef		       00		      byte.b	0
    402  a9f0		       00		      byte.b	0
    403  a9f1		       00		      byte.b	0
    404  a9f2		       00		      byte.b	0
    405  a9f3		       00		      byte.b	0
    406  a9f4		       00		      byte.b	0
    407  a9f5		       00		      byte.b	0
    408  a9f6		       00		      byte.b	0
    409  a9f7		       00		      byte.b	0
    410  a9f8		       00		      byte.b	0
    411  a9f9		       00		      byte.b	0
    412  a9fa		       00		      byte.b	0
    413  a9fb		       00		      byte.b	0
    414  a9fc		       00		      byte.b	0
    415  a9fd		       00		      byte.b	0
    416  a9fe		       00		      byte.b	0
    417  a9ff		       00		      byte.b	0
    418  aa00		       00		      byte.b	0
    419  aa01		       00		      byte.b	0
    420  aa02		       00		      byte.b	0
    421  aa03		       00		      byte.b	0
    422  aa04		       00		      byte.b	0
    423  aa05		       00		      byte.b	0
    424  aa06		       00		      byte.b	0
    425  aa07		       00		      byte.b	0
    426  aa08		       00		      byte.b	0
    427  aa09		       00		      byte.b	0
    428  aa0a		       00		      byte.b	0
    429  aa0b		       00		      byte.b	0
    430  aa0c		       00		      byte.b	0
    431  aa0d		       00		      byte.b	0
    432  aa0e		       00		      byte.b	0
    433  aa0f		       85		      byte.b	133	; (122.60)  <- not reachable in PAL
    434  aa10		       8c		      byte.b	140
    435  aa11		       92		      byte.b	146
    436  aa12		       98		      byte.b	152
    437  aa13		       9e		      byte.b	158
    438  aa14		       a3		      byte.b	163
    439  aa15		       a9		      byte.b	169
    440  aa16		       ad		      byte.b	173
    441  aa17		       b2		      byte.b	178
    442  aa18		       b6		      byte.b	182
    443  aa19		       ba		      byte.b	186
    444  aa1a		       be		      byte.b	190
    445  aa1b		       c2		      byte.b	194
    446  aa1c		       c5		      byte.b	197
    447  aa1d		       c9		      byte.b	201
    448  aa1e		       cc		      byte.b	204
    449  aa1f		       cf		      byte.b	207
    450  aa20		       d1		      byte.b	209
    451  aa21		       d4		      byte.b	212
    452  aa22		       d6		      byte.b	214
    453  aa23		       d9		      byte.b	217
    454  aa24		       db		      byte.b	219
    455  aa25		       dd		      byte.b	221
    456  aa26		       df		      byte.b	223
    457  aa27		       e0		      byte.b	224
    458  aa28		       e2		      byte.b	226
    459  aa29		       e4		      byte.b	228
    460  aa2a		       e5		      byte.b	229
    461  aa2b		       e7		      byte.b	231
    462  aa2c		       e8		      byte.b	232
    463  aa2d		       e9		      byte.b	233
    464  aa2e		       eb		      byte.b	235
    465  aa2f		       ec		      byte.b	236
    466  aa30		       ed		      byte.b	237
    467  aa31		       ee		      byte.b	238
    468  aa32		       ef		      byte.b	239
    469  aa33		       f0		      byte.b	240
    470  aa34		       00		      byte.b	0
    471  aa35		       00		      byte.b	0
    472  aa36		       00		      byte.b	0
    473  aa37		       00		      byte.b	0
    474  aa38		       00		      byte.b	0
    475  aa39		       00		      byte.b	0
    476  aa3a		       00		      byte.b	0
    477  aa3b		       00		      byte.b	0
    478  aa3c		       00		      byte.b	0
    479  aa3d		       00		      byte.b	0
    480  aa3e		       00		      byte.b	0
    481  aa3f		       00		      byte.b	0
    482  aa40		       00		      byte.b	0
    483  aa41		       00		      byte.b	0
    484  aa42		       00		      byte.b	0
    485  aa43		       00		      byte.b	0
    486  aa44		       00		      byte.b	0
    487  aa45		       00		      byte.b	0
    488  aa46		       00		      byte.b	0
    489  aa47		       00		      byte.b	0
    490  aa48		       00		      byte.b	0
    491  aa49		       00		      byte.b	0
    492  aa4a		       00		      byte.b	0
    493  aa4b		       00		      byte.b	0
    494  aa4c		       00		      byte.b	0
    495  aa4d		       00		      byte.b	0
    496  aa4e		       00		      byte.b	0
    497  aa4f		       00		      byte.b	0
    498  aa50		       00		      byte.b	0
    499  aa51		       00		      byte.b	0
    500  aa52		       00		      byte.b	0
    501  aa53		       00		      byte.b	0
    502  aa54		       00		      byte.b	0
    503  aa55		       00		      byte.b	0
    504  aa56		       00		      byte.b	0
    505  aa57		       00		      byte.b	0
    506  aa58		       00		      byte.b	0
    507  aa59		       00		      byte.b	0
    508  aa5a		       00		      byte.b	0
    509  aa5b		       00		      byte.b	0
    510  aa5c		       00		      byte.b	0
    511  aa5d		       00		      byte.b	0
    512  aa5e		       00		      byte.b	0
    513  aa5f		       00		      byte.b	0
    514  aa60		       00		      byte.b	0
    515  aa61		       00		      byte.b	0
    516  aa62		       00		      byte.b	0
    517  aa63		       00		      byte.b	0
    518  aa64		       00		      byte.b	0
    519  aa65		       00		      byte.b	0
    520  aa66		       00		      byte.b	0
    521  aa67		       00		      byte.b	0
    522  aa68		       00		      byte.b	0
    523  aa69		       00		      byte.b	0
    524  aa6a		       00		      byte.b	0
    525  aa6b
    526  aa6b							; EOF!
------- FILE vicmidi.asm
------- FILE lookup-alt.asm LEVEL 2 PASS 2
      0  aa6b					      include	"lookup-alt.asm"
      1  aa6b							; --------------------------------------------------------------------------------------------------
      2  aa6b							; Note Lookups Alternate - 128 bytes each, map MIDI Note# to a VIC register value
      3  aa6b							; From http://sleepingelephant.com/ipw-web/bulletin/bb/viewtopic.php?t=3643
      4  aa6b
      5  aa6b				   voice1lookup_alt
      6  aa6b		       00		      byte.b	0
      7  aa6c		       00		      byte.b	0
      8  aa6d		       00		      byte.b	0
      9  aa6e		       00		      byte.b	0
     10  aa6f		       00		      byte.b	0
     11  aa70		       00		      byte.b	0
     12  aa71		       00		      byte.b	0
     13  aa72		       00		      byte.b	0
     14  aa73		       00		      byte.b	0
     15  aa74		       00		      byte.b	0
     16  aa75		       00		      byte.b	0
     17  aa76		       00		      byte.b	0
     18  aa77		       00		      byte.b	0
     19  aa78		       00		      byte.b	0
     20  aa79		       00		      byte.b	0
     21  aa7a		       00		      byte.b	0
     22  aa7b		       00		      byte.b	0
     23  aa7c		       00		      byte.b	0
     24  aa7d		       00		      byte.b	0
     25  aa7e		       00		      byte.b	0
     26  aa7f		       00		      byte.b	0
     27  aa80		       00		      byte.b	0
     28  aa81		       00		      byte.b	0
     29  aa82		       00		      byte.b	0
     30  aa83		       ff		      byte.b	255
     31  aa84		       86		      byte.b	134
     32  aa85		       8d		      byte.b	141
     33  aa86		       93		      byte.b	147
     34  aa87		       99		      byte.b	153
     35  aa88		       9f		      byte.b	159
     36  aa89		       a4		      byte.b	164
     37  aa8a		       aa		      byte.b	170
     38  aa8b		       ae		      byte.b	174
     39  aa8c		       b3		      byte.b	179
     40  aa8d		       b7		      byte.b	183
     41  aa8e		       bb		      byte.b	187
     42  aa8f		       bf		      byte.b	191
     43  aa90		       c3		      byte.b	195
     44  aa91		       c6		      byte.b	198
     45  aa92		       c9		      byte.b	201
     46  aa93		       cc		      byte.b	204
     47  aa94		       cf		      byte.b	207
     48  aa95		       d2		      byte.b	210
     49  aa96		       d4		      byte.b	212
     50  aa97		       d7		      byte.b	215
     51  aa98		       d9		      byte.b	217
     52  aa99		       db		      byte.b	219
     53  aa9a		       dd		      byte.b	221
     54  aa9b		       df		      byte.b	223
     55  aa9c		       e1		      byte.b	225
     56  aa9d		       e2		      byte.b	226
     57  aa9e		       e4		      byte.b	228
     58  aa9f		       e6		      byte.b	230
     59  aaa0		       e7		      byte.b	231
     60  aaa1		       e8		      byte.b	232
     61  aaa2		       ea		      byte.b	234
     62  aaa3		       eb		      byte.b	235
     63  aaa4		       ec		      byte.b	236
     64  aaa5		       ed		      byte.b	237
     65  aaa6		       ee		      byte.b	238
     66  aaa7		       ef		      byte.b	239
     67  aaa8		       00		      byte.b	0
     68  aaa9		       00		      byte.b	0
     69  aaaa		       00		      byte.b	0
     70  aaab		       00		      byte.b	0
     71  aaac		       00		      byte.b	0
     72  aaad		       00		      byte.b	0
     73  aaae		       00		      byte.b	0
     74  aaaf		       00		      byte.b	0
     75  aab0		       00		      byte.b	0
     76  aab1		       00		      byte.b	0
     77  aab2		       00		      byte.b	0
     78  aab3		       00		      byte.b	0
     79  aab4		       00		      byte.b	0
     80  aab5		       00		      byte.b	0
     81  aab6		       00		      byte.b	0
     82  aab7		       00		      byte.b	0
     83  aab8		       00		      byte.b	0
     84  aab9		       00		      byte.b	0
     85  aaba		       00		      byte.b	0
     86  aabb		       00		      byte.b	0
     87  aabc		       00		      byte.b	0
     88  aabd		       00		      byte.b	0
     89  aabe		       00		      byte.b	0
     90  aabf		       00		      byte.b	0
     91  aac0		       00		      byte.b	0
     92  aac1		       00		      byte.b	0
     93  aac2		       00		      byte.b	0
     94  aac3		       00		      byte.b	0
     95  aac4		       00		      byte.b	0
     96  aac5		       00		      byte.b	0
     97  aac6		       00		      byte.b	0
     98  aac7		       00		      byte.b	0
     99  aac8		       00		      byte.b	0
    100  aac9		       00		      byte.b	0
    101  aaca		       00		      byte.b	0
    102  aacb		       00		      byte.b	0
    103  aacc		       00		      byte.b	0
    104  aacd		       00		      byte.b	0
    105  aace		       00		      byte.b	0
    106  aacf		       00		      byte.b	0
    107  aad0		       00		      byte.b	0
    108  aad1		       00		      byte.b	0
    109  aad2		       00		      byte.b	0
    110  aad3		       00		      byte.b	0
    111  aad4		       00		      byte.b	0
    112  aad5		       00		      byte.b	0
    113  aad6		       00		      byte.b	0
    114  aad7		       00		      byte.b	0
    115  aad8		       00		      byte.b	0
    116  aad9		       00		      byte.b	0
    117  aada		       00		      byte.b	0
    118  aadb		       00		      byte.b	0
    119  aadc		       00		      byte.b	0
    120  aadd		       00		      byte.b	0
    121  aade		       00		      byte.b	0
    122  aadf		       00		      byte.b	0
    123  aae0		       00		      byte.b	0
    124  aae1		       00		      byte.b	0
    125  aae2		       00		      byte.b	0
    126  aae3		       00		      byte.b	0
    127  aae4		       00		      byte.b	0
    128  aae5		       00		      byte.b	0
    129  aae6		       00		      byte.b	0
    130  aae7		       00		      byte.b	0
    131  aae8		       00		      byte.b	0
    132  aae9		       00		      byte.b	0
    133  aaea		       00		      byte.b	0
    134  aaeb
    135  aaeb				   voice2lookup_alt
    136  aaeb		       00		      byte.b	0
    137  aaec		       00		      byte.b	0
    138  aaed		       00		      byte.b	0
    139  aaee		       00		      byte.b	0
    140  aaef		       00		      byte.b	0
    141  aaf0		       00		      byte.b	0
    142  aaf1		       00		      byte.b	0
    143  aaf2		       00		      byte.b	0
    144  aaf3		       00		      byte.b	0
    145  aaf4		       00		      byte.b	0
    146  aaf5		       00		      byte.b	0
    147  aaf6		       00		      byte.b	0
    148  aaf7		       00		      byte.b	0
    149  aaf8		       00		      byte.b	0
    150  aaf9		       00		      byte.b	0
    151  aafa		       00		      byte.b	0
    152  aafb		       00		      byte.b	0
    153  aafc		       00		      byte.b	0
    154  aafd		       00		      byte.b	0
    155  aafe		       00		      byte.b	0
    156  aaff		       00		      byte.b	0
    157  ab00		       00		      byte.b	0
    158  ab01		       00		      byte.b	0
    159  ab02		       00		      byte.b	0
    160  ab03		       00		      byte.b	0
    161  ab04		       00		      byte.b	0
    162  ab05		       00		      byte.b	0
    163  ab06		       00		      byte.b	0
    164  ab07		       00		      byte.b	0
    165  ab08		       00		      byte.b	0
    166  ab09		       00		      byte.b	0
    167  ab0a		       00		      byte.b	0
    168  ab0b		       00		      byte.b	0
    169  ab0c		       00		      byte.b	0
    170  ab0d		       00		      byte.b	0
    171  ab0e		       00		      byte.b	0
    172  ab0f		       ff		      byte.b	255
    173  ab10		       86		      byte.b	134
    174  ab11		       8d		      byte.b	141
    175  ab12		       93		      byte.b	147
    176  ab13		       99		      byte.b	153
    177  ab14		       9f		      byte.b	159
    178  ab15		       a4		      byte.b	164
    179  ab16		       aa		      byte.b	170
    180  ab17		       ae		      byte.b	174
    181  ab18		       b3		      byte.b	179
    182  ab19		       b7		      byte.b	183
    183  ab1a		       bb		      byte.b	187
    184  ab1b		       bf		      byte.b	191
    185  ab1c		       c3		      byte.b	195
    186  ab1d		       c6		      byte.b	198
    187  ab1e		       c9		      byte.b	201
    188  ab1f		       cc		      byte.b	204
    189  ab20		       cf		      byte.b	207
    190  ab21		       d2		      byte.b	210
    191  ab22		       d4		      byte.b	212
    192  ab23		       d7		      byte.b	215
    193  ab24		       d9		      byte.b	217
    194  ab25		       db		      byte.b	219
    195  ab26		       dd		      byte.b	221
    196  ab27		       df		      byte.b	223
    197  ab28		       e1		      byte.b	225
    198  ab29		       e2		      byte.b	226
    199  ab2a		       e4		      byte.b	228
    200  ab2b		       e6		      byte.b	230
    201  ab2c		       e7		      byte.b	231
    202  ab2d		       e8		      byte.b	232
    203  ab2e		       ea		      byte.b	234
    204  ab2f		       eb		      byte.b	235
    205  ab30		       ec		      byte.b	236
    206  ab31		       ed		      byte.b	237
    207  ab32		       ee		      byte.b	238
    208  ab33		       ef		      byte.b	239
    209  ab34		       00		      byte.b	0
    210  ab35		       00		      byte.b	0
    211  ab36		       00		      byte.b	0
    212  ab37		       00		      byte.b	0
    213  ab38		       00		      byte.b	0
    214  ab39		       00		      byte.b	0
    215  ab3a		       00		      byte.b	0
    216  ab3b		       00		      byte.b	0
    217  ab3c		       00		      byte.b	0
    218  ab3d		       00		      byte.b	0
    219  ab3e		       00		      byte.b	0
    220  ab3f		       00		      byte.b	0
    221  ab40		       00		      byte.b	0
    222  ab41		       00		      byte.b	0
    223  ab42		       00		      byte.b	0
    224  ab43		       00		      byte.b	0
    225  ab44		       00		      byte.b	0
    226  ab45		       00		      byte.b	0
    227  ab46		       00		      byte.b	0
    228  ab47		       00		      byte.b	0
    229  ab48		       00		      byte.b	0
    230  ab49		       00		      byte.b	0
    231  ab4a		       00		      byte.b	0
    232  ab4b		       00		      byte.b	0
    233  ab4c		       00		      byte.b	0
    234  ab4d		       00		      byte.b	0
    235  ab4e		       00		      byte.b	0
    236  ab4f		       00		      byte.b	0
    237  ab50		       00		      byte.b	0
    238  ab51		       00		      byte.b	0
    239  ab52		       00		      byte.b	0
    240  ab53		       00		      byte.b	0
    241  ab54		       00		      byte.b	0
    242  ab55		       00		      byte.b	0
    243  ab56		       00		      byte.b	0
    244  ab57		       00		      byte.b	0
    245  ab58		       00		      byte.b	0
    246  ab59		       00		      byte.b	0
    247  ab5a		       00		      byte.b	0
    248  ab5b		       00		      byte.b	0
    249  ab5c		       00		      byte.b	0
    250  ab5d		       00		      byte.b	0
    251  ab5e		       00		      byte.b	0
    252  ab5f		       00		      byte.b	0
    253  ab60		       00		      byte.b	0
    254  ab61		       00		      byte.b	0
    255  ab62		       00		      byte.b	0
    256  ab63		       00		      byte.b	0
    257  ab64		       00		      byte.b	0
    258  ab65		       00		      byte.b	0
    259  ab66		       00		      byte.b	0
    260  ab67		       00		      byte.b	0
    261  ab68		       00		      byte.b	0
    262  ab69		       00		      byte.b	0
    263  ab6a		       00		      byte.b	0
    264  ab6b
    265  ab6b				   voice3lookup_alt
    266  ab6b		       00		      byte.b	0
    267  ab6c		       00		      byte.b	0
    268  ab6d		       00		      byte.b	0
    269  ab6e		       00		      byte.b	0
    270  ab6f		       00		      byte.b	0
    271  ab70		       00		      byte.b	0
    272  ab71		       00		      byte.b	0
    273  ab72		       00		      byte.b	0
    274  ab73		       00		      byte.b	0
    275  ab74		       00		      byte.b	0
    276  ab75		       00		      byte.b	0
    277  ab76		       00		      byte.b	0
    278  ab77		       00		      byte.b	0
    279  ab78		       00		      byte.b	0
    280  ab79		       00		      byte.b	0
    281  ab7a		       00		      byte.b	0
    282  ab7b		       00		      byte.b	0
    283  ab7c		       00		      byte.b	0
    284  ab7d		       00		      byte.b	0
    285  ab7e		       00		      byte.b	0
    286  ab7f		       00		      byte.b	0
    287  ab80		       00		      byte.b	0
    288  ab81		       00		      byte.b	0
    289  ab82		       00		      byte.b	0
    290  ab83		       00		      byte.b	0
    291  ab84		       00		      byte.b	0
    292  ab85		       00		      byte.b	0
    293  ab86		       00		      byte.b	0
    294  ab87		       00		      byte.b	0
    295  ab88		       00		      byte.b	0
    296  ab89		       00		      byte.b	0
    297  ab8a		       00		      byte.b	0
    298  ab8b		       00		      byte.b	0
    299  ab8c		       00		      byte.b	0
    300  ab8d		       00		      byte.b	0
    301  ab8e		       00		      byte.b	0
    302  ab8f		       00		      byte.b	0
    303  ab90		       00		      byte.b	0
    304  ab91		       00		      byte.b	0
    305  ab92		       00		      byte.b	0
    306  ab93		       00		      byte.b	0
    307  ab94		       00		      byte.b	0
    308  ab95		       00		      byte.b	0
    309  ab96		       00		      byte.b	0
    310  ab97		       00		      byte.b	0
    311  ab98		       00		      byte.b	0
    312  ab99		       00		      byte.b	0
    313  ab9a		       00		      byte.b	0
    314  ab9b		       ff		      byte.b	255
    315  ab9c		       86		      byte.b	134
    316  ab9d		       8d		      byte.b	141
    317  ab9e		       93		      byte.b	147
    318  ab9f		       99		      byte.b	153
    319  aba0		       9f		      byte.b	159
    320  aba1		       a4		      byte.b	164
    321  aba2		       aa		      byte.b	170
    322  aba3		       ae		      byte.b	174
    323  aba4		       b3		      byte.b	179
    324  aba5		       b7		      byte.b	183
    325  aba6		       bb		      byte.b	187
    326  aba7		       bf		      byte.b	191
    327  aba8		       c3		      byte.b	195
    328  aba9		       c6		      byte.b	198
    329  abaa		       c9		      byte.b	201
    330  abab		       cc		      byte.b	204
    331  abac		       cf		      byte.b	207
    332  abad		       d2		      byte.b	210
    333  abae		       d4		      byte.b	212
    334  abaf		       d7		      byte.b	215
    335  abb0		       d9		      byte.b	217
    336  abb1		       db		      byte.b	219
    337  abb2		       dd		      byte.b	221
    338  abb3		       df		      byte.b	223
    339  abb4		       e1		      byte.b	225
    340  abb5		       e2		      byte.b	226
    341  abb6		       e4		      byte.b	228
    342  abb7		       e6		      byte.b	230
    343  abb8		       e7		      byte.b	231
    344  abb9		       e8		      byte.b	232
    345  abba		       ea		      byte.b	234
    346  abbb		       eb		      byte.b	235
    347  abbc		       ec		      byte.b	236
    348  abbd		       ed		      byte.b	237
    349  abbe		       ee		      byte.b	238
    350  abbf		       ef		      byte.b	239
    351  abc0		       00		      byte.b	0
    352  abc1		       00		      byte.b	0
    353  abc2		       00		      byte.b	0
    354  abc3		       00		      byte.b	0
    355  abc4		       00		      byte.b	0
    356  abc5		       00		      byte.b	0
    357  abc6		       00		      byte.b	0
    358  abc7		       00		      byte.b	0
    359  abc8		       00		      byte.b	0
    360  abc9		       00		      byte.b	0
    361  abca		       00		      byte.b	0
    362  abcb		       00		      byte.b	0
    363  abcc		       00		      byte.b	0
    364  abcd		       00		      byte.b	0
    365  abce		       00		      byte.b	0
    366  abcf		       00		      byte.b	0
    367  abd0		       00		      byte.b	0
    368  abd1		       00		      byte.b	0
    369  abd2		       00		      byte.b	0
    370  abd3		       00		      byte.b	0
    371  abd4		       00		      byte.b	0
    372  abd5		       00		      byte.b	0
    373  abd6		       00		      byte.b	0
    374  abd7		       00		      byte.b	0
    375  abd8		       00		      byte.b	0
    376  abd9		       00		      byte.b	0
    377  abda		       00		      byte.b	0
    378  abdb		       00		      byte.b	0
    379  abdc		       00		      byte.b	0
    380  abdd		       00		      byte.b	0
    381  abde		       00		      byte.b	0
    382  abdf		       00		      byte.b	0
    383  abe0		       00		      byte.b	0
    384  abe1		       00		      byte.b	0
    385  abe2		       00		      byte.b	0
    386  abe3		       00		      byte.b	0
    387  abe4		       00		      byte.b	0
    388  abe5		       00		      byte.b	0
    389  abe6		       00		      byte.b	0
    390  abe7		       00		      byte.b	0
    391  abe8		       00		      byte.b	0
    392  abe9		       00		      byte.b	0
    393  abea		       00		      byte.b	0
    394  abeb
    395  abeb
    396  abeb				   voice4lookup_alt
    397  abeb		       00		      byte.b	0
    398  abec		       00		      byte.b	0
    399  abed		       00		      byte.b	0
    400  abee		       00		      byte.b	0
    401  abef		       00		      byte.b	0
    402  abf0		       00		      byte.b	0
    403  abf1		       00		      byte.b	0
    404  abf2		       00		      byte.b	0
    405  abf3		       00		      byte.b	0
    406  abf4		       00		      byte.b	0
    407  abf5		       00		      byte.b	0
    408  abf6		       00		      byte.b	0
    409  abf7		       00		      byte.b	0
    410  abf8		       00		      byte.b	0
    411  abf9		       00		      byte.b	0
    412  abfa		       00		      byte.b	0
    413  abfb		       00		      byte.b	0
    414  abfc		       00		      byte.b	0
    415  abfd		       00		      byte.b	0
    416  abfe		       00		      byte.b	0
    417  abff		       00		      byte.b	0
    418  ac00		       00		      byte.b	0
    419  ac01		       00		      byte.b	0
    420  ac02		       00		      byte.b	0
    421  ac03		       00		      byte.b	0
    422  ac04		       00		      byte.b	0
    423  ac05		       00		      byte.b	0
    424  ac06		       00		      byte.b	0
    425  ac07		       00		      byte.b	0
    426  ac08		       00		      byte.b	0
    427  ac09		       00		      byte.b	0
    428  ac0a		       00		      byte.b	0
    429  ac0b		       00		      byte.b	0
    430  ac0c		       00		      byte.b	0
    431  ac0d		       00		      byte.b	0
    432  ac0e		       00		      byte.b	0
    433  ac0f		       ff		      byte.b	255
    434  ac10		       86		      byte.b	134
    435  ac11		       8d		      byte.b	141
    436  ac12		       93		      byte.b	147
    437  ac13		       99		      byte.b	153
    438  ac14		       9f		      byte.b	159
    439  ac15		       a4		      byte.b	164
    440  ac16		       aa		      byte.b	170
    441  ac17		       ae		      byte.b	174
    442  ac18		       b3		      byte.b	179
    443  ac19		       b7		      byte.b	183
    444  ac1a		       bb		      byte.b	187
    445  ac1b		       bf		      byte.b	191
    446  ac1c		       c3		      byte.b	195
    447  ac1d		       c6		      byte.b	198
    448  ac1e		       c9		      byte.b	201
    449  ac1f		       cc		      byte.b	204
    450  ac20		       cf		      byte.b	207
    451  ac21		       d2		      byte.b	210
    452  ac22		       d4		      byte.b	212
    453  ac23		       d7		      byte.b	215
    454  ac24		       d9		      byte.b	217
    455  ac25		       db		      byte.b	219
    456  ac26		       dd		      byte.b	221
    457  ac27		       df		      byte.b	223
    458  ac28		       e1		      byte.b	225
    459  ac29		       e2		      byte.b	226
    460  ac2a		       e4		      byte.b	228
    461  ac2b		       e6		      byte.b	230
    462  ac2c		       e7		      byte.b	231
    463  ac2d		       e8		      byte.b	232
    464  ac2e		       ea		      byte.b	234
    465  ac2f		       eb		      byte.b	235
    466  ac30		       ec		      byte.b	236
    467  ac31		       ed		      byte.b	237
    468  ac32		       ee		      byte.b	238
    469  ac33		       ef		      byte.b	239
    470  ac34		       00		      byte.b	0
    471  ac35		       00		      byte.b	0
    472  ac36		       00		      byte.b	0
    473  ac37		       00		      byte.b	0
    474  ac38		       00		      byte.b	0
    475  ac39		       00		      byte.b	0
    476  ac3a		       00		      byte.b	0
    477  ac3b		       00		      byte.b	0
    478  ac3c		       00		      byte.b	0
    479  ac3d		       00		      byte.b	0
    480  ac3e		       00		      byte.b	0
    481  ac3f		       00		      byte.b	0
    482  ac40		       00		      byte.b	0
    483  ac41		       00		      byte.b	0
    484  ac42		       00		      byte.b	0
    485  ac43		       00		      byte.b	0
    486  ac44		       00		      byte.b	0
    487  ac45		       00		      byte.b	0
    488  ac46		       00		      byte.b	0
    489  ac47		       00		      byte.b	0
    490  ac48		       00		      byte.b	0
    491  ac49		       00		      byte.b	0
    492  ac4a		       00		      byte.b	0
    493  ac4b		       00		      byte.b	0
    494  ac4c		       00		      byte.b	0
    495  ac4d		       00		      byte.b	0
    496  ac4e		       00		      byte.b	0
    497  ac4f		       00		      byte.b	0
    498  ac50		       00		      byte.b	0
    499  ac51		       00		      byte.b	0
    500  ac52		       00		      byte.b	0
    501  ac53		       00		      byte.b	0
    502  ac54		       00		      byte.b	0
    503  ac55		       00		      byte.b	0
    504  ac56		       00		      byte.b	0
    505  ac57		       00		      byte.b	0
    506  ac58		       00		      byte.b	0
    507  ac59		       00		      byte.b	0
    508  ac5a		       00		      byte.b	0
    509  ac5b		       00		      byte.b	0
    510  ac5c		       00		      byte.b	0
    511  ac5d		       00		      byte.b	0
    512  ac5e		       00		      byte.b	0
    513  ac5f		       00		      byte.b	0
    514  ac60		       00		      byte.b	0
    515  ac61		       00		      byte.b	0
    516  ac62		       00		      byte.b	0
    517  ac63		       00		      byte.b	0
    518  ac64		       00		      byte.b	0
    519  ac65		       00		      byte.b	0
    520  ac66		       00		      byte.b	0
    521  ac67		       00		      byte.b	0
    522  ac68		       00		      byte.b	0
    523  ac69		       00		      byte.b	0
    524  ac6a		       00		      byte.b	0
    525  ac6b
    526  ac6b							; EOF!
------- FILE vicmidi.asm
    697  ac6b
    698  ac6b							; EOF!
